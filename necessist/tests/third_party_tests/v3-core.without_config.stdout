$DIR/test/BitMath.spec.ts:20:27-20:49: `.mostSignificantBit(0)`
$DIR/test/BitMath.spec.ts:23:27-23:49: `.mostSignificantBit(1)`
$DIR/test/BitMath.spec.ts:26:27-26:49: `.mostSignificantBit(2)`
$DIR/test/BitMath.spec.ts:29:36-31:8: `.all(
        [...Array(255)].map((_, i) => bitMath.mostSignificantBit(BigNumber.from(2).pow(i)))
      )`
$DIR/test/BitMath.spec.ts:30:24-30:92: `.map((_, i) => bitMath.mostSignificantBit(BigNumber.from(2).pow(i)))`
$DIR/test/BitMath.spec.ts:30:46-30:91: `.mostSignificantBit(BigNumber.from(2).pow(i))`
$DIR/test/BitMath.spec.ts:30:75-30:83: `.from(2)`
$DIR/test/BitMath.spec.ts:30:83-30:90: `.pow(i)`
$DIR/test/BitMath.spec.ts:35:27-35:81: `.mostSignificantBit(BigNumber.from(2).pow(256).sub(1))`
$DIR/test/BitMath.spec.ts:35:56-35:64: `.from(2)`
$DIR/test/BitMath.spec.ts:35:64-35:73: `.pow(256)`
$DIR/test/BitMath.spec.ts:35:73-35:80: `.sub(1)`
$DIR/test/BitMath.spec.ts:39:7-39:90: `await snapshotGasCost(bitMath.getGasCostOfMostSignificantBit(BigNumber.from(3568)))`
$DIR/test/BitMath.spec.ts:39:36-39:89: `.getGasCostOfMostSignificantBit(BigNumber.from(3568))`
$DIR/test/BitMath.spec.ts:39:77-39:88: `.from(3568)`
$DIR/test/BitMath.spec.ts:42:7-42:103: `await snapshotGasCost(bitMath.getGasCostOfMostSignificantBit(BigNumber.from(2).pow(128).sub(1)))`
$DIR/test/BitMath.spec.ts:42:36-42:102: `.getGasCostOfMostSignificantBit(BigNumber.from(2).pow(128).sub(1))`
$DIR/test/BitMath.spec.ts:42:77-42:85: `.from(2)`
$DIR/test/BitMath.spec.ts:42:85-42:94: `.pow(128)`
$DIR/test/BitMath.spec.ts:42:94-42:101: `.sub(1)`
$DIR/test/BitMath.spec.ts:45:7-45:103: `await snapshotGasCost(bitMath.getGasCostOfMostSignificantBit(BigNumber.from(2).pow(256).sub(1)))`
$DIR/test/BitMath.spec.ts:45:36-45:102: `.getGasCostOfMostSignificantBit(BigNumber.from(2).pow(256).sub(1))`
$DIR/test/BitMath.spec.ts:45:77-45:85: `.from(2)`
$DIR/test/BitMath.spec.ts:45:85-45:94: `.pow(256)`
$DIR/test/BitMath.spec.ts:45:94-45:101: `.sub(1)`
$DIR/test/BitMath.spec.ts:51:27-51:50: `.leastSignificantBit(0)`
$DIR/test/BitMath.spec.ts:54:27-54:50: `.leastSignificantBit(1)`
$DIR/test/BitMath.spec.ts:57:27-57:50: `.leastSignificantBit(2)`
$DIR/test/BitMath.spec.ts:60:36-62:8: `.all(
        [...Array(255)].map((_, i) => bitMath.leastSignificantBit(BigNumber.from(2).pow(i)))
      )`
$DIR/test/BitMath.spec.ts:61:24-61:93: `.map((_, i) => bitMath.leastSignificantBit(BigNumber.from(2).pow(i)))`
$DIR/test/BitMath.spec.ts:61:46-61:92: `.leastSignificantBit(BigNumber.from(2).pow(i))`
$DIR/test/BitMath.spec.ts:61:76-61:84: `.from(2)`
$DIR/test/BitMath.spec.ts:61:84-61:91: `.pow(i)`
$DIR/test/BitMath.spec.ts:66:27-66:82: `.leastSignificantBit(BigNumber.from(2).pow(256).sub(1))`
$DIR/test/BitMath.spec.ts:66:57-66:65: `.from(2)`
$DIR/test/BitMath.spec.ts:66:65-66:74: `.pow(256)`
$DIR/test/BitMath.spec.ts:66:74-66:81: `.sub(1)`
$DIR/test/BitMath.spec.ts:70:7-70:91: `await snapshotGasCost(bitMath.getGasCostOfLeastSignificantBit(BigNumber.from(3568)))`
$DIR/test/BitMath.spec.ts:70:36-70:90: `.getGasCostOfLeastSignificantBit(BigNumber.from(3568))`
$DIR/test/BitMath.spec.ts:70:78-70:89: `.from(3568)`
$DIR/test/BitMath.spec.ts:73:7-73:104: `await snapshotGasCost(bitMath.getGasCostOfLeastSignificantBit(BigNumber.from(2).pow(128).sub(1)))`
$DIR/test/BitMath.spec.ts:73:36-73:103: `.getGasCostOfLeastSignificantBit(BigNumber.from(2).pow(128).sub(1))`
$DIR/test/BitMath.spec.ts:73:78-73:86: `.from(2)`
$DIR/test/BitMath.spec.ts:73:86-73:95: `.pow(128)`
$DIR/test/BitMath.spec.ts:73:95-73:102: `.sub(1)`
$DIR/test/BitMath.spec.ts:76:7-76:104: `await snapshotGasCost(bitMath.getGasCostOfLeastSignificantBit(BigNumber.from(2).pow(256).sub(1)))`
$DIR/test/BitMath.spec.ts:76:36-76:103: `.getGasCostOfLeastSignificantBit(BigNumber.from(2).pow(256).sub(1))`
$DIR/test/BitMath.spec.ts:76:78-76:86: `.from(2)`
$DIR/test/BitMath.spec.ts:76:86-76:95: `.pow(256)`
$DIR/test/BitMath.spec.ts:76:95-76:102: `.sub(1)`
$DIR/test/FullMath.spec.ts:23:28-23:47: `.mulDiv(Q128, 5, 0)`
$DIR/test/FullMath.spec.ts:26:28-26:50: `.mulDiv(Q128, Q128, 0)`
$DIR/test/FullMath.spec.ts:29:28-29:50: `.mulDiv(Q128, Q128, 1)`
$DIR/test/FullMath.spec.ts:32:28-32:50: `.mulDiv(Q128, Q128, 1)`
$DIR/test/FullMath.spec.ts:35:28-35:78: `.mulDiv(MaxUint256, MaxUint256, MaxUint256.sub(1))`
$DIR/test/FullMath.spec.ts:35:70-35:77: `.sub(1)`
$DIR/test/FullMath.spec.ts:39:28-39:71: `.mulDiv(MaxUint256, MaxUint256, MaxUint256)`
$DIR/test/FullMath.spec.ts:43:26-43:33: `.div(3)`
$DIR/test/FullMath.spec.ts:45:23-49:10: `.mulDiv(
          Q128,
          /*0.5=*/ BigNumber.from(50).mul(Q128).div(100),
          /*1.5=*/ BigNumber.from(150).mul(Q128).div(100)
        )`
$DIR/test/FullMath.spec.ts:47:29-47:38: `.from(50)`
$DIR/test/FullMath.spec.ts:47:38-47:48: `.mul(Q128)`
$DIR/test/FullMath.spec.ts:47:48-47:57: `.div(100)`
$DIR/test/FullMath.spec.ts:48:29-48:39: `.from(150)`
$DIR/test/FullMath.spec.ts:48:39-48:49: `.mul(Q128)`
$DIR/test/FullMath.spec.ts:48:49-48:58: `.div(100)`
$DIR/test/FullMath.spec.ts:54:31-54:42: `.from(4375)`
$DIR/test/FullMath.spec.ts:54:42-54:52: `.mul(Q128)`
$DIR/test/FullMath.spec.ts:54:52-54:62: `.div(1000)`
$DIR/test/FullMath.spec.ts:55:28-55:100: `.mulDiv(Q128, BigNumber.from(35).mul(Q128), BigNumber.from(8).mul(Q128))`
$DIR/test/FullMath.spec.ts:55:51-55:60: `.from(35)`
$DIR/test/FullMath.spec.ts:55:60-55:70: `.mul(Q128)`
$DIR/test/FullMath.spec.ts:55:81-55:89: `.from(8)`
$DIR/test/FullMath.spec.ts:55:89-55:99: `.mul(Q128)`
$DIR/test/FullMath.spec.ts:59:31-59:39: `.from(1)`
$DIR/test/FullMath.spec.ts:59:39-59:49: `.mul(Q128)`
$DIR/test/FullMath.spec.ts:59:49-59:56: `.div(3)`
$DIR/test/FullMath.spec.ts:60:28-60:105: `.mulDiv(Q128, BigNumber.from(1000).mul(Q128), BigNumber.from(3000).mul(Q128))`
$DIR/test/FullMath.spec.ts:60:51-60:62: `.from(1000)`
$DIR/test/FullMath.spec.ts:60:62-60:72: `.mul(Q128)`
$DIR/test/FullMath.spec.ts:60:83-60:94: `.from(3000)`
$DIR/test/FullMath.spec.ts:60:94-60:104: `.mul(Q128)`
$DIR/test/FullMath.spec.ts:66:28-66:57: `.mulDivRoundingUp(Q128, 5, 0)`
$DIR/test/FullMath.spec.ts:69:28-69:60: `.mulDivRoundingUp(Q128, Q128, 0)`
$DIR/test/FullMath.spec.ts:72:28-72:60: `.mulDivRoundingUp(Q128, Q128, 1)`
$DIR/test/FullMath.spec.ts:75:28-75:88: `.mulDivRoundingUp(MaxUint256, MaxUint256, MaxUint256.sub(1))`
$DIR/test/FullMath.spec.ts:75:80-75:87: `.sub(1)`
$DIR/test/FullMath.spec.ts:80:17-84:10: `.mulDivRoundingUp(
          '535006138814359',
          '432862656469423142931042426214547535783388063929571229938474969',
          '2'
        )`
$DIR/test/FullMath.spec.ts:90:17-94:10: `.mulDivRoundingUp(
          '115792089237316195423570985008687907853269984659341747863450311749907997002549',
          '115792089237316195423570985008687907853269984659341747863450311749907997002550',
          '115792089237316195423570985008687907853269984653042931687443039491902864365164'
        )`
$DIR/test/FullMath.spec.ts:99:28-99:81: `.mulDivRoundingUp(MaxUint256, MaxUint256, MaxUint256)`
$DIR/test/FullMath.spec.ts:103:26-103:33: `.div(3)`
$DIR/test/FullMath.spec.ts:103:33-103:40: `.add(1)`
$DIR/test/FullMath.spec.ts:105:23-109:10: `.mulDivRoundingUp(
          Q128,
          /*0.5=*/ BigNumber.from(50).mul(Q128).div(100),
          /*1.5=*/ BigNumber.from(150).mul(Q128).div(100)
        )`
$DIR/test/FullMath.spec.ts:107:29-107:38: `.from(50)`
$DIR/test/FullMath.spec.ts:107:38-107:48: `.mul(Q128)`
$DIR/test/FullMath.spec.ts:107:48-107:57: `.div(100)`
$DIR/test/FullMath.spec.ts:108:29-108:39: `.from(150)`
$DIR/test/FullMath.spec.ts:108:39-108:49: `.mul(Q128)`
$DIR/test/FullMath.spec.ts:108:49-108:58: `.div(100)`
$DIR/test/FullMath.spec.ts:114:31-114:42: `.from(4375)`
$DIR/test/FullMath.spec.ts:114:42-114:52: `.mul(Q128)`
$DIR/test/FullMath.spec.ts:114:52-114:62: `.div(1000)`
$DIR/test/FullMath.spec.ts:115:28-115:110: `.mulDivRoundingUp(Q128, BigNumber.from(35).mul(Q128), BigNumber.from(8).mul(Q128))`
$DIR/test/FullMath.spec.ts:115:61-115:70: `.from(35)`
$DIR/test/FullMath.spec.ts:115:70-115:80: `.mul(Q128)`
$DIR/test/FullMath.spec.ts:115:91-115:99: `.from(8)`
$DIR/test/FullMath.spec.ts:115:99-115:109: `.mul(Q128)`
$DIR/test/FullMath.spec.ts:121:31-121:39: `.from(1)`
$DIR/test/FullMath.spec.ts:121:39-121:49: `.mul(Q128)`
$DIR/test/FullMath.spec.ts:121:49-121:56: `.div(3)`
$DIR/test/FullMath.spec.ts:121:56-121:63: `.add(1)`
$DIR/test/FullMath.spec.ts:123:23-123:110: `.mulDivRoundingUp(Q128, BigNumber.from(1000).mul(Q128), BigNumber.from(3000).mul(Q128))`
$DIR/test/FullMath.spec.ts:123:56-123:67: `.from(1000)`
$DIR/test/FullMath.spec.ts:123:67-123:77: `.mul(Q128)`
$DIR/test/FullMath.spec.ts:123:88-123:99: `.from(3000)`
$DIR/test/FullMath.spec.ts:123:99-123:109: `.mul(Q128)`
$DIR/test/LiquidityMath.spec.ts:20:33-20:48: `.addDelta(1, 0)`
$DIR/test/LiquidityMath.spec.ts:23:33-23:49: `.addDelta(1, -1)`
$DIR/test/LiquidityMath.spec.ts:26:33-26:48: `.addDelta(1, 1)`
$DIR/test/LiquidityMath.spec.ts:29:33-29:82: `.addDelta(BigNumber.from(2).pow(128).sub(15), 15)`
$DIR/test/LiquidityMath.spec.ts:29:52-29:60: `.from(2)`
$DIR/test/LiquidityMath.spec.ts:29:60-29:69: `.pow(128)`
$DIR/test/LiquidityMath.spec.ts:29:69-29:77: `.sub(15)`
$DIR/test/LiquidityMath.spec.ts:32:33-32:49: `.addDelta(0, -1)`
$DIR/test/LiquidityMath.spec.ts:35:33-35:49: `.addDelta(3, -4)`
$DIR/test/LiquidityMath.spec.ts:38:7-38:71: `await snapshotGasCost(liquidityMath.getGasCostOfAddDelta(15, 4))`
$DIR/test/LiquidityMath.spec.ts:38:42-38:70: `.getGasCostOfAddDelta(15, 4)`
$DIR/test/LiquidityMath.spec.ts:41:7-41:72: `await snapshotGasCost(liquidityMath.getGasCostOfAddDelta(15, -4))`
$DIR/test/LiquidityMath.spec.ts:41:42-41:71: `.getGasCostOfAddDelta(15, -4)`
$DIR/test/NoDelegateCall.spec.ts:36:5-38:6: `await snapshotGasCost(
      (await base.getGasCostOfCannotBeDelegateCalled()).sub(await base.getGasCostOfCanBeDelegateCalled())
    )`
$DIR/test/NoDelegateCall.spec.ts:37:18-37:55: `.getGasCostOfCannotBeDelegateCalled()`
$DIR/test/NoDelegateCall.spec.ts:37:56-37:106: `.sub(await base.getGasCostOfCanBeDelegateCalled())`
$DIR/test/NoDelegateCall.spec.ts:37:71-37:105: `.getGasCostOfCanBeDelegateCalled()`
$DIR/test/NoDelegateCall.spec.ts:42:5-42:38: `await proxy.canBeDelegateCalled()`
$DIR/test/NoDelegateCall.spec.ts:42:16-42:38: `.canBeDelegateCalled()`
$DIR/test/NoDelegateCall.spec.ts:45:23-45:48: `.cannotBeDelegateCalled()`
$DIR/test/NoDelegateCall.spec.ts:49:5-49:49: `await base.callsIntoNoDelegateCallFunction()`
$DIR/test/NoDelegateCall.spec.ts:49:15-49:49: `.callsIntoNoDelegateCallFunction()`
$DIR/test/NoDelegateCall.spec.ts:52:23-52:57: `.callsIntoNoDelegateCallFunction()`
$DIR/test/Oracle.spec.ts:40:7-40:66: `await oracle.initialize({ liquidity: 1, tick: 1, time: 1 })`
$DIR/test/Oracle.spec.ts:40:19-40:66: `.initialize({ liquidity: 1, tick: 1, time: 1 })`
$DIR/test/Oracle.spec.ts:41:26-41:34: `.index()`
$DIR/test/Oracle.spec.ts:44:7-44:66: `await oracle.initialize({ liquidity: 1, tick: 1, time: 1 })`
$DIR/test/Oracle.spec.ts:44:19-44:66: `.initialize({ liquidity: 1, tick: 1, time: 1 })`
$DIR/test/Oracle.spec.ts:45:26-45:40: `.cardinality()`
$DIR/test/Oracle.spec.ts:48:7-48:66: `await oracle.initialize({ liquidity: 1, tick: 1, time: 1 })`
$DIR/test/Oracle.spec.ts:48:19-48:66: `.initialize({ liquidity: 1, tick: 1, time: 1 })`
$DIR/test/Oracle.spec.ts:49:26-49:44: `.cardinalityNext()`
$DIR/test/Oracle.spec.ts:52:7-52:66: `await oracle.initialize({ liquidity: 1, tick: 1, time: 1 })`
$DIR/test/Oracle.spec.ts:52:19-52:66: `.initialize({ liquidity: 1, tick: 1, time: 1 })`
$DIR/test/Oracle.spec.ts:53:7-58:9: `checkObservationEquals(await oracle.observations(0), {
        initialized: true,
        blockTimestamp: 1,
        tickCumulative: 0,
        secondsPerLiquidityCumulativeX128: 0,
      })`
$DIR/test/Oracle.spec.ts:53:42-53:58: `.observations(0)`
$DIR/test/Oracle.spec.ts:61:7-61:83: `await snapshotGasCost(oracle.initialize({ liquidity: 1, tick: 1, time: 1 }))`
$DIR/test/Oracle.spec.ts:61:35-61:82: `.initialize({ liquidity: 1, tick: 1, time: 1 })`
$DIR/test/Oracle.spec.ts:72:7-72:27: `await oracle.grow(5)`
$DIR/test/Oracle.spec.ts:72:19-72:27: `.grow(5)`
$DIR/test/Oracle.spec.ts:73:26-73:34: `.index()`
$DIR/test/Oracle.spec.ts:74:26-74:40: `.cardinality()`
$DIR/test/Oracle.spec.ts:75:26-75:44: `.cardinalityNext()`
$DIR/test/Oracle.spec.ts:79:7-79:27: `await oracle.grow(5)`
$DIR/test/Oracle.spec.ts:79:19-79:27: `.grow(5)`
$DIR/test/Oracle.spec.ts:80:7-85:9: `checkObservationEquals(await oracle.observations(0), {
        secondsPerLiquidityCumulativeX128: 0,
        tickCumulative: 0,
        blockTimestamp: 0,
        initialized: true,
      })`
$DIR/test/Oracle.spec.ts:80:42-80:58: `.observations(0)`
$DIR/test/Oracle.spec.ts:89:7-89:27: `await oracle.grow(5)`
$DIR/test/Oracle.spec.ts:89:19-89:27: `.grow(5)`
$DIR/test/Oracle.spec.ts:90:7-90:27: `await oracle.grow(3)`
$DIR/test/Oracle.spec.ts:90:19-90:27: `.grow(3)`
$DIR/test/Oracle.spec.ts:91:26-91:34: `.index()`
$DIR/test/Oracle.spec.ts:92:26-92:40: `.cardinality()`
$DIR/test/Oracle.spec.ts:93:26-93:44: `.cardinalityNext()`
$DIR/test/Oracle.spec.ts:97:7-97:27: `await oracle.grow(5)`
$DIR/test/Oracle.spec.ts:97:19-97:27: `.grow(5)`
$DIR/test/Oracle.spec.ts:99:9-104:11: `checkObservationEquals(await oracle.observations(i), {
          secondsPerLiquidityCumulativeX128: 0,
          tickCumulative: 0,
          blockTimestamp: 1,
          initialized: false,
        })`
$DIR/test/Oracle.spec.ts:99:44-99:60: `.observations(i)`
$DIR/test/Oracle.spec.ts:109:7-109:27: `await oracle.grow(2)`
$DIR/test/Oracle.spec.ts:109:19-109:27: `.grow(2)`
$DIR/test/Oracle.spec.ts:110:7-110:71: `await oracle.update({ advanceTimeBy: 2, liquidity: 1, tick: 1 })`
$DIR/test/Oracle.spec.ts:110:19-110:71: `.update({ advanceTimeBy: 2, liquidity: 1, tick: 1 })`
$DIR/test/Oracle.spec.ts:111:7-111:71: `await oracle.update({ advanceTimeBy: 2, liquidity: 1, tick: 1 })`
$DIR/test/Oracle.spec.ts:111:19-111:71: `.update({ advanceTimeBy: 2, liquidity: 1, tick: 1 })`
$DIR/test/Oracle.spec.ts:112:26-112:34: `.index()`
$DIR/test/Oracle.spec.ts:113:7-113:27: `await oracle.grow(3)`
$DIR/test/Oracle.spec.ts:113:19-113:27: `.grow(3)`
$DIR/test/Oracle.spec.ts:114:26-114:34: `.index()`
$DIR/test/Oracle.spec.ts:115:26-115:40: `.cardinality()`
$DIR/test/Oracle.spec.ts:116:26-116:44: `.cardinalityNext()`
$DIR/test/Oracle.spec.ts:120:7-120:44: `await snapshotGasCost(oracle.grow(2))`
$DIR/test/Oracle.spec.ts:120:35-120:43: `.grow(2)`
$DIR/test/Oracle.spec.ts:124:7-124:45: `await snapshotGasCost(oracle.grow(11))`
$DIR/test/Oracle.spec.ts:124:35-124:44: `.grow(11)`
$DIR/test/Oracle.spec.ts:128:7-128:27: `await oracle.grow(2)`
$DIR/test/Oracle.spec.ts:128:19-128:27: `.grow(2)`
$DIR/test/Oracle.spec.ts:129:7-129:44: `await snapshotGasCost(oracle.grow(3))`
$DIR/test/Oracle.spec.ts:129:35-129:43: `.grow(3)`
$DIR/test/Oracle.spec.ts:133:7-133:27: `await oracle.grow(2)`
$DIR/test/Oracle.spec.ts:133:19-133:27: `.grow(2)`
$DIR/test/Oracle.spec.ts:134:7-134:45: `await snapshotGasCost(oracle.grow(12))`
$DIR/test/Oracle.spec.ts:134:35-134:44: `.grow(12)`
$DIR/test/Oracle.spec.ts:146:7-146:71: `await oracle.update({ advanceTimeBy: 1, tick: 2, liquidity: 5 })`
$DIR/test/Oracle.spec.ts:146:19-146:71: `.update({ advanceTimeBy: 1, tick: 2, liquidity: 5 })`
$DIR/test/Oracle.spec.ts:147:26-147:34: `.index()`
$DIR/test/Oracle.spec.ts:148:7-153:9: `checkObservationEquals(await oracle.observations(0), {
        initialized: true,
        secondsPerLiquidityCumulativeX128: '340282366920938463463374607431768211456',
        tickCumulative: 0,
        blockTimestamp: 1,
      })`
$DIR/test/Oracle.spec.ts:148:42-148:58: `.observations(0)`
$DIR/test/Oracle.spec.ts:154:7-154:72: `await oracle.update({ advanceTimeBy: 5, tick: -1, liquidity: 8 })`
$DIR/test/Oracle.spec.ts:154:19-154:72: `.update({ advanceTimeBy: 5, tick: -1, liquidity: 8 })`
$DIR/test/Oracle.spec.ts:155:26-155:34: `.index()`
$DIR/test/Oracle.spec.ts:156:7-161:9: `checkObservationEquals(await oracle.observations(0), {
        initialized: true,
        secondsPerLiquidityCumulativeX128: '680564733841876926926749214863536422912',
        tickCumulative: 10,
        blockTimestamp: 6,
      })`
$DIR/test/Oracle.spec.ts:156:42-156:58: `.observations(0)`
$DIR/test/Oracle.spec.ts:162:7-162:71: `await oracle.update({ advanceTimeBy: 3, tick: 2, liquidity: 3 })`
$DIR/test/Oracle.spec.ts:162:19-162:71: `.update({ advanceTimeBy: 3, tick: 2, liquidity: 3 })`
$DIR/test/Oracle.spec.ts:163:26-163:34: `.index()`
$DIR/test/Oracle.spec.ts:164:7-169:9: `checkObservationEquals(await oracle.observations(0), {
        initialized: true,
        secondsPerLiquidityCumulativeX128: '808170621437228850725514692650449502208',
        tickCumulative: 7,
        blockTimestamp: 9,
      })`
$DIR/test/Oracle.spec.ts:164:42-164:58: `.observations(0)`
$DIR/test/Oracle.spec.ts:173:7-173:27: `await oracle.grow(2)`
$DIR/test/Oracle.spec.ts:173:19-173:27: `.grow(2)`
$DIR/test/Oracle.spec.ts:174:7-174:71: `await oracle.update({ advanceTimeBy: 1, tick: 3, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:174:19-174:71: `.update({ advanceTimeBy: 1, tick: 3, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:175:26-175:34: `.index()`
$DIR/test/Oracle.spec.ts:176:7-176:72: `await oracle.update({ advanceTimeBy: 0, tick: -5, liquidity: 9 })`
$DIR/test/Oracle.spec.ts:176:19-176:72: `.update({ advanceTimeBy: 0, tick: -5, liquidity: 9 })`
$DIR/test/Oracle.spec.ts:177:26-177:34: `.index()`
$DIR/test/Oracle.spec.ts:181:7-181:27: `await oracle.grow(3)`
$DIR/test/Oracle.spec.ts:181:19-181:27: `.grow(3)`
$DIR/test/Oracle.spec.ts:182:7-182:71: `await oracle.update({ advanceTimeBy: 6, tick: 3, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:182:19-182:71: `.update({ advanceTimeBy: 6, tick: 3, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:183:26-183:34: `.index()`
$DIR/test/Oracle.spec.ts:184:7-184:72: `await oracle.update({ advanceTimeBy: 4, tick: -5, liquidity: 9 })`
$DIR/test/Oracle.spec.ts:184:19-184:72: `.update({ advanceTimeBy: 4, tick: -5, liquidity: 9 })`
$DIR/test/Oracle.spec.ts:186:26-186:34: `.index()`
$DIR/test/Oracle.spec.ts:187:7-192:9: `checkObservationEquals(await oracle.observations(1), {
        tickCumulative: 0,
        secondsPerLiquidityCumulativeX128: '2041694201525630780780247644590609268736',
        initialized: true,
        blockTimestamp: 6,
      })`
$DIR/test/Oracle.spec.ts:187:42-187:58: `.observations(1)`
$DIR/test/Oracle.spec.ts:196:7-196:27: `await oracle.grow(2)`
$DIR/test/Oracle.spec.ts:196:19-196:27: `.grow(2)`
$DIR/test/Oracle.spec.ts:197:7-197:27: `await oracle.grow(4)`
$DIR/test/Oracle.spec.ts:197:19-197:27: `.grow(4)`
$DIR/test/Oracle.spec.ts:198:26-198:40: `.cardinality()`
$DIR/test/Oracle.spec.ts:199:7-199:71: `await oracle.update({ advanceTimeBy: 3, tick: 5, liquidity: 6 })`
$DIR/test/Oracle.spec.ts:199:19-199:71: `.update({ advanceTimeBy: 3, tick: 5, liquidity: 6 })`
$DIR/test/Oracle.spec.ts:200:26-200:40: `.cardinality()`
$DIR/test/Oracle.spec.ts:201:7-201:71: `await oracle.update({ advanceTimeBy: 4, tick: 6, liquidity: 4 })`
$DIR/test/Oracle.spec.ts:201:19-201:71: `.update({ advanceTimeBy: 4, tick: 6, liquidity: 4 })`
$DIR/test/Oracle.spec.ts:202:26-202:40: `.cardinality()`
$DIR/test/Oracle.spec.ts:203:26-203:34: `.index()`
$DIR/test/Oracle.spec.ts:204:7-209:9: `checkObservationEquals(await oracle.observations(2), {
        secondsPerLiquidityCumulativeX128: '1247702012043441032699040227249816775338',
        tickCumulative: 20,
        initialized: true,
        blockTimestamp: 7,
      })`
$DIR/test/Oracle.spec.ts:204:42-204:58: `.observations(2)`
$DIR/test/Oracle.spec.ts:213:7-213:27: `await oracle.grow(3)`
$DIR/test/Oracle.spec.ts:213:19-213:27: `.grow(3)`
$DIR/test/Oracle.spec.ts:214:7-214:71: `await oracle.update({ advanceTimeBy: 3, tick: 1, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:214:19-214:71: `.update({ advanceTimeBy: 3, tick: 1, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:215:7-215:71: `await oracle.update({ advanceTimeBy: 4, tick: 2, liquidity: 3 })`
$DIR/test/Oracle.spec.ts:215:19-215:71: `.update({ advanceTimeBy: 4, tick: 2, liquidity: 3 })`
$DIR/test/Oracle.spec.ts:216:7-216:71: `await oracle.update({ advanceTimeBy: 5, tick: 3, liquidity: 4 })`
$DIR/test/Oracle.spec.ts:216:19-216:71: `.update({ advanceTimeBy: 5, tick: 3, liquidity: 4 })`
$DIR/test/Oracle.spec.ts:218:26-218:34: `.index()`
$DIR/test/Oracle.spec.ts:220:7-225:9: `checkObservationEquals(await oracle.observations(0), {
        secondsPerLiquidityCumulativeX128: '2268549112806256423089164049545121409706',
        tickCumulative: 14,
        initialized: true,
        blockTimestamp: 12,
      })`
$DIR/test/Oracle.spec.ts:220:42-220:58: `.observations(0)`
$DIR/test/Oracle.spec.ts:229:7-229:27: `await oracle.grow(4)`
$DIR/test/Oracle.spec.ts:229:19-229:27: `.grow(4)`
$DIR/test/Oracle.spec.ts:231:7-231:71: `await oracle.update({ advanceTimeBy: 3, tick: 3, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:231:19-231:71: `.update({ advanceTimeBy: 3, tick: 3, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:232:7-232:72: `await oracle.update({ advanceTimeBy: 4, tick: -7, liquidity: 6 })`
$DIR/test/Oracle.spec.ts:232:19-232:72: `.update({ advanceTimeBy: 4, tick: -7, liquidity: 6 })`
$DIR/test/Oracle.spec.ts:233:7-233:72: `await oracle.update({ advanceTimeBy: 5, tick: -2, liquidity: 4 })`
$DIR/test/Oracle.spec.ts:233:19-233:72: `.update({ advanceTimeBy: 5, tick: -2, liquidity: 4 })`
$DIR/test/Oracle.spec.ts:235:26-235:34: `.index()`
$DIR/test/Oracle.spec.ts:237:7-242:9: `checkObservationEquals(await oracle.observations(1), {
        initialized: true,
        tickCumulative: 0,
        secondsPerLiquidityCumulativeX128: '1020847100762815390390123822295304634368',
        blockTimestamp: 3,
      })`
$DIR/test/Oracle.spec.ts:237:42-237:58: `.observations(1)`
$DIR/test/Oracle.spec.ts:243:7-248:9: `checkObservationEquals(await oracle.observations(2), {
        initialized: true,
        tickCumulative: 12,
        secondsPerLiquidityCumulativeX128: '1701411834604692317316873037158841057280',
        blockTimestamp: 7,
      })`
$DIR/test/Oracle.spec.ts:243:42-243:58: `.observations(2)`
$DIR/test/Oracle.spec.ts:249:7-254:9: `checkObservationEquals(await oracle.observations(3), {
        initialized: true,
        tickCumulative: -23,
        secondsPerLiquidityCumulativeX128: '1984980473705474370203018543351981233493',
        blockTimestamp: 12,
      })`
$DIR/test/Oracle.spec.ts:249:42-249:58: `.observations(3)`
$DIR/test/Oracle.spec.ts:255:7-260:9: `checkObservationEquals(await oracle.observations(4), {
        initialized: false,
        tickCumulative: 0,
        secondsPerLiquidityCumulativeX128: 0,
        blockTimestamp: 0,
      })`
$DIR/test/Oracle.spec.ts:255:42-255:58: `.observations(4)`
$DIR/test/Oracle.spec.ts:284:9-284:68: `await oracle.initialize({ liquidity: 4, tick: 2, time: 5 })`
$DIR/test/Oracle.spec.ts:284:21-284:68: `.initialize({ liquidity: 4, tick: 2, time: 5 })`
$DIR/test/Oracle.spec.ts:289:9-289:78: `await oracle.initialize({ liquidity: 4, tick: 2, time: 2 ** 32 - 1 })`
$DIR/test/Oracle.spec.ts:289:21-289:78: `.initialize({ liquidity: 4, tick: 2, time: 2 ** 32 - 1 })`
$DIR/test/Oracle.spec.ts:290:9-290:36: `await oracle.advanceTime(2)`
$DIR/test/Oracle.spec.ts:290:21-290:36: `.advanceTime(2)`
$DIR/test/Oracle.spec.ts:297:9-297:77: `await oracle.initialize({ liquidity: MaxUint128, tick: 0, time: 0 })`
$DIR/test/Oracle.spec.ts:297:21-297:77: `.initialize({ liquidity: MaxUint128, tick: 0, time: 0 })`
$DIR/test/Oracle.spec.ts:298:9-298:29: `await oracle.grow(2)`
$DIR/test/Oracle.spec.ts:298:21-298:29: `.grow(2)`
$DIR/test/Oracle.spec.ts:299:9-299:74: `await oracle.update({ advanceTimeBy: 13, tick: 0, liquidity: 0 })`
$DIR/test/Oracle.spec.ts:299:21-299:74: `.update({ advanceTimeBy: 13, tick: 0, liquidity: 0 })`
$DIR/test/Oracle.spec.ts:302:10-302:74: `({ secondsPerLiquidityCumulativeX128 } = await observeSingle(6))`
$DIR/test/Oracle.spec.ts:304:10-304:75: `({ secondsPerLiquidityCumulativeX128 } = await observeSingle(12))`
$DIR/test/Oracle.spec.ts:306:10-306:75: `({ secondsPerLiquidityCumulativeX128 } = await observeSingle(13))`
$DIR/test/Oracle.spec.ts:311:9-311:68: `await oracle.initialize({ liquidity: 0, tick: 0, time: 0 })`
$DIR/test/Oracle.spec.ts:311:21-311:68: `.initialize({ liquidity: 0, tick: 0, time: 0 })`
$DIR/test/Oracle.spec.ts:312:9-312:29: `await oracle.grow(2)`
$DIR/test/Oracle.spec.ts:312:21-312:29: `.grow(2)`
$DIR/test/Oracle.spec.ts:313:9-313:83: `await oracle.update({ advanceTimeBy: 13, tick: 0, liquidity: MaxUint128 })`
$DIR/test/Oracle.spec.ts:313:21-313:83: `.update({ advanceTimeBy: 13, tick: 0, liquidity: MaxUint128 })`
$DIR/test/Oracle.spec.ts:316:10-316:74: `({ secondsPerLiquidityCumulativeX128 } = await observeSingle(6))`
$DIR/test/Oracle.spec.ts:318:10-318:75: `({ secondsPerLiquidityCumulativeX128 } = await observeSingle(12))`
$DIR/test/Oracle.spec.ts:320:10-320:75: `({ secondsPerLiquidityCumulativeX128 } = await observeSingle(13))`
$DIR/test/Oracle.spec.ts:325:9-325:68: `await oracle.initialize({ liquidity: 1, tick: 0, time: 0 })`
$DIR/test/Oracle.spec.ts:325:21-325:68: `.initialize({ liquidity: 1, tick: 0, time: 0 })`
$DIR/test/Oracle.spec.ts:326:9-326:29: `await oracle.grow(2)`
$DIR/test/Oracle.spec.ts:326:21-326:29: `.grow(2)`
$DIR/test/Oracle.spec.ts:327:9-327:83: `await oracle.update({ advanceTimeBy: 13, tick: 0, liquidity: MaxUint128 })`
$DIR/test/Oracle.spec.ts:327:21-327:83: `.update({ advanceTimeBy: 13, tick: 0, liquidity: MaxUint128 })`
$DIR/test/Oracle.spec.ts:330:10-330:74: `({ secondsPerLiquidityCumulativeX128 } = await observeSingle(6))`
$DIR/test/Oracle.spec.ts:332:10-332:75: `({ secondsPerLiquidityCumulativeX128 } = await observeSingle(12))`
$DIR/test/Oracle.spec.ts:334:10-334:75: `({ secondsPerLiquidityCumulativeX128 } = await observeSingle(13))`
$DIR/test/Oracle.spec.ts:340:9-340:68: `await oracle.initialize({ liquidity: 0, tick: 0, time: 0 })`
$DIR/test/Oracle.spec.ts:340:21-340:68: `.initialize({ liquidity: 0, tick: 0, time: 0 })`
$DIR/test/Oracle.spec.ts:341:9-341:29: `await oracle.grow(2)`
$DIR/test/Oracle.spec.ts:341:21-341:29: `.grow(2)`
$DIR/test/Oracle.spec.ts:342:9-342:83: `await oracle.update({ advanceTimeBy: 2 ** 32 - 6, tick: 0, liquidity: 0 })`
$DIR/test/Oracle.spec.ts:342:21-342:83: `.update({ advanceTimeBy: 2 ** 32 - 6, tick: 0, liquidity: 0 })`
$DIR/test/Oracle.spec.ts:345:9-346:10: `await oracle.update({ advanceTimeBy: 13, tick: 0, liquidity: 0 })
        ;`
$DIR/test/Oracle.spec.ts:345:21-345:74: `.update({ advanceTimeBy: 13, tick: 0, liquidity: 0 })`
$DIR/test/Oracle.spec.ts:346:10-346:74: `({ secondsPerLiquidityCumulativeX128 } = await observeSingle(0))`
$DIR/test/Oracle.spec.ts:350:10-350:74: `({ secondsPerLiquidityCumulativeX128 } = await observeSingle(3))`
$DIR/test/Oracle.spec.ts:352:10-352:74: `({ secondsPerLiquidityCumulativeX128 } = await observeSingle(8))`
$DIR/test/Oracle.spec.ts:357:9-357:68: `await oracle.initialize({ liquidity: 4, tick: 2, time: 5 })`
$DIR/test/Oracle.spec.ts:357:21-357:68: `.initialize({ liquidity: 4, tick: 2, time: 5 })`
$DIR/test/Oracle.spec.ts:364:9-364:68: `await oracle.initialize({ liquidity: 4, tick: 2, time: 5 })`
$DIR/test/Oracle.spec.ts:364:21-364:68: `.initialize({ liquidity: 4, tick: 2, time: 5 })`
$DIR/test/Oracle.spec.ts:365:9-365:36: `await oracle.advanceTime(3)`
$DIR/test/Oracle.spec.ts:365:21-365:36: `.advanceTime(3)`
$DIR/test/Oracle.spec.ts:370:9-370:68: `await oracle.initialize({ liquidity: 4, tick: 2, time: 5 })`
$DIR/test/Oracle.spec.ts:370:21-370:68: `.initialize({ liquidity: 4, tick: 2, time: 5 })`
$DIR/test/Oracle.spec.ts:371:9-371:36: `await oracle.advanceTime(3)`
$DIR/test/Oracle.spec.ts:371:21-371:36: `.advanceTime(3)`
$DIR/test/Oracle.spec.ts:378:9-378:68: `await oracle.initialize({ liquidity: 4, tick: 2, time: 5 })`
$DIR/test/Oracle.spec.ts:378:21-378:68: `.initialize({ liquidity: 4, tick: 2, time: 5 })`
$DIR/test/Oracle.spec.ts:379:9-379:36: `await oracle.advanceTime(3)`
$DIR/test/Oracle.spec.ts:379:21-379:36: `.advanceTime(3)`
$DIR/test/Oracle.spec.ts:386:9-386:68: `await oracle.initialize({ liquidity: 4, tick: 2, time: 5 })`
$DIR/test/Oracle.spec.ts:386:21-386:68: `.initialize({ liquidity: 4, tick: 2, time: 5 })`
$DIR/test/Oracle.spec.ts:387:9-387:36: `await oracle.advanceTime(3)`
$DIR/test/Oracle.spec.ts:387:21-387:36: `.advanceTime(3)`
$DIR/test/Oracle.spec.ts:394:9-394:69: `await oracle.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:394:21-394:69: `.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:395:9-395:29: `await oracle.grow(2)`
$DIR/test/Oracle.spec.ts:395:21-395:29: `.grow(2)`
$DIR/test/Oracle.spec.ts:396:9-396:73: `await oracle.update({ advanceTimeBy: 4, tick: 1, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:396:21-396:73: `.update({ advanceTimeBy: 4, tick: 1, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:403:9-403:69: `await oracle.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:403:21-403:69: `.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:404:9-404:29: `await oracle.grow(2)`
$DIR/test/Oracle.spec.ts:404:21-404:29: `.grow(2)`
$DIR/test/Oracle.spec.ts:405:9-405:73: `await oracle.update({ advanceTimeBy: 4, tick: 1, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:405:21-405:73: `.update({ advanceTimeBy: 4, tick: 1, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:406:9-406:36: `await oracle.advanceTime(7)`
$DIR/test/Oracle.spec.ts:406:21-406:36: `.advanceTime(7)`
$DIR/test/Oracle.spec.ts:413:9-413:69: `await oracle.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:413:21-413:69: `.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:414:9-414:29: `await oracle.grow(2)`
$DIR/test/Oracle.spec.ts:414:21-414:29: `.grow(2)`
$DIR/test/Oracle.spec.ts:415:9-415:73: `await oracle.update({ advanceTimeBy: 4, tick: 1, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:415:21-415:73: `.update({ advanceTimeBy: 4, tick: 1, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:416:9-416:36: `await oracle.advanceTime(7)`
$DIR/test/Oracle.spec.ts:416:21-416:36: `.advanceTime(7)`
$DIR/test/Oracle.spec.ts:423:9-423:69: `await oracle.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:423:21-423:69: `.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:424:9-424:29: `await oracle.grow(2)`
$DIR/test/Oracle.spec.ts:424:21-424:29: `.grow(2)`
$DIR/test/Oracle.spec.ts:425:9-425:73: `await oracle.update({ advanceTimeBy: 4, tick: 1, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:425:21-425:73: `.update({ advanceTimeBy: 4, tick: 1, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:426:9-426:36: `await oracle.advanceTime(7)`
$DIR/test/Oracle.spec.ts:426:21-426:36: `.advanceTime(7)`
$DIR/test/Oracle.spec.ts:433:9-433:69: `await oracle.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:433:21-433:69: `.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:434:9-434:29: `await oracle.grow(2)`
$DIR/test/Oracle.spec.ts:434:21-434:29: `.grow(2)`
$DIR/test/Oracle.spec.ts:435:9-435:73: `await oracle.update({ advanceTimeBy: 4, tick: 1, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:435:21-435:73: `.update({ advanceTimeBy: 4, tick: 1, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:436:9-436:74: `await oracle.update({ advanceTimeBy: 3, tick: -5, liquidity: 4 })`
$DIR/test/Oracle.spec.ts:436:21-436:74: `.update({ advanceTimeBy: 3, tick: -5, liquidity: 4 })`
$DIR/test/Oracle.spec.ts:443:9-443:69: `await oracle.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:443:21-443:69: `.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:444:9-444:29: `await oracle.grow(2)`
$DIR/test/Oracle.spec.ts:444:21-444:29: `.grow(2)`
$DIR/test/Oracle.spec.ts:445:9-445:73: `await oracle.update({ advanceTimeBy: 4, tick: 1, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:445:21-445:73: `.update({ advanceTimeBy: 4, tick: 1, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:446:9-446:74: `await oracle.update({ advanceTimeBy: 3, tick: -5, liquidity: 4 })`
$DIR/test/Oracle.spec.ts:446:21-446:74: `.update({ advanceTimeBy: 3, tick: -5, liquidity: 4 })`
$DIR/test/Oracle.spec.ts:447:9-447:36: `await oracle.advanceTime(7)`
$DIR/test/Oracle.spec.ts:447:21-447:36: `.advanceTime(7)`
$DIR/test/Oracle.spec.ts:454:9-454:69: `await oracle.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:454:21-454:69: `.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:455:9-455:29: `await oracle.grow(2)`
$DIR/test/Oracle.spec.ts:455:21-455:29: `.grow(2)`
$DIR/test/Oracle.spec.ts:456:9-456:73: `await oracle.update({ advanceTimeBy: 4, tick: 1, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:456:21-456:73: `.update({ advanceTimeBy: 4, tick: 1, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:457:9-457:74: `await oracle.update({ advanceTimeBy: 3, tick: -5, liquidity: 4 })`
$DIR/test/Oracle.spec.ts:457:21-457:74: `.update({ advanceTimeBy: 3, tick: -5, liquidity: 4 })`
$DIR/test/Oracle.spec.ts:458:9-458:36: `await oracle.advanceTime(7)`
$DIR/test/Oracle.spec.ts:458:21-458:36: `.advanceTime(7)`
$DIR/test/Oracle.spec.ts:465:9-465:69: `await oracle.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:465:21-465:69: `.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:466:9-466:29: `await oracle.grow(2)`
$DIR/test/Oracle.spec.ts:466:21-466:29: `.grow(2)`
$DIR/test/Oracle.spec.ts:467:9-467:73: `await oracle.update({ advanceTimeBy: 4, tick: 1, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:467:21-467:73: `.update({ advanceTimeBy: 4, tick: 1, liquidity: 2 })`
$DIR/test/Oracle.spec.ts:468:9-468:74: `await oracle.update({ advanceTimeBy: 3, tick: -5, liquidity: 4 })`
$DIR/test/Oracle.spec.ts:468:21-468:74: `.update({ advanceTimeBy: 3, tick: -5, liquidity: 4 })`
$DIR/test/Oracle.spec.ts:469:9-469:36: `await oracle.advanceTime(7)`
$DIR/test/Oracle.spec.ts:469:21-469:36: `.advanceTime(7)`
$DIR/test/Oracle.spec.ts:476:9-476:92: `await oracle.initialize({ time: 5, tick: 2, liquidity: BigNumber.from(2).pow(15) })`
$DIR/test/Oracle.spec.ts:476:21-476:92: `.initialize({ time: 5, tick: 2, liquidity: BigNumber.from(2).pow(15) })`
$DIR/test/Oracle.spec.ts:476:73-476:81: `.from(2)`
$DIR/test/Oracle.spec.ts:476:81-476:89: `.pow(15)`
$DIR/test/Oracle.spec.ts:477:9-477:29: `await oracle.grow(4)`
$DIR/test/Oracle.spec.ts:477:21-477:29: `.grow(4)`
$DIR/test/Oracle.spec.ts:478:9-478:98: `await oracle.update({ advanceTimeBy: 13, tick: 6, liquidity: BigNumber.from(2).pow(12) })`
$DIR/test/Oracle.spec.ts:478:21-478:98: `.update({ advanceTimeBy: 13, tick: 6, liquidity: BigNumber.from(2).pow(12) })`
$DIR/test/Oracle.spec.ts:478:79-478:87: `.from(2)`
$DIR/test/Oracle.spec.ts:478:87-478:95: `.pow(12)`
$DIR/test/Oracle.spec.ts:479:9-479:36: `await oracle.advanceTime(5)`
$DIR/test/Oracle.spec.ts:479:21-479:36: `.advanceTime(5)`
$DIR/test/Oracle.spec.ts:481:85-481:116: `.observe([0, 3, 8, 13, 15, 18])`
$DIR/test/Oracle.spec.ts:499:9-499:69: `await oracle.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:499:21-499:69: `.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:500:9-500:36: `await oracle.advanceTime(2)`
$DIR/test/Oracle.spec.ts:500:21-500:36: `.advanceTime(2)`
$DIR/test/Oracle.spec.ts:501:9-501:63: `await snapshotGasCost(oracle.getGasCostOfObserve([1]))`
$DIR/test/Oracle.spec.ts:501:37-501:62: `.getGasCostOfObserve([1])`
$DIR/test/Oracle.spec.ts:505:9-505:69: `await oracle.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:505:21-505:69: `.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:506:9-506:63: `await snapshotGasCost(oracle.getGasCostOfObserve([0]))`
$DIR/test/Oracle.spec.ts:506:37-506:62: `.getGasCostOfObserve([0])`
$DIR/test/Oracle.spec.ts:510:9-510:69: `await oracle.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:510:21-510:69: `.initialize({ liquidity: 5, tick: -5, time: 5 })`
$DIR/test/Oracle.spec.ts:511:9-511:36: `await oracle.advanceTime(5)`
$DIR/test/Oracle.spec.ts:511:21-511:36: `.advanceTime(5)`
$DIR/test/Oracle.spec.ts:512:9-512:63: `await snapshotGasCost(oracle.getGasCostOfObserve([0]))`
$DIR/test/Oracle.spec.ts:512:37-512:62: `.getGasCostOfObserve([0])`
$DIR/test/Oracle.spec.ts:544:30-544:38: `.index()`
$DIR/test/Oracle.spec.ts:545:30-545:44: `.cardinality()`
$DIR/test/Oracle.spec.ts:546:30-546:48: `.cardinalityNext()`
$DIR/test/Oracle.spec.ts:554:11-554:38: `await oracle.advanceTime(5)`
$DIR/test/Oracle.spec.ts:554:23-554:38: `.advanceTime(5)`
$DIR/test/Oracle.spec.ts:560:11-560:38: `await oracle.advanceTime(5)`
$DIR/test/Oracle.spec.ts:560:23-560:38: `.advanceTime(5)`
$DIR/test/Oracle.spec.ts:571:11-571:38: `await oracle.advanceTime(5)`
$DIR/test/Oracle.spec.ts:571:23-571:38: `.advanceTime(5)`
$DIR/test/Oracle.spec.ts:578:11-578:38: `await oracle.advanceTime(5)`
$DIR/test/Oracle.spec.ts:578:23-578:38: `.advanceTime(5)`
$DIR/test/Oracle.spec.ts:587:11-587:38: `await oracle.advanceTime(6)`
$DIR/test/Oracle.spec.ts:587:23-587:38: `.advanceTime(6)`
$DIR/test/Oracle.spec.ts:594:11-594:38: `await oracle.advanceTime(6)`
$DIR/test/Oracle.spec.ts:594:23-594:38: `.advanceTime(6)`
$DIR/test/Oracle.spec.ts:595:87-603:13: `.observe([
            20,
            17,
            13,
            10,
            5,
            1,
            0,
          ])`
$DIR/test/Oracle.spec.ts:605:45-605:72: `.map((tc) => tc.toNumber())`
$DIR/test/Oracle.spec.ts:606:83-606:110: `.map((lc) => lc.toString())`
$DIR/test/Oracle.spec.ts:611:11-611:38: `await oracle.advanceTime(6)`
$DIR/test/Oracle.spec.ts:611:23-611:38: `.advanceTime(6)`
$DIR/test/Oracle.spec.ts:612:11-614:12: `await snapshotGasCost(
            oracle.getGasCostOfObserve([20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0])
          )`
$DIR/test/Oracle.spec.ts:613:19-613:115: `.getGasCostOfObserve([20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0])`
$DIR/test/Oracle.spec.ts:618:11-618:65: `await snapshotGasCost(oracle.getGasCostOfObserve([0]))`
$DIR/test/Oracle.spec.ts:618:39-618:64: `.getGasCostOfObserve([0])`
$DIR/test/Oracle.spec.ts:621:11-621:38: `await oracle.advanceTime(5)`
$DIR/test/Oracle.spec.ts:621:23-621:38: `.advanceTime(5)`
$DIR/test/Oracle.spec.ts:622:11-622:65: `await snapshotGasCost(oracle.getGasCostOfObserve([0]))`
$DIR/test/Oracle.spec.ts:622:39-622:64: `.getGasCostOfObserve([0])`
$DIR/test/Oracle.spec.ts:625:11-625:66: `await snapshotGasCost(oracle.getGasCostOfObserve([14]))`
$DIR/test/Oracle.spec.ts:625:39-625:65: `.getGasCostOfObserve([14])`
$DIR/test/Oracle.spec.ts:628:11-628:66: `await snapshotGasCost(oracle.getGasCostOfObserve([13]))`
$DIR/test/Oracle.spec.ts:628:39-628:65: `.getGasCostOfObserve([13])`
$DIR/test/Oracle.spec.ts:631:11-631:65: `await snapshotGasCost(oracle.getGasCostOfObserve([5]))`
$DIR/test/Oracle.spec.ts:631:39-631:64: `.getGasCostOfObserve([5])`
$DIR/test/Oracle.spec.ts:677:26-677:44: `.cardinalityNext()`
$DIR/test/Oracle.spec.ts:681:26-681:40: `.cardinality()`
$DIR/test/Oracle.spec.ts:685:26-685:34: `.index()`
$DIR/test/Oracle.spec.ts:708:7-711:9: `await checkObserve(100 * 13, {
        secondsPerLiquidityCumulativeX128: '60465049086512033878831623038233202591033',
        tickCumulative: '-27970560813',
      })`
$DIR/test/Oracle.spec.ts:715:7-718:9: `await checkObserve(100 * 13 + 5, {
        secondsPerLiquidityCumulativeX128: '60465023149565257990964350912969670793706',
        tickCumulative: '-27970232823',
      })`
$DIR/test/Oracle.spec.ts:722:7-725:9: `await checkObserve(0, {
        secondsPerLiquidityCumulativeX128: '60471787506468701386237800669810720099776',
        tickCumulative: '-28055903863',
      })`
$DIR/test/Oracle.spec.ts:729:7-729:34: `await oracle.advanceTime(5)`
$DIR/test/Oracle.spec.ts:729:19-729:34: `.advanceTime(5)`
$DIR/test/Oracle.spec.ts:730:7-733:9: `await checkObserve(5, {
        secondsPerLiquidityCumulativeX128: '60471787506468701386237800669810720099776',
        tickCumulative: '-28055903863',
      })`
$DIR/test/Oracle.spec.ts:737:7-737:34: `await oracle.advanceTime(5)`
$DIR/test/Oracle.spec.ts:737:19-737:34: `.advanceTime(5)`
$DIR/test/Oracle.spec.ts:738:7-741:9: `await checkObserve(3, {
        secondsPerLiquidityCumulativeX128: '60471797865298117996489508104462919730461',
        tickCumulative: '-28056035261',
      })`
$DIR/test/Oracle.spec.ts:745:7-748:9: `await checkObserve(200 * 13, {
        secondsPerLiquidityCumulativeX128: '60458300386499273141628780395875293027404',
        tickCumulative: '-27885347763',
      })`
$DIR/test/Oracle.spec.ts:752:7-755:9: `await checkObserve(200 * 13 + 5, {
        secondsPerLiquidityCumulativeX128: '60458274409952896081377821330361274907140',
        tickCumulative: '-27885020273',
      })`
$DIR/test/Oracle.spec.ts:759:7-762:9: `await checkObserve(13 * 65534, {
        secondsPerLiquidityCumulativeX128: '33974356747348039873972993881117400879779',
        tickCumulative: '-175890',
      })`
$DIR/test/Oracle.spec.ts:766:7-766:34: `await oracle.advanceTime(5)`
$DIR/test/Oracle.spec.ts:766:19-766:34: `.advanceTime(5)`
$DIR/test/Oracle.spec.ts:767:7-770:9: `await checkObserve(13 * 65534 + 5, {
        secondsPerLiquidityCumulativeX128: '33974356747348039873972993881117400879779',
        tickCumulative: '-175890',
      })`
$DIR/test/Oracle.spec.ts:774:7-774:61: `await snapshotGasCost(oracle.getGasCostOfObserve([0]))`
$DIR/test/Oracle.spec.ts:774:35-774:60: `.getGasCostOfObserve([0])`
$DIR/test/Oracle.spec.ts:777:7-777:68: `await snapshotGasCost(oracle.getGasCostOfObserve([200 + 13]))`
$DIR/test/Oracle.spec.ts:777:35-777:67: `.getGasCostOfObserve([200 + 13])`
$DIR/test/Oracle.spec.ts:780:7-780:72: `await snapshotGasCost(oracle.getGasCostOfObserve([200 + 13 + 5]))`
$DIR/test/Oracle.spec.ts:780:35-780:71: `.getGasCostOfObserve([200 + 13 + 5])`
$DIR/test/Oracle.spec.ts:783:7-783:34: `await oracle.advanceTime(5)`
$DIR/test/Oracle.spec.ts:783:19-783:34: `.advanceTime(5)`
$DIR/test/Oracle.spec.ts:784:7-784:61: `await snapshotGasCost(oracle.getGasCostOfObserve([0]))`
$DIR/test/Oracle.spec.ts:784:35-784:60: `.getGasCostOfObserve([0])`
$DIR/test/Oracle.spec.ts:787:7-787:34: `await oracle.advanceTime(5)`
$DIR/test/Oracle.spec.ts:787:19-787:34: `.advanceTime(5)`
$DIR/test/Oracle.spec.ts:788:7-788:61: `await snapshotGasCost(oracle.getGasCostOfObserve([5]))`
$DIR/test/Oracle.spec.ts:788:35-788:60: `.getGasCostOfObserve([5])`
$DIR/test/Oracle.spec.ts:791:7-791:70: `await snapshotGasCost(oracle.getGasCostOfObserve([65534 * 13]))`
$DIR/test/Oracle.spec.ts:791:35-791:69: `.getGasCostOfObserve([65534 * 13])`
$DIR/test/Oracle.spec.ts:794:7-794:34: `await oracle.advanceTime(5)`
$DIR/test/Oracle.spec.ts:794:19-794:34: `.advanceTime(5)`
$DIR/test/Oracle.spec.ts:795:7-795:74: `await snapshotGasCost(oracle.getGasCostOfObserve([65534 * 13 + 5]))`
$DIR/test/Oracle.spec.ts:795:35-795:73: `.getGasCostOfObserve([65534 * 13 + 5])`
$DIR/test/SqrtPriceMath.spec.ts:22:33-22:103: `.getNextSqrtPriceFromInput(0, 0, expandTo18Decimals(1).div(10), false)`
$DIR/test/SqrtPriceMath.spec.ts:22:87-22:95: `.div(10)`
$DIR/test/SqrtPriceMath.spec.ts:26:33-26:102: `.getNextSqrtPriceFromInput(1, 0, expandTo18Decimals(1).div(10), true)`
$DIR/test/SqrtPriceMath.spec.ts:26:87-26:95: `.div(10)`
$DIR/test/SqrtPriceMath.spec.ts:30:30-30:38: `.from(2)`
$DIR/test/SqrtPriceMath.spec.ts:30:38-30:47: `.pow(160)`
$DIR/test/SqrtPriceMath.spec.ts:30:47-30:54: `.sub(1)`
$DIR/test/SqrtPriceMath.spec.ts:33:33-33:94: `.getNextSqrtPriceFromInput(price, liquidity, amountIn, false)`
$DIR/test/SqrtPriceMath.spec.ts:39:33-39:41: `.from(2)`
$DIR/test/SqrtPriceMath.spec.ts:39:41-39:50: `.pow(255)`
$DIR/test/SqrtPriceMath.spec.ts:40:33-40:93: `.getNextSqrtPriceFromInput(price, liquidity, amountIn, true)`
$DIR/test/SqrtPriceMath.spec.ts:45:33-45:106: `.getNextSqrtPriceFromInput(price, expandTo18Decimals(1).div(10), 0, true)`
$DIR/test/SqrtPriceMath.spec.ts:45:88-45:96: `.div(10)`
$DIR/test/SqrtPriceMath.spec.ts:50:33-50:107: `.getNextSqrtPriceFromInput(price, expandTo18Decimals(1).div(10), 0, false)`
$DIR/test/SqrtPriceMath.spec.ts:50:88-50:96: `.div(10)`
$DIR/test/SqrtPriceMath.spec.ts:54:30-54:38: `.from(2)`
$DIR/test/SqrtPriceMath.spec.ts:54:38-54:47: `.pow(160)`
$DIR/test/SqrtPriceMath.spec.ts:54:47-54:54: `.sub(1)`
$DIR/test/SqrtPriceMath.spec.ts:56:45-56:79: `.sub(liquidity.shl(96).div(sqrtP))`
$DIR/test/SqrtPriceMath.spec.ts:56:59-56:67: `.shl(96)`
$DIR/test/SqrtPriceMath.spec.ts:56:67-56:78: `.div(sqrtP)`
$DIR/test/SqrtPriceMath.spec.ts:57:33-57:104: `.getNextSqrtPriceFromInput(sqrtP, liquidity, maxAmountNoOverflow, true)`
$DIR/test/SqrtPriceMath.spec.ts:61:40-66:8: `.getNextSqrtPriceFromInput(
        encodePriceSqrt(1, 1),
        expandTo18Decimals(1),
        expandTo18Decimals(1).div(10),
        false
      )`
$DIR/test/SqrtPriceMath.spec.ts:64:30-64:38: `.div(10)`
$DIR/test/SqrtPriceMath.spec.ts:71:40-76:8: `.getNextSqrtPriceFromInput(
        encodePriceSqrt(1, 1),
        expandTo18Decimals(1),
        expandTo18Decimals(1).div(10),
        true
      )`
$DIR/test/SqrtPriceMath.spec.ts:74:30-74:38: `.div(10)`
$DIR/test/SqrtPriceMath.spec.ts:82:28-87:10: `.getNextSqrtPriceFromInput(
          encodePriceSqrt(1, 1),
          expandTo18Decimals(10),
          BigNumber.from(2).pow(100),
          true
        )`
$DIR/test/SqrtPriceMath.spec.ts:85:20-85:28: `.from(2)`
$DIR/test/SqrtPriceMath.spec.ts:85:28-85:37: `.pow(100)`
$DIR/test/SqrtPriceMath.spec.ts:95:28-95:115: `.getNextSqrtPriceFromInput(encodePriceSqrt(1, 1), 1, constants.MaxUint256.div(2), true)`
$DIR/test/SqrtPriceMath.spec.ts:95:90-95:108: `.MaxUint256.div(2)`
$DIR/test/SqrtPriceMath.spec.ts:100:7-107:8: `await snapshotGasCost(
        sqrtPriceMath.getGasCostOfGetNextSqrtPriceFromInput(
          encodePriceSqrt(1, 1),
          expandTo18Decimals(1),
          expandTo18Decimals(1).div(10),
          true
        )
      )`
$DIR/test/SqrtPriceMath.spec.ts:101:22-106:10: `.getGasCostOfGetNextSqrtPriceFromInput(
          encodePriceSqrt(1, 1),
          expandTo18Decimals(1),
          expandTo18Decimals(1).div(10),
          true
        )`
$DIR/test/SqrtPriceMath.spec.ts:104:32-104:40: `.div(10)`
$DIR/test/SqrtPriceMath.spec.ts:111:7-118:8: `await snapshotGasCost(
        sqrtPriceMath.getGasCostOfGetNextSqrtPriceFromInput(
          encodePriceSqrt(1, 1),
          expandTo18Decimals(1),
          expandTo18Decimals(1).div(10),
          false
        )
      )`
$DIR/test/SqrtPriceMath.spec.ts:112:22-117:10: `.getGasCostOfGetNextSqrtPriceFromInput(
          encodePriceSqrt(1, 1),
          expandTo18Decimals(1),
          expandTo18Decimals(1).div(10),
          false
        )`
$DIR/test/SqrtPriceMath.spec.ts:115:32-115:40: `.div(10)`
$DIR/test/SqrtPriceMath.spec.ts:124:33-124:104: `.getNextSqrtPriceFromOutput(0, 0, expandTo18Decimals(1).div(10), false)`
$DIR/test/SqrtPriceMath.spec.ts:124:88-124:96: `.div(10)`
$DIR/test/SqrtPriceMath.spec.ts:128:33-128:103: `.getNextSqrtPriceFromOutput(1, 0, expandTo18Decimals(1).div(10), true)`
$DIR/test/SqrtPriceMath.spec.ts:128:88-128:96: `.div(10)`
$DIR/test/SqrtPriceMath.spec.ts:135:33-135:96: `.getNextSqrtPriceFromOutput(price, liquidity, amountOut, false)`
$DIR/test/SqrtPriceMath.spec.ts:142:33-142:96: `.getNextSqrtPriceFromOutput(price, liquidity, amountOut, false)`
$DIR/test/SqrtPriceMath.spec.ts:149:33-149:95: `.getNextSqrtPriceFromOutput(price, liquidity, amountOut, true)`
$DIR/test/SqrtPriceMath.spec.ts:156:33-156:95: `.getNextSqrtPriceFromOutput(price, liquidity, amountOut, true)`
$DIR/test/SqrtPriceMath.spec.ts:163:40-163:102: `.getNextSqrtPriceFromOutput(price, liquidity, amountOut, true)`
$DIR/test/SqrtPriceMath.spec.ts:172:33-172:96: `.getNextSqrtPriceFromOutput(price, liquidity, amountOut, false)`
$DIR/test/SqrtPriceMath.spec.ts:177:33-177:107: `.getNextSqrtPriceFromOutput(price, expandTo18Decimals(1).div(10), 0, true)`
$DIR/test/SqrtPriceMath.spec.ts:177:89-177:97: `.div(10)`
$DIR/test/SqrtPriceMath.spec.ts:182:33-182:108: `.getNextSqrtPriceFromOutput(price, expandTo18Decimals(1).div(10), 0, false)`
$DIR/test/SqrtPriceMath.spec.ts:182:89-182:97: `.div(10)`
$DIR/test/SqrtPriceMath.spec.ts:188:40-193:8: `.getNextSqrtPriceFromOutput(
        encodePriceSqrt(1, 1),
        expandTo18Decimals(1),
        expandTo18Decimals(1).div(10),
        false
      )`
$DIR/test/SqrtPriceMath.spec.ts:191:30-191:38: `.div(10)`
$DIR/test/SqrtPriceMath.spec.ts:198:40-203:8: `.getNextSqrtPriceFromOutput(
        encodePriceSqrt(1, 1),
        expandTo18Decimals(1),
        expandTo18Decimals(1).div(10),
        true
      )`
$DIR/test/SqrtPriceMath.spec.ts:201:30-201:38: `.div(10)`
$DIR/test/SqrtPriceMath.spec.ts:208:33-208:114: `.getNextSqrtPriceFromOutput(encodePriceSqrt(1, 1), 1, constants.MaxUint256, true)`
$DIR/test/SqrtPriceMath.spec.ts:213:33-213:115: `.getNextSqrtPriceFromOutput(encodePriceSqrt(1, 1), 1, constants.MaxUint256, false)`
$DIR/test/SqrtPriceMath.spec.ts:218:7-225:8: `await snapshotGasCost(
        sqrtPriceMath.getGasCostOfGetNextSqrtPriceFromOutput(
          encodePriceSqrt(1, 1),
          expandTo18Decimals(1),
          expandTo18Decimals(1).div(10),
          true
        )
      )`
$DIR/test/SqrtPriceMath.spec.ts:219:22-224:10: `.getGasCostOfGetNextSqrtPriceFromOutput(
          encodePriceSqrt(1, 1),
          expandTo18Decimals(1),
          expandTo18Decimals(1).div(10),
          true
        )`
$DIR/test/SqrtPriceMath.spec.ts:222:32-222:40: `.div(10)`
$DIR/test/SqrtPriceMath.spec.ts:229:7-236:8: `await snapshotGasCost(
        sqrtPriceMath.getGasCostOfGetNextSqrtPriceFromOutput(
          encodePriceSqrt(1, 1),
          expandTo18Decimals(1),
          expandTo18Decimals(1).div(10),
          false
        )
      )`
$DIR/test/SqrtPriceMath.spec.ts:230:22-235:10: `.getGasCostOfGetNextSqrtPriceFromOutput(
          encodePriceSqrt(1, 1),
          expandTo18Decimals(1),
          expandTo18Decimals(1).div(10),
          false
        )`
$DIR/test/SqrtPriceMath.spec.ts:233:32-233:40: `.div(10)`
$DIR/test/SqrtPriceMath.spec.ts:242:42-242:113: `.getAmount0Delta(encodePriceSqrt(1, 1), encodePriceSqrt(2, 1), 0, true)`
$DIR/test/SqrtPriceMath.spec.ts:247:42-247:113: `.getAmount0Delta(encodePriceSqrt(1, 1), encodePriceSqrt(1, 1), 0, true)`
$DIR/test/SqrtPriceMath.spec.ts:253:42-258:8: `.getAmount0Delta(
        encodePriceSqrt(1, 1),
        encodePriceSqrt(121, 100),
        expandTo18Decimals(1),
        true
      )`
$DIR/test/SqrtPriceMath.spec.ts:261:53-266:8: `.getAmount0Delta(
        encodePriceSqrt(1, 1),
        encodePriceSqrt(121, 100),
        expandTo18Decimals(1),
        false
      )`
$DIR/test/SqrtPriceMath.spec.ts:272:44-277:8: `.getAmount0Delta(
        encodePriceSqrt(BigNumber.from(2).pow(90), 1),
        encodePriceSqrt(BigNumber.from(2).pow(96), 1),
        expandTo18Decimals(1),
        true
      )`
$DIR/test/SqrtPriceMath.spec.ts:273:34-273:42: `.from(2)`
$DIR/test/SqrtPriceMath.spec.ts:273:42-273:50: `.pow(90)`
$DIR/test/SqrtPriceMath.spec.ts:274:34-274:42: `.from(2)`
$DIR/test/SqrtPriceMath.spec.ts:274:42-274:50: `.pow(96)`
$DIR/test/SqrtPriceMath.spec.ts:278:46-283:8: `.getAmount0Delta(
        encodePriceSqrt(BigNumber.from(2).pow(90), 1),
        encodePriceSqrt(BigNumber.from(2).pow(96), 1),
        expandTo18Decimals(1),
        false
      )`
$DIR/test/SqrtPriceMath.spec.ts:279:34-279:42: `.from(2)`
$DIR/test/SqrtPriceMath.spec.ts:279:42-279:50: `.pow(90)`
$DIR/test/SqrtPriceMath.spec.ts:280:34-280:42: `.from(2)`
$DIR/test/SqrtPriceMath.spec.ts:280:42-280:50: `.pow(96)`
$DIR/test/SqrtPriceMath.spec.ts:312:42-312:113: `.getAmount1Delta(encodePriceSqrt(1, 1), encodePriceSqrt(2, 1), 0, true)`
$DIR/test/SqrtPriceMath.spec.ts:317:42-317:113: `.getAmount0Delta(encodePriceSqrt(1, 1), encodePriceSqrt(1, 1), 0, true)`
$DIR/test/SqrtPriceMath.spec.ts:323:42-328:8: `.getAmount1Delta(
        encodePriceSqrt(1, 1),
        encodePriceSqrt(121, 100),
        expandTo18Decimals(1),
        true
      )`
$DIR/test/SqrtPriceMath.spec.ts:331:53-336:8: `.getAmount1Delta(
        encodePriceSqrt(1, 1),
        encodePriceSqrt(121, 100),
        expandTo18Decimals(1),
        false
      )`
$DIR/test/SqrtPriceMath.spec.ts:372:40-372:106: `.getNextSqrtPriceFromInput(sqrtP, liquidity, amountIn, zeroForOne)`
$DIR/test/SqrtPriceMath.spec.ts:375:47-375:94: `.getAmount0Delta(sqrtQ, sqrtP, liquidity, true)`
$DIR/test/SwapMath.spec.ts:29:71-35:8: `.computeSwapStep(
        price,
        priceTarget,
        liquidity,
        amount,
        fee
      )`
$DIR/test/SwapMath.spec.ts:40:22-40:37: `.add(feeAmount)`
$DIR/test/SwapMath.spec.ts:42:61-47:8: `.getNextSqrtPriceFromInput(
        price,
        liquidity,
        amount,
        zeroForOne
      )`
$DIR/test/SwapMath.spec.ts:57:43-57:51: `.mul(-1)`
$DIR/test/SwapMath.spec.ts:61:71-67:8: `.computeSwapStep(
        price,
        priceTarget,
        liquidity,
        amount,
        fee
      )`
$DIR/test/SwapMath.spec.ts:74:62-79:8: `.getNextSqrtPriceFromOutput(
        price,
        liquidity,
        amount.mul(-1),
        zeroForOne
      )`
$DIR/test/SwapMath.spec.ts:77:15-77:23: `.mul(-1)`
$DIR/test/SwapMath.spec.ts:93:71-99:8: `.computeSwapStep(
        price,
        priceTarget,
        liquidity,
        amount,
        fee
      )`
$DIR/test/SwapMath.spec.ts:104:22-104:37: `.add(feeAmount)`
$DIR/test/SwapMath.spec.ts:106:68-111:8: `.getNextSqrtPriceFromInput(
        price,
        liquidity,
        amount.sub(feeAmount),
        zeroForOne
      )`
$DIR/test/SwapMath.spec.ts:109:15-109:30: `.sub(feeAmount)`
$DIR/test/SwapMath.spec.ts:121:43-121:51: `.mul(-1)`
$DIR/test/SwapMath.spec.ts:125:71-131:8: `.computeSwapStep(
        price,
        priceTarget,
        liquidity,
        amount,
        fee
      )`
$DIR/test/SwapMath.spec.ts:137:62-142:8: `.getNextSqrtPriceFromOutput(
        price,
        liquidity,
        amount.mul(-1),
        zeroForOne
      )`
$DIR/test/SwapMath.spec.ts:140:15-140:23: `.mul(-1)`
$DIR/test/SwapMath.spec.ts:149:71-155:8: `.computeSwapStep(
        BigNumber.from('417332158212080721273783715441582'),
        BigNumber.from('1452870262520218020823638996'),
        '159344665391607089467575320103',
        '-1',
        1
      )`
$DIR/test/SwapMath.spec.ts:150:18-150:60: `.from('417332158212080721273783715441582')`
$DIR/test/SwapMath.spec.ts:151:18-151:55: `.from('1452870262520218020823638996')`
$DIR/test/SwapMath.spec.ts:163:71-169:8: `.computeSwapStep(
        BigNumber.from('2'),
        BigNumber.from('1'),
        '1',
        '3915081100057732413702495386755767',
        1
      )`
$DIR/test/SwapMath.spec.ts:164:18-164:28: `.from('2')`
$DIR/test/SwapMath.spec.ts:165:18-165:28: `.from('1')`
$DIR/test/SwapMath.spec.ts:172:22-172:37: `.add(feeAmount)`
$DIR/test/SwapMath.spec.ts:178:71-184:8: `.computeSwapStep(
        '2413',
        '79887613182836312',
        '1985041575832132834610021537970',
        '10',
        1872
      )`
$DIR/test/SwapMath.spec.ts:192:30-192:71: `.from('20282409603651670423947251286016')`
$DIR/test/SwapMath.spec.ts:193:32-193:40: `.mul(11)`
$DIR/test/SwapMath.spec.ts:193:40-193:48: `.div(10)`
$DIR/test/SwapMath.spec.ts:199:71-205:8: `.computeSwapStep(
        sqrtP,
        sqrtPTarget,
        liquidity,
        amountRemaining,
        feePips
      )`
$DIR/test/SwapMath.spec.ts:213:30-213:71: `.from('20282409603651670423947251286016')`
$DIR/test/SwapMath.spec.ts:214:32-214:39: `.mul(9)`
$DIR/test/SwapMath.spec.ts:214:39-214:47: `.div(10)`
$DIR/test/SwapMath.spec.ts:220:71-226:8: `.computeSwapStep(
        sqrtP,
        sqrtPTarget,
        liquidity,
        amountRemaining,
        feePips
      )`
$DIR/test/SwapMath.spec.ts:235:9-243:10: `await snapshotGasCost(
          swapMath.getGasCostOfComputeSwapStep(
            encodePriceSqrt(1, 1),
            encodePriceSqrt(101, 100),
            expandTo18Decimals(2),
            expandTo18Decimals(1),
            600
          )
        )`
$DIR/test/SwapMath.spec.ts:236:19-242:12: `.getGasCostOfComputeSwapStep(
            encodePriceSqrt(1, 1),
            encodePriceSqrt(101, 100),
            expandTo18Decimals(2),
            expandTo18Decimals(1),
            600
          )`
$DIR/test/SwapMath.spec.ts:246:9-254:10: `await snapshotGasCost(
          swapMath.getGasCostOfComputeSwapStep(
            encodePriceSqrt(1, 1),
            encodePriceSqrt(99, 100),
            expandTo18Decimals(2),
            expandTo18Decimals(1),
            600
          )
        )`
$DIR/test/SwapMath.spec.ts:247:19-253:12: `.getGasCostOfComputeSwapStep(
            encodePriceSqrt(1, 1),
            encodePriceSqrt(99, 100),
            expandTo18Decimals(2),
            expandTo18Decimals(1),
            600
          )`
$DIR/test/SwapMath.spec.ts:257:9-265:10: `await snapshotGasCost(
          swapMath.getGasCostOfComputeSwapStep(
            encodePriceSqrt(1, 1),
            encodePriceSqrt(101, 100),
            expandTo18Decimals(2),
            expandTo18Decimals(1).mul(-1),
            600
          )
        )`
$DIR/test/SwapMath.spec.ts:258:19-264:12: `.getGasCostOfComputeSwapStep(
            encodePriceSqrt(1, 1),
            encodePriceSqrt(101, 100),
            expandTo18Decimals(2),
            expandTo18Decimals(1).mul(-1),
            600
          )`
$DIR/test/SwapMath.spec.ts:262:34-262:42: `.mul(-1)`
$DIR/test/SwapMath.spec.ts:268:9-276:10: `await snapshotGasCost(
          swapMath.getGasCostOfComputeSwapStep(
            encodePriceSqrt(1, 1),
            encodePriceSqrt(99, 100),
            expandTo18Decimals(2),
            expandTo18Decimals(1).mul(-1),
            600
          )
        )`
$DIR/test/SwapMath.spec.ts:269:19-275:12: `.getGasCostOfComputeSwapStep(
            encodePriceSqrt(1, 1),
            encodePriceSqrt(99, 100),
            expandTo18Decimals(2),
            expandTo18Decimals(1).mul(-1),
            600
          )`
$DIR/test/SwapMath.spec.ts:273:34-273:42: `.mul(-1)`
$DIR/test/SwapMath.spec.ts:279:9-287:10: `await snapshotGasCost(
          swapMath.getGasCostOfComputeSwapStep(
            encodePriceSqrt(1, 1),
            encodePriceSqrt(1010, 100),
            expandTo18Decimals(2),
            1000,
            600
          )
        )`
$DIR/test/SwapMath.spec.ts:280:19-286:12: `.getGasCostOfComputeSwapStep(
            encodePriceSqrt(1, 1),
            encodePriceSqrt(1010, 100),
            expandTo18Decimals(2),
            1000,
            600
          )`
$DIR/test/SwapMath.spec.ts:290:9-298:10: `await snapshotGasCost(
          swapMath.getGasCostOfComputeSwapStep(
            encodePriceSqrt(1, 1),
            encodePriceSqrt(99, 1000),
            expandTo18Decimals(2),
            1000,
            600
          )
        )`
$DIR/test/SwapMath.spec.ts:291:19-297:12: `.getGasCostOfComputeSwapStep(
            encodePriceSqrt(1, 1),
            encodePriceSqrt(99, 1000),
            expandTo18Decimals(2),
            1000,
            600
          )`
$DIR/test/SwapMath.spec.ts:301:9-309:10: `await snapshotGasCost(
          swapMath.getGasCostOfComputeSwapStep(
            encodePriceSqrt(1, 1),
            encodePriceSqrt(1010, 100),
            expandTo18Decimals(2),
            1000,
            600
          )
        )`
$DIR/test/SwapMath.spec.ts:302:19-308:12: `.getGasCostOfComputeSwapStep(
            encodePriceSqrt(1, 1),
            encodePriceSqrt(1010, 100),
            expandTo18Decimals(2),
            1000,
            600
          )`
$DIR/test/SwapMath.spec.ts:312:9-320:10: `await snapshotGasCost(
          swapMath.getGasCostOfComputeSwapStep(
            encodePriceSqrt(1, 1),
            encodePriceSqrt(99, 1000),
            expandTo18Decimals(2),
            1000,
            600
          )
        )`
$DIR/test/SwapMath.spec.ts:313:19-319:12: `.getGasCostOfComputeSwapStep(
            encodePriceSqrt(1, 1),
            encodePriceSqrt(99, 1000),
            expandTo18Decimals(2),
            1000,
            600
          )`
$DIR/test/Tick.spec.ts:21:49-21:112: `.tickSpacingToMaxLiquidityPerTick(TICK_SPACINGS[FeeAmount.LOW])`
$DIR/test/Tick.spec.ts:26:49-26:115: `.tickSpacingToMaxLiquidityPerTick(TICK_SPACINGS[FeeAmount.MEDIUM])`
$DIR/test/Tick.spec.ts:31:49-31:113: `.tickSpacingToMaxLiquidityPerTick(TICK_SPACINGS[FeeAmount.HIGH])`
$DIR/test/Tick.spec.ts:36:49-36:90: `.tickSpacingToMaxLiquidityPerTick(887272)`
$DIR/test/Tick.spec.ts:41:49-41:88: `.tickSpacingToMaxLiquidityPerTick(2302)`
$DIR/test/Tick.spec.ts:49:76-49:113: `.getFeeGrowthInside(-2, 2, 0, 15, 15)`
$DIR/test/Tick.spec.ts:54:76-54:113: `.getFeeGrowthInside(-2, 2, 4, 15, 15)`
$DIR/test/Tick.spec.ts:59:76-59:114: `.getFeeGrowthInside(-2, 2, -4, 15, 15)`
$DIR/test/Tick.spec.ts:65:7-74:9: `await tickTest.setTick(2, {
        feeGrowthOutside0X128: 2,
        feeGrowthOutside1X128: 3,
        liquidityGross: 0,
        liquidityNet: 0,
        secondsPerLiquidityOutsideX128: 0,
        tickCumulativeOutside: 0,
        secondsOutside: 0,
        initialized: true,
      })`
$DIR/test/Tick.spec.ts:65:21-74:9: `.setTick(2, {
        feeGrowthOutside0X128: 2,
        feeGrowthOutside1X128: 3,
        liquidityGross: 0,
        liquidityNet: 0,
        secondsPerLiquidityOutsideX128: 0,
        tickCumulativeOutside: 0,
        secondsOutside: 0,
        initialized: true,
      })`
$DIR/test/Tick.spec.ts:75:76-75:113: `.getFeeGrowthInside(-2, 2, 0, 15, 15)`
$DIR/test/Tick.spec.ts:81:7-90:9: `await tickTest.setTick(-2, {
        feeGrowthOutside0X128: 2,
        feeGrowthOutside1X128: 3,
        liquidityGross: 0,
        liquidityNet: 0,
        secondsPerLiquidityOutsideX128: 0,
        tickCumulativeOutside: 0,
        secondsOutside: 0,
        initialized: true,
      })`
$DIR/test/Tick.spec.ts:81:21-90:9: `.setTick(-2, {
        feeGrowthOutside0X128: 2,
        feeGrowthOutside1X128: 3,
        liquidityGross: 0,
        liquidityNet: 0,
        secondsPerLiquidityOutsideX128: 0,
        tickCumulativeOutside: 0,
        secondsOutside: 0,
        initialized: true,
      })`
$DIR/test/Tick.spec.ts:91:76-91:113: `.getFeeGrowthInside(-2, 2, 0, 15, 15)`
$DIR/test/Tick.spec.ts:97:7-106:9: `await tickTest.setTick(-2, {
        feeGrowthOutside0X128: 2,
        feeGrowthOutside1X128: 3,
        liquidityGross: 0,
        liquidityNet: 0,
        secondsPerLiquidityOutsideX128: 0,
        tickCumulativeOutside: 0,
        secondsOutside: 0,
        initialized: true,
      })`
$DIR/test/Tick.spec.ts:97:21-106:9: `.setTick(-2, {
        feeGrowthOutside0X128: 2,
        feeGrowthOutside1X128: 3,
        liquidityGross: 0,
        liquidityNet: 0,
        secondsPerLiquidityOutsideX128: 0,
        tickCumulativeOutside: 0,
        secondsOutside: 0,
        initialized: true,
      })`
$DIR/test/Tick.spec.ts:107:7-116:9: `await tickTest.setTick(2, {
        feeGrowthOutside0X128: 4,
        feeGrowthOutside1X128: 1,
        liquidityGross: 0,
        liquidityNet: 0,
        secondsPerLiquidityOutsideX128: 0,
        tickCumulativeOutside: 0,
        secondsOutside: 0,
        initialized: true,
      })`
$DIR/test/Tick.spec.ts:107:21-116:9: `.setTick(2, {
        feeGrowthOutside0X128: 4,
        feeGrowthOutside1X128: 1,
        liquidityGross: 0,
        liquidityNet: 0,
        secondsPerLiquidityOutsideX128: 0,
        tickCumulativeOutside: 0,
        secondsOutside: 0,
        initialized: true,
      })`
$DIR/test/Tick.spec.ts:117:76-117:113: `.getFeeGrowthInside(-2, 2, 0, 15, 15)`
$DIR/test/Tick.spec.ts:123:7-132:9: `await tickTest.setTick(-2, {
        feeGrowthOutside0X128: constants.MaxUint256.sub(3),
        feeGrowthOutside1X128: constants.MaxUint256.sub(2),
        liquidityGross: 0,
        liquidityNet: 0,
        secondsPerLiquidityOutsideX128: 0,
        tickCumulativeOutside: 0,
        secondsOutside: 0,
        initialized: true,
      })`
$DIR/test/Tick.spec.ts:123:21-132:9: `.setTick(-2, {
        feeGrowthOutside0X128: constants.MaxUint256.sub(3),
        feeGrowthOutside1X128: constants.MaxUint256.sub(2),
        liquidityGross: 0,
        liquidityNet: 0,
        secondsPerLiquidityOutsideX128: 0,
        tickCumulativeOutside: 0,
        secondsOutside: 0,
        initialized: true,
      })`
$DIR/test/Tick.spec.ts:124:41-124:59: `.MaxUint256.sub(3)`
$DIR/test/Tick.spec.ts:125:41-125:59: `.MaxUint256.sub(2)`
$DIR/test/Tick.spec.ts:133:7-142:9: `await tickTest.setTick(2, {
        feeGrowthOutside0X128: 3,
        feeGrowthOutside1X128: 5,
        liquidityGross: 0,
        liquidityNet: 0,
        secondsPerLiquidityOutsideX128: 0,
        tickCumulativeOutside: 0,
        secondsOutside: 0,
        initialized: true,
      })`
$DIR/test/Tick.spec.ts:133:21-142:9: `.setTick(2, {
        feeGrowthOutside0X128: 3,
        feeGrowthOutside1X128: 5,
        liquidityGross: 0,
        liquidityNet: 0,
        secondsPerLiquidityOutsideX128: 0,
        tickCumulativeOutside: 0,
        secondsOutside: 0,
        initialized: true,
      })`
$DIR/test/Tick.spec.ts:143:76-143:113: `.getFeeGrowthInside(-2, 2, 0, 15, 15)`
$DIR/test/Tick.spec.ts:151:28-151:80: `.callStatic.update(0, 0, 1, 0, 0, 0, 0, 0, false, 3)`
$DIR/test/Tick.spec.ts:154:7-154:62: `await tickTest.update(0, 0, 1, 0, 0, 0, 0, 0, false, 3)`
$DIR/test/Tick.spec.ts:154:21-154:62: `.update(0, 0, 1, 0, 0, 0, 0, 0, false, 3)`
$DIR/test/Tick.spec.ts:155:28-155:80: `.callStatic.update(0, 0, 1, 0, 0, 0, 0, 0, false, 3)`
$DIR/test/Tick.spec.ts:158:7-158:62: `await tickTest.update(0, 0, 1, 0, 0, 0, 0, 0, false, 3)`
$DIR/test/Tick.spec.ts:158:21-158:62: `.update(0, 0, 1, 0, 0, 0, 0, 0, false, 3)`
$DIR/test/Tick.spec.ts:159:28-159:81: `.callStatic.update(0, 0, -1, 0, 0, 0, 0, 0, false, 3)`
$DIR/test/Tick.spec.ts:162:7-162:62: `await tickTest.update(0, 0, 2, 0, 0, 0, 0, 0, false, 3)`
$DIR/test/Tick.spec.ts:162:21-162:62: `.update(0, 0, 2, 0, 0, 0, 0, 0, false, 3)`
$DIR/test/Tick.spec.ts:163:28-163:81: `.callStatic.update(0, 0, -1, 0, 0, 0, 0, 0, false, 3)`
$DIR/test/Tick.spec.ts:166:7-166:62: `await tickTest.update(0, 0, 2, 0, 0, 0, 0, 0, false, 3)`
$DIR/test/Tick.spec.ts:166:21-166:62: `.update(0, 0, 2, 0, 0, 0, 0, 0, false, 3)`
$DIR/test/Tick.spec.ts:167:28-167:81: `.callStatic.update(0, 0, -1, 0, 0, 0, 0, 0, false, 3)`
$DIR/test/Tick.spec.ts:170:7-170:62: `await tickTest.update(0, 0, 2, 0, 0, 0, 0, 0, false, 3)`
$DIR/test/Tick.spec.ts:170:21-170:62: `.update(0, 0, 2, 0, 0, 0, 0, 0, false, 3)`
$DIR/test/Tick.spec.ts:171:7-171:61: `await tickTest.update(0, 0, 1, 0, 0, 0, 0, 0, true, 3)`
$DIR/test/Tick.spec.ts:171:21-171:61: `.update(0, 0, 1, 0, 0, 0, 0, 0, true, 3)`
$DIR/test/Tick.spec.ts:172:28-172:69: `.update(0, 0, 1, 0, 0, 0, 0, 0, false, 3)`
$DIR/test/Tick.spec.ts:175:7-175:63: `await tickTest.update(0, 0, 2, 0, 0, 0, 0, 0, false, 10)`
$DIR/test/Tick.spec.ts:175:21-175:63: `.update(0, 0, 2, 0, 0, 0, 0, 0, false, 10)`
$DIR/test/Tick.spec.ts:176:7-176:62: `await tickTest.update(0, 0, 1, 0, 0, 0, 0, 0, true, 10)`
$DIR/test/Tick.spec.ts:176:21-176:62: `.update(0, 0, 1, 0, 0, 0, 0, 0, true, 10)`
$DIR/test/Tick.spec.ts:177:7-177:62: `await tickTest.update(0, 0, 3, 0, 0, 0, 0, 0, true, 10)`
$DIR/test/Tick.spec.ts:177:21-177:62: `.update(0, 0, 3, 0, 0, 0, 0, 0, true, 10)`
$DIR/test/Tick.spec.ts:178:7-178:63: `await tickTest.update(0, 0, 1, 0, 0, 0, 0, 0, false, 10)`
$DIR/test/Tick.spec.ts:178:21-178:63: `.update(0, 0, 1, 0, 0, 0, 0, 0, false, 10)`
$DIR/test/Tick.spec.ts:179:62-179:71: `.ticks(0)`
$DIR/test/Tick.spec.ts:184:7-184:94: `await tickTest.update(0, 0, MaxUint128.div(2).sub(1), 0, 0, 0, 0, 0, false, MaxUint128)`
$DIR/test/Tick.spec.ts:184:21-184:94: `.update(0, 0, MaxUint128.div(2).sub(1), 0, 0, 0, 0, 0, false, MaxUint128)`
$DIR/test/Tick.spec.ts:184:45-184:52: `.div(2)`
$DIR/test/Tick.spec.ts:184:52-184:59: `.sub(1)`
$DIR/test/Tick.spec.ts:185:28-185:101: `.update(0, 0, MaxUint128.div(2).sub(1), 0, 0, 0, 0, 0, false, MaxUint128)`
$DIR/test/Tick.spec.ts:185:52-185:59: `.div(2)`
$DIR/test/Tick.spec.ts:185:59-185:66: `.sub(1)`
$DIR/test/Tick.spec.ts:188:7-188:71: `await tickTest.update(1, 1, 1, 1, 2, 3, 4, 5, false, MaxUint128)`
$DIR/test/Tick.spec.ts:188:21-188:71: `.update(1, 1, 1, 1, 2, 3, 4, 5, false, MaxUint128)`
$DIR/test/Tick.spec.ts:196:25-196:34: `.ticks(1)`
$DIR/test/Tick.spec.ts:205:7-205:71: `await tickTest.update(1, 1, 1, 1, 2, 3, 4, 5, false, MaxUint128)`
$DIR/test/Tick.spec.ts:205:21-205:71: `.update(1, 1, 1, 1, 2, 3, 4, 5, false, MaxUint128)`
$DIR/test/Tick.spec.ts:206:7-206:72: `await tickTest.update(1, 1, 1, 6, 7, 8, 9, 10, false, MaxUint128)`
$DIR/test/Tick.spec.ts:206:21-206:72: `.update(1, 1, 1, 6, 7, 8, 9, 10, false, MaxUint128)`
$DIR/test/Tick.spec.ts:214:25-214:34: `.ticks(1)`
$DIR/test/Tick.spec.ts:223:7-223:71: `await tickTest.update(2, 1, 1, 1, 2, 3, 4, 5, false, MaxUint128)`
$DIR/test/Tick.spec.ts:223:21-223:71: `.update(2, 1, 1, 1, 2, 3, 4, 5, false, MaxUint128)`
$DIR/test/Tick.spec.ts:231:25-231:34: `.ticks(2)`
$DIR/test/Tick.spec.ts:244:7-253:9: `await tickTest.setTick(2, {
        feeGrowthOutside0X128: 1,
        feeGrowthOutside1X128: 2,
        liquidityGross: 3,
        liquidityNet: 4,
        secondsPerLiquidityOutsideX128: 5,
        tickCumulativeOutside: 6,
        secondsOutside: 7,
        initialized: true,
      })`
$DIR/test/Tick.spec.ts:244:21-253:9: `.setTick(2, {
        feeGrowthOutside0X128: 1,
        feeGrowthOutside1X128: 2,
        liquidityGross: 3,
        liquidityNet: 4,
        secondsPerLiquidityOutsideX128: 5,
        tickCumulativeOutside: 6,
        secondsOutside: 7,
        initialized: true,
      })`
$DIR/test/Tick.spec.ts:254:7-254:30: `await tickTest.clear(2)`
$DIR/test/Tick.spec.ts:254:21-254:30: `.clear(2)`
$DIR/test/Tick.spec.ts:264:25-264:34: `.ticks(2)`
$DIR/test/Tick.spec.ts:278:7-287:9: `await tickTest.setTick(2, {
        feeGrowthOutside0X128: 1,
        feeGrowthOutside1X128: 2,
        liquidityGross: 3,
        liquidityNet: 4,
        secondsPerLiquidityOutsideX128: 5,
        tickCumulativeOutside: 6,
        secondsOutside: 7,
        initialized: true,
      })`
$DIR/test/Tick.spec.ts:278:21-287:9: `.setTick(2, {
        feeGrowthOutside0X128: 1,
        feeGrowthOutside1X128: 2,
        liquidityGross: 3,
        liquidityNet: 4,
        secondsPerLiquidityOutsideX128: 5,
        tickCumulativeOutside: 6,
        secondsOutside: 7,
        initialized: true,
      })`
$DIR/test/Tick.spec.ts:288:7-288:47: `await tickTest.cross(2, 7, 9, 8, 15, 10)`
$DIR/test/Tick.spec.ts:288:21-288:47: `.cross(2, 7, 9, 8, 15, 10)`
$DIR/test/Tick.spec.ts:295:25-295:34: `.ticks(2)`
$DIR/test/Tick.spec.ts:303:7-312:9: `await tickTest.setTick(2, {
        feeGrowthOutside0X128: 1,
        feeGrowthOutside1X128: 2,
        liquidityGross: 3,
        liquidityNet: 4,
        secondsPerLiquidityOutsideX128: 5,
        tickCumulativeOutside: 6,
        secondsOutside: 7,
        initialized: true,
      })`
$DIR/test/Tick.spec.ts:303:21-312:9: `.setTick(2, {
        feeGrowthOutside0X128: 1,
        feeGrowthOutside1X128: 2,
        liquidityGross: 3,
        liquidityNet: 4,
        secondsPerLiquidityOutsideX128: 5,
        tickCumulativeOutside: 6,
        secondsOutside: 7,
        initialized: true,
      })`
$DIR/test/Tick.spec.ts:313:7-313:47: `await tickTest.cross(2, 7, 9, 8, 15, 10)`
$DIR/test/Tick.spec.ts:313:21-313:47: `.cross(2, 7, 9, 8, 15, 10)`
$DIR/test/Tick.spec.ts:314:7-314:47: `await tickTest.cross(2, 7, 9, 8, 15, 10)`
$DIR/test/Tick.spec.ts:314:21-314:47: `.cross(2, 7, 9, 8, 15, 10)`
$DIR/test/Tick.spec.ts:321:25-321:34: `.ticks(2)`
$DIR/test/TickBitmap.spec.ts:22:30-22:47: `.isInitialized(1)`
$DIR/test/TickBitmap.spec.ts:25:7-25:35: `await tickBitmap.flipTick(1)`
$DIR/test/TickBitmap.spec.ts:25:23-25:35: `.flipTick(1)`
$DIR/test/TickBitmap.spec.ts:26:30-26:47: `.isInitialized(1)`
$DIR/test/TickBitmap.spec.ts:29:7-29:35: `await tickBitmap.flipTick(1)`
$DIR/test/TickBitmap.spec.ts:29:23-29:35: `.flipTick(1)`
$DIR/test/TickBitmap.spec.ts:30:7-30:35: `await tickBitmap.flipTick(1)`
$DIR/test/TickBitmap.spec.ts:30:23-30:35: `.flipTick(1)`
$DIR/test/TickBitmap.spec.ts:31:30-31:47: `.isInitialized(1)`
$DIR/test/TickBitmap.spec.ts:34:7-34:35: `await tickBitmap.flipTick(2)`
$DIR/test/TickBitmap.spec.ts:34:23-34:35: `.flipTick(2)`
$DIR/test/TickBitmap.spec.ts:35:30-35:47: `.isInitialized(1)`
$DIR/test/TickBitmap.spec.ts:38:7-38:41: `await tickBitmap.flipTick(1 + 256)`
$DIR/test/TickBitmap.spec.ts:38:23-38:41: `.flipTick(1 + 256)`
$DIR/test/TickBitmap.spec.ts:39:30-39:49: `.isInitialized(257)`
$DIR/test/TickBitmap.spec.ts:40:30-40:47: `.isInitialized(1)`
$DIR/test/TickBitmap.spec.ts:46:7-46:38: `await tickBitmap.flipTick(-230)`
$DIR/test/TickBitmap.spec.ts:46:23-46:38: `.flipTick(-230)`
$DIR/test/TickBitmap.spec.ts:47:30-47:50: `.isInitialized(-230)`
$DIR/test/TickBitmap.spec.ts:48:30-48:50: `.isInitialized(-231)`
$DIR/test/TickBitmap.spec.ts:49:30-49:50: `.isInitialized(-229)`
$DIR/test/TickBitmap.spec.ts:50:30-50:56: `.isInitialized(-230 + 256)`
$DIR/test/TickBitmap.spec.ts:51:30-51:56: `.isInitialized(-230 - 256)`
$DIR/test/TickBitmap.spec.ts:52:7-52:38: `await tickBitmap.flipTick(-230)`
$DIR/test/TickBitmap.spec.ts:52:23-52:38: `.flipTick(-230)`
$DIR/test/TickBitmap.spec.ts:53:30-53:50: `.isInitialized(-230)`
$DIR/test/TickBitmap.spec.ts:54:30-54:50: `.isInitialized(-231)`
$DIR/test/TickBitmap.spec.ts:55:30-55:50: `.isInitialized(-229)`
$DIR/test/TickBitmap.spec.ts:56:30-56:56: `.isInitialized(-230 + 256)`
$DIR/test/TickBitmap.spec.ts:57:30-57:56: `.isInitialized(-230 - 256)`
$DIR/test/TickBitmap.spec.ts:61:7-61:38: `await tickBitmap.flipTick(-230)`
$DIR/test/TickBitmap.spec.ts:61:23-61:38: `.flipTick(-230)`
$DIR/test/TickBitmap.spec.ts:62:7-62:38: `await tickBitmap.flipTick(-259)`
$DIR/test/TickBitmap.spec.ts:62:23-62:38: `.flipTick(-259)`
$DIR/test/TickBitmap.spec.ts:63:7-63:38: `await tickBitmap.flipTick(-229)`
$DIR/test/TickBitmap.spec.ts:63:23-63:38: `.flipTick(-229)`
$DIR/test/TickBitmap.spec.ts:64:7-64:37: `await tickBitmap.flipTick(500)`
$DIR/test/TickBitmap.spec.ts:64:23-64:37: `.flipTick(500)`
$DIR/test/TickBitmap.spec.ts:65:7-65:38: `await tickBitmap.flipTick(-259)`
$DIR/test/TickBitmap.spec.ts:65:23-65:38: `.flipTick(-259)`
$DIR/test/TickBitmap.spec.ts:66:7-66:38: `await tickBitmap.flipTick(-229)`
$DIR/test/TickBitmap.spec.ts:66:23-66:38: `.flipTick(-229)`
$DIR/test/TickBitmap.spec.ts:67:7-67:38: `await tickBitmap.flipTick(-259)`
$DIR/test/TickBitmap.spec.ts:67:23-67:38: `.flipTick(-259)`
$DIR/test/TickBitmap.spec.ts:69:30-69:50: `.isInitialized(-259)`
$DIR/test/TickBitmap.spec.ts:70:30-70:50: `.isInitialized(-229)`
$DIR/test/TickBitmap.spec.ts:74:7-74:70: `await snapshotGasCost(await tickBitmap.getGasCostOfFlipTick(1))`
$DIR/test/TickBitmap.spec.ts:74:45-74:69: `.getGasCostOfFlipTick(1)`
$DIR/test/TickBitmap.spec.ts:77:7-77:35: `await tickBitmap.flipTick(0)`
$DIR/test/TickBitmap.spec.ts:77:23-77:35: `.flipTick(0)`
$DIR/test/TickBitmap.spec.ts:78:7-78:70: `await snapshotGasCost(await tickBitmap.getGasCostOfFlipTick(1))`
$DIR/test/TickBitmap.spec.ts:78:45-78:69: `.getGasCostOfFlipTick(1)`
$DIR/test/TickBitmap.spec.ts:81:7-81:35: `await tickBitmap.flipTick(0)`
$DIR/test/TickBitmap.spec.ts:81:23-81:35: `.flipTick(0)`
$DIR/test/TickBitmap.spec.ts:82:7-82:70: `await snapshotGasCost(await tickBitmap.getGasCostOfFlipTick(0))`
$DIR/test/TickBitmap.spec.ts:82:45-82:69: `.getGasCostOfFlipTick(0)`
$DIR/test/TickBitmap.spec.ts:94:55-94:99: `.nextInitializedTickWithinOneWord(78, false)`
$DIR/test/TickBitmap.spec.ts:99:55-99:100: `.nextInitializedTickWithinOneWord(-55, false)`
$DIR/test/TickBitmap.spec.ts:105:55-105:99: `.nextInitializedTickWithinOneWord(77, false)`
$DIR/test/TickBitmap.spec.ts:110:55-110:100: `.nextInitializedTickWithinOneWord(-56, false)`
$DIR/test/TickBitmap.spec.ts:116:55-116:100: `.nextInitializedTickWithinOneWord(255, false)`
$DIR/test/TickBitmap.spec.ts:121:55-121:101: `.nextInitializedTickWithinOneWord(-257, false)`
$DIR/test/TickBitmap.spec.ts:127:9-127:39: `await tickBitmap.flipTick(340)`
$DIR/test/TickBitmap.spec.ts:127:25-127:39: `.flipTick(340)`
$DIR/test/TickBitmap.spec.ts:128:55-128:100: `.nextInitializedTickWithinOneWord(328, false)`
$DIR/test/TickBitmap.spec.ts:133:55-133:100: `.nextInitializedTickWithinOneWord(508, false)`
$DIR/test/TickBitmap.spec.ts:138:55-138:100: `.nextInitializedTickWithinOneWord(255, false)`
$DIR/test/TickBitmap.spec.ts:143:55-143:100: `.nextInitializedTickWithinOneWord(383, false)`
$DIR/test/TickBitmap.spec.ts:149:9-149:105: `await snapshotGasCost(await tickBitmap.getGasCostOfNextInitializedTickWithinOneWord(255, false))`
$DIR/test/TickBitmap.spec.ts:149:47-149:104: `.getGasCostOfNextInitializedTickWithinOneWord(255, false)`
$DIR/test/TickBitmap.spec.ts:152:9-152:105: `await snapshotGasCost(await tickBitmap.getGasCostOfNextInitializedTickWithinOneWord(254, false))`
$DIR/test/TickBitmap.spec.ts:152:47-152:104: `.getGasCostOfNextInitializedTickWithinOneWord(254, false)`
$DIR/test/TickBitmap.spec.ts:155:9-155:105: `await snapshotGasCost(await tickBitmap.getGasCostOfNextInitializedTickWithinOneWord(768, false))`
$DIR/test/TickBitmap.spec.ts:155:47-155:104: `.getGasCostOfNextInitializedTickWithinOneWord(768, false)`
$DIR/test/TickBitmap.spec.ts:161:55-161:98: `.nextInitializedTickWithinOneWord(78, true)`
$DIR/test/TickBitmap.spec.ts:167:55-167:98: `.nextInitializedTickWithinOneWord(79, true)`
$DIR/test/TickBitmap.spec.ts:173:55-173:99: `.nextInitializedTickWithinOneWord(258, true)`
$DIR/test/TickBitmap.spec.ts:179:55-179:99: `.nextInitializedTickWithinOneWord(256, true)`
$DIR/test/TickBitmap.spec.ts:185:55-185:98: `.nextInitializedTickWithinOneWord(72, true)`
$DIR/test/TickBitmap.spec.ts:191:55-191:100: `.nextInitializedTickWithinOneWord(-257, true)`
$DIR/test/TickBitmap.spec.ts:197:55-197:100: `.nextInitializedTickWithinOneWord(1023, true)`
$DIR/test/TickBitmap.spec.ts:203:55-203:99: `.nextInitializedTickWithinOneWord(900, true)`
$DIR/test/TickBitmap.spec.ts:209:9-209:39: `await tickBitmap.flipTick(329)`
$DIR/test/TickBitmap.spec.ts:209:25-209:39: `.flipTick(329)`
$DIR/test/TickBitmap.spec.ts:210:55-210:99: `.nextInitializedTickWithinOneWord(456, true)`
$DIR/test/TickBitmap.spec.ts:217:9-217:104: `await snapshotGasCost(await tickBitmap.getGasCostOfNextInitializedTickWithinOneWord(256, true))`
$DIR/test/TickBitmap.spec.ts:217:47-217:103: `.getGasCostOfNextInitializedTickWithinOneWord(256, true)`
$DIR/test/TickBitmap.spec.ts:220:9-220:104: `await snapshotGasCost(await tickBitmap.getGasCostOfNextInitializedTickWithinOneWord(255, true))`
$DIR/test/TickBitmap.spec.ts:220:47-220:103: `.getGasCostOfNextInitializedTickWithinOneWord(255, true)`
$DIR/test/TickBitmap.spec.ts:223:9-223:105: `await snapshotGasCost(await tickBitmap.getGasCostOfNextInitializedTickWithinOneWord(1024, true))`
$DIR/test/TickBitmap.spec.ts:223:47-223:104: `.getGasCostOfNextInitializedTickWithinOneWord(1024, true)`
$DIR/test/TickMath.spec.ts:24:28-24:61: `.getSqrtRatioAtTick(MIN_TICK - 1)`
$DIR/test/TickMath.spec.ts:28:28-28:61: `.getSqrtRatioAtTick(MAX_TICK + 1)`
$DIR/test/TickMath.spec.ts:32:28-32:57: `.getSqrtRatioAtTick(MIN_TICK)`
$DIR/test/TickMath.spec.ts:36:28-36:61: `.getSqrtRatioAtTick(MIN_TICK + 1)`
$DIR/test/TickMath.spec.ts:40:28-40:61: `.getSqrtRatioAtTick(MAX_TICK - 1)`
$DIR/test/TickMath.spec.ts:44:28-44:57: `.getSqrtRatioAtTick(MIN_TICK)`
$DIR/test/TickMath.spec.ts:48:28-48:57: `.getSqrtRatioAtTick(MAX_TICK)`
$DIR/test/TickMath.spec.ts:52:28-52:57: `.getSqrtRatioAtTick(MAX_TICK)`
$DIR/test/TickMath.spec.ts:74:49-74:59: `.pow(tick)`
$DIR/test/TickMath.spec.ts:74:59-74:66: `.sqrt()`
$DIR/test/TickMath.spec.ts:74:66-74:94: `.mul(new Decimal(2).pow(96))`
$DIR/test/TickMath.spec.ts:74:85-74:93: `.pow(96)`
$DIR/test/TickMath.spec.ts:75:42-75:67: `.getSqrtRatioAtTick(tick)`
$DIR/test/TickMath.spec.ts:76:59-76:73: `.sub(jsResult)`
$DIR/test/TickMath.spec.ts:76:73-76:79: `.abs()`
$DIR/test/TickMath.spec.ts:77:27-77:41: `.div(jsResult)`
$DIR/test/TickMath.spec.ts:80:35-80:60: `.getSqrtRatioAtTick(tick)`
$DIR/test/TickMath.spec.ts:83:13-83:81: `await snapshotGasCost(tickMath.getGasCostOfGetSqrtRatioAtTick(tick))`
$DIR/test/TickMath.spec.ts:83:43-83:80: `.getGasCostOfGetSqrtRatioAtTick(tick)`
$DIR/test/TickMath.spec.ts:92:33-92:62: `.getSqrtRatioAtTick(MIN_TICK)`
$DIR/test/TickMath.spec.ts:100:33-100:62: `.getSqrtRatioAtTick(MAX_TICK)`
$DIR/test/TickMath.spec.ts:108:28-108:70: `.getTickAtSqrtRatio(MIN_SQRT_RATIO.sub(1))`
$DIR/test/TickMath.spec.ts:108:62-108:69: `.sub(1)`
$DIR/test/TickMath.spec.ts:112:28-112:79: `.getTickAtSqrtRatio(BigNumber.from(MAX_SQRT_RATIO))`
$DIR/test/TickMath.spec.ts:112:57-112:78: `.from(MAX_SQRT_RATIO)`
$DIR/test/TickMath.spec.ts:116:28-116:63: `.getTickAtSqrtRatio(MIN_SQRT_RATIO)`
$DIR/test/TickMath.spec.ts:119:28-119:61: `.getTickAtSqrtRatio('4295343490')`
$DIR/test/TickMath.spec.ts:122:28-122:100: `.getTickAtSqrtRatio('1461373636630004318706518188784493106690254656249')`
$DIR/test/TickMath.spec.ts:125:28-125:70: `.getTickAtSqrtRatio(MAX_SQRT_RATIO.sub(1))`
$DIR/test/TickMath.spec.ts:125:62-125:69: `.sub(1)`
$DIR/test/TickMath.spec.ts:145:57-145:85: `.div(new Decimal(2).pow(96))`
$DIR/test/TickMath.spec.ts:145:76-145:84: `.pow(96)`
$DIR/test/TickMath.spec.ts:145:85-145:92: `.pow(2)`
$DIR/test/TickMath.spec.ts:145:92-145:104: `.log(1.0001)`
$DIR/test/TickMath.spec.ts:145:104-145:112: `.floor()`
$DIR/test/TickMath.spec.ts:146:40-146:66: `.getTickAtSqrtRatio(ratio)`
$DIR/test/TickMath.spec.ts:147:57-147:71: `.sub(jsResult)`
$DIR/test/TickMath.spec.ts:147:71-147:77: `.abs()`
$DIR/test/TickMath.spec.ts:151:38-151:64: `.getTickAtSqrtRatio(ratio)`
$DIR/test/TickMath.spec.ts:152:45-152:70: `.getSqrtRatioAtTick(tick)`
$DIR/test/TickMath.spec.ts:153:52-153:81: `.getSqrtRatioAtTick(tick + 1)`
$DIR/test/TickMath.spec.ts:158:32-158:58: `.getTickAtSqrtRatio(ratio)`
$DIR/test/TickMath.spec.ts:161:11-161:80: `await snapshotGasCost(tickMath.getGasCostOfGetTickAtSqrtRatio(ratio))`
$DIR/test/TickMath.spec.ts:161:41-161:79: `.getGasCostOfGetTickAtSqrtRatio(ratio)`
$DIR/test/UniswapV3Factory.spec.ts:44:25-44:33: `.owner()`
$DIR/test/UniswapV3Factory.spec.ts:48:26-48:60: `.provider.getCode(factory.address)`
$DIR/test/UniswapV3Factory.spec.ts:52:5-52:85: `await factory.createPool(TEST_ADDRESSES[0], TEST_ADDRESSES[1], FeeAmount.MEDIUM)`
$DIR/test/UniswapV3Factory.spec.ts:52:18-52:85: `.createPool(TEST_ADDRESSES[0], TEST_ADDRESSES[1], FeeAmount.MEDIUM)`
$DIR/test/UniswapV3Factory.spec.ts:54:26-54:56: `.provider.getCode(poolAddress)`
$DIR/test/UniswapV3Factory.spec.ts:58:25-58:61: `.feeAmountTickSpacing(FeeAmount.LOW)`
$DIR/test/UniswapV3Factory.spec.ts:59:25-59:64: `.feeAmountTickSpacing(FeeAmount.MEDIUM)`
$DIR/test/UniswapV3Factory.spec.ts:60:25-60:62: `.feeAmountTickSpacing(FeeAmount.HIGH)`
$DIR/test/UniswapV3Factory.spec.ts:91:7-91:62: `await createAndCheckPool(TEST_ADDRESSES, FeeAmount.LOW)`
$DIR/test/UniswapV3Factory.spec.ts:95:7-95:65: `await createAndCheckPool(TEST_ADDRESSES, FeeAmount.MEDIUM)`
$DIR/test/UniswapV3Factory.spec.ts:98:7-98:63: `await createAndCheckPool(TEST_ADDRESSES, FeeAmount.HIGH)`
$DIR/test/UniswapV3Factory.spec.ts:102:7-102:89: `await createAndCheckPool([TEST_ADDRESSES[1], TEST_ADDRESSES[0]], FeeAmount.MEDIUM)`
$DIR/test/UniswapV3Factory.spec.ts:106:27-106:91: `.createPool(TEST_ADDRESSES[0], TEST_ADDRESSES[0], FeeAmount.LOW)`
$DIR/test/UniswapV3Factory.spec.ts:110:27-110:95: `.createPool(TEST_ADDRESSES[0], constants.AddressZero, FeeAmount.LOW)`
$DIR/test/UniswapV3Factory.spec.ts:111:27-111:95: `.createPool(constants.AddressZero, TEST_ADDRESSES[0], FeeAmount.LOW)`
$DIR/test/UniswapV3Factory.spec.ts:112:27-112:99: `.createPool(constants.AddressZero, constants.AddressZero, FeeAmount.LOW)`
$DIR/test/UniswapV3Factory.spec.ts:118:27-118:81: `.createPool(TEST_ADDRESSES[0], TEST_ADDRESSES[1], 250)`
$DIR/test/UniswapV3Factory.spec.ts:122:7-122:104: `await snapshotGasCost(factory.createPool(TEST_ADDRESSES[0], TEST_ADDRESSES[1], FeeAmount.MEDIUM))`
$DIR/test/UniswapV3Factory.spec.ts:122:36-122:103: `.createPool(TEST_ADDRESSES[0], TEST_ADDRESSES[1], FeeAmount.MEDIUM)`
$DIR/test/UniswapV3Factory.spec.ts:128:27-128:42: `.connect(other)`
$DIR/test/UniswapV3Factory.spec.ts:128:42-128:67: `.setOwner(wallet.address)`
$DIR/test/UniswapV3Factory.spec.ts:132:7-132:44: `await factory.setOwner(other.address)`
$DIR/test/UniswapV3Factory.spec.ts:132:20-132:44: `.setOwner(other.address)`
$DIR/test/UniswapV3Factory.spec.ts:133:27-133:35: `.owner()`
$DIR/test/UniswapV3Factory.spec.ts:137:27-137:51: `.setOwner(other.address)`
$DIR/test/UniswapV3Factory.spec.ts:143:7-143:44: `await factory.setOwner(other.address)`
$DIR/test/UniswapV3Factory.spec.ts:143:20-143:44: `.setOwner(other.address)`
$DIR/test/UniswapV3Factory.spec.ts:144:27-144:52: `.setOwner(wallet.address)`
$DIR/test/UniswapV3Factory.spec.ts:150:27-150:42: `.connect(other)`
$DIR/test/UniswapV3Factory.spec.ts:150:42-150:66: `.enableFeeAmount(100, 2)`
$DIR/test/UniswapV3Factory.spec.ts:153:27-153:56: `.enableFeeAmount(1000000, 10)`
$DIR/test/UniswapV3Factory.spec.ts:156:27-156:51: `.enableFeeAmount(500, 0)`
$DIR/test/UniswapV3Factory.spec.ts:159:27-159:55: `.enableFeeAmount(500, 16834)`
$DIR/test/UniswapV3Factory.spec.ts:162:7-162:44: `await factory.enableFeeAmount(100, 5)`
$DIR/test/UniswapV3Factory.spec.ts:162:20-162:44: `.enableFeeAmount(100, 5)`
$DIR/test/UniswapV3Factory.spec.ts:163:27-163:52: `.enableFeeAmount(100, 10)`
$DIR/test/UniswapV3Factory.spec.ts:166:7-166:44: `await factory.enableFeeAmount(100, 5)`
$DIR/test/UniswapV3Factory.spec.ts:166:20-166:44: `.enableFeeAmount(100, 5)`
$DIR/test/UniswapV3Factory.spec.ts:167:27-167:53: `.feeAmountTickSpacing(100)`
$DIR/test/UniswapV3Factory.spec.ts:170:27-170:51: `.enableFeeAmount(100, 5)`
$DIR/test/UniswapV3Factory.spec.ts:173:7-173:45: `await factory.enableFeeAmount(250, 15)`
$DIR/test/UniswapV3Factory.spec.ts:173:20-173:45: `.enableFeeAmount(250, 15)`
$DIR/test/UniswapV3Factory.spec.ts:174:7-174:80: `await createAndCheckPool([TEST_ADDRESSES[0], TEST_ADDRESSES[1]], 250, 15)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:188:17-190:70: `zeroForOne
                  ? await swapExact0For1(inputAmount, wallet.address)
                  : await swapExact1For0(inputAmount, wallet.address)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:196:54-196:62: `.slot0()`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:204:25-208:22: `.ceil(
                      (await tickMath.getTickAtSqrtRatio(
                        applySqrtRatioBipsHundredthsDelta(executionPrice, feeAmount)
                      )) / tickSpacing
                    )`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:205:38-207:24: `.getTickAtSqrtRatio(
                        applySqrtRatioBipsHundredthsDelta(executionPrice, feeAmount)
                      )`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:209:25-213:22: `.floor(
                      (await tickMath.getTickAtSqrtRatio(
                        applySqrtRatioBipsHundredthsDelta(executionPrice, -feeAmount)
                      )) / tickSpacing
                    )`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:210:38-212:24: `.getTickAtSqrtRatio(
                        applySqrtRatioBipsHundredthsDelta(executionPrice, -feeAmount)
                      )`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:218:54-218:102: `.getSqrtRatioAtTick(firstTickAboveMarginalPrice)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:220:44-220:52: `.from(0)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:221:44-221:52: `.from(0)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:228:62-228:69: `.div(2)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:229:17-229:62: `arbBalance0 = arbBalance0.sub(frontrunDelta0)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:229:42-229:62: `.sub(frontrunDelta0)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:230:17-230:62: `arbBalance1 = arbBalance1.sub(frontrunDelta1)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:230:42-230:62: `.sub(frontrunDelta1)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:231:17-233:81: `zeroForOne
                  ? await swapToLowerPrice(priceSwapStart, arbitrageur.address)
                  : await swapToHigherPrice(priceSwapStart, arbitrageur.address)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:243:18-243:25: `.wait()`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:245:76-248:18: `.interface.decodeEventLog(
                  pool.interface.events['Mint(address,address,int24,int24,uint128,uint256,uint256)'],
                  mintReceipt.events?.[2].data!
                )`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:249:17-249:59: `arbBalance0 = arbBalance0.sub(amount0Mint)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:249:42-249:59: `.sub(amount0Mint)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:250:17-250:59: `arbBalance1 = arbBalance1.sub(amount1Mint)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:250:42-250:59: `.sub(amount1Mint)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:254:17-256:70: `zeroForOne
                  ? await swapExact0For1(inputAmount, wallet.address)
                  : await swapExact1For0(inputAmount, wallet.address)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:259:82-263:18: `.callStatic.burn(
                  tickLower,
                  tickUpper,
                  getMaxLiquidityPerTick(tickSpacing)
                )`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:264:17-264:91: `await pool.burn(tickLower, tickUpper, getMaxLiquidityPerTick(tickSpacing))`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:264:27-264:91: `.burn(tickLower, tickUpper, getMaxLiquidityPerTick(tickSpacing))`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:265:17-265:59: `arbBalance0 = arbBalance0.add(amount0Burn)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:265:42-265:59: `.add(amount0Burn)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:266:17-266:59: `arbBalance1 = arbBalance1.add(amount1Burn)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:266:42-266:59: `.add(amount1Burn)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:272:31-272:117: `.callStatic.collect(arbitrageur.address, tickLower, tickUpper, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:274:40-274:57: `.sub(amount0Burn)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:275:40-275:57: `.sub(amount1Burn)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:277:17-277:62: `arbBalance0 = arbBalance0.add(amount0Collect)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:277:42-277:62: `.add(amount0Collect)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:278:17-278:62: `arbBalance1 = arbBalance1.add(amount1Collect)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:278:42-278:62: `.add(amount1Collect)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:290:63-290:70: `.div(2)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:291:17-291:71: `await swapToHigherPrice(priceToSwapTo, wallet.address)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:292:17-292:61: `arbBalance0 = arbBalance0.sub(backrunDelta0)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:292:42-292:61: `.sub(backrunDelta0)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:293:17-293:61: `arbBalance1 = arbBalance1.sub(backrunDelta1)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:293:42-293:61: `.sub(backrunDelta1)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:326:54-326:62: `.slot0()`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:331:44-331:52: `.from(0)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:332:44-332:52: `.from(0)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:334:17-336:70: `zeroForOne
                  ? await swapExact0For1(inputAmount, wallet.address)
                  : await swapExact1For0(inputAmount, wallet.address)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:346:63-346:70: `.div(2)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:347:17-349:74: `zeroForOne
                  ? await swapToHigherPrice(priceToSwapTo, wallet.address)
                  : await swapToLowerPrice(priceToSwapTo, wallet.address)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:350:17-350:61: `arbBalance0 = arbBalance0.sub(backrunDelta0)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:350:42-350:61: `.sub(backrunDelta0)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:351:17-351:61: `arbBalance1 = arbBalance1.sub(backrunDelta1)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:351:42-351:61: `.sub(backrunDelta1)`
$DIR/test/UniswapV3Pool.arbitrage.spec.ts:364:54-364:62: `.slot0()`
$DIR/test/UniswapV3Pool.gas.spec.ts:86:11-86:70: `await snapshotGasCost(swapExact0For1(2000, wallet.address))`
$DIR/test/UniswapV3Pool.gas.spec.ts:87:29-87:37: `.slot0()`
$DIR/test/UniswapV3Pool.gas.spec.ts:88:29-88:37: `.slot0()`
$DIR/test/UniswapV3Pool.gas.spec.ts:92:11-92:98: `await snapshotGasCost(swapExact0For1(expandTo18Decimals(1).div(10000), wallet.address))`
$DIR/test/UniswapV3Pool.gas.spec.ts:92:69-92:80: `.div(10000)`
$DIR/test/UniswapV3Pool.gas.spec.ts:93:29-93:37: `.slot0()`
$DIR/test/UniswapV3Pool.gas.spec.ts:97:11-97:81: `await swapExact0For1(expandTo18Decimals(1).div(10000), wallet.address)`
$DIR/test/UniswapV3Pool.gas.spec.ts:97:53-97:64: `.div(10000)`
$DIR/test/UniswapV3Pool.gas.spec.ts:98:29-98:37: `.slot0()`
$DIR/test/UniswapV3Pool.gas.spec.ts:99:11-99:70: `await snapshotGasCost(swapExact0For1(2000, wallet.address))`
$DIR/test/UniswapV3Pool.gas.spec.ts:100:29-100:37: `.slot0()`
$DIR/test/UniswapV3Pool.gas.spec.ts:104:11-104:53: `await swapExact0For1(1000, wallet.address)`
$DIR/test/UniswapV3Pool.gas.spec.ts:105:29-105:37: `.slot0()`
$DIR/test/UniswapV3Pool.gas.spec.ts:106:11-106:98: `await snapshotGasCost(swapExact0For1(expandTo18Decimals(1).div(10000), wallet.address))`
$DIR/test/UniswapV3Pool.gas.spec.ts:106:69-106:80: `.div(10000)`
$DIR/test/UniswapV3Pool.gas.spec.ts:107:29-107:37: `.slot0()`
$DIR/test/UniswapV3Pool.gas.spec.ts:111:11-111:88: `await snapshotGasCost(swapExact0For1(expandTo18Decimals(10), wallet.address))`
$DIR/test/UniswapV3Pool.gas.spec.ts:112:29-112:37: `.slot0()`
$DIR/test/UniswapV3Pool.gas.spec.ts:116:11-116:120: `await mint(wallet.address, startingTick - 3 * tickSpacing, startingTick - tickSpacing, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.gas.spec.ts:117:11-122:12: `await mint(
            wallet.address,
            startingTick - 4 * tickSpacing,
            startingTick - 2 * tickSpacing,
            expandTo18Decimals(1)
          )`
$DIR/test/UniswapV3Pool.gas.spec.ts:123:29-123:37: `.slot0()`
$DIR/test/UniswapV3Pool.gas.spec.ts:124:11-124:87: `await snapshotGasCost(swapExact0For1(expandTo18Decimals(1), wallet.address))`
$DIR/test/UniswapV3Pool.gas.spec.ts:125:29-125:37: `.slot0()`
$DIR/test/UniswapV3Pool.gas.spec.ts:129:11-129:101: `await mint(wallet.address, minTick, startingTick - 2 * tickSpacing, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.gas.spec.ts:130:11-130:87: `await snapshotGasCost(swapExact0For1(expandTo18Decimals(1), wallet.address))`
$DIR/test/UniswapV3Pool.gas.spec.ts:131:29-131:37: `.slot0()`
$DIR/test/UniswapV3Pool.gas.spec.ts:135:11-135:120: `await mint(wallet.address, startingTick - 3 * tickSpacing, startingTick - tickSpacing, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.gas.spec.ts:136:11-141:12: `await mint(
            wallet.address,
            startingTick - 4 * tickSpacing,
            startingTick - 2 * tickSpacing,
            expandTo18Decimals(1)
          )`
$DIR/test/UniswapV3Pool.gas.spec.ts:142:11-142:81: `await swapExact0For1(expandTo18Decimals(1).div(10000), wallet.address)`
$DIR/test/UniswapV3Pool.gas.spec.ts:142:53-142:64: `.div(10000)`
$DIR/test/UniswapV3Pool.gas.spec.ts:143:11-143:87: `await snapshotGasCost(swapExact0For1(expandTo18Decimals(1), wallet.address))`
$DIR/test/UniswapV3Pool.gas.spec.ts:144:29-144:37: `.slot0()`
$DIR/test/UniswapV3Pool.gas.spec.ts:148:11-148:101: `await mint(wallet.address, minTick, startingTick - 2 * tickSpacing, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.gas.spec.ts:149:11-149:81: `await swapExact0For1(expandTo18Decimals(1).div(10000), wallet.address)`
$DIR/test/UniswapV3Pool.gas.spec.ts:149:53-149:64: `.div(10000)`
$DIR/test/UniswapV3Pool.gas.spec.ts:150:29-150:37: `.slot0()`
$DIR/test/UniswapV3Pool.gas.spec.ts:151:11-151:87: `await snapshotGasCost(swapExact0For1(expandTo18Decimals(1), wallet.address))`
$DIR/test/UniswapV3Pool.gas.spec.ts:152:29-152:37: `.slot0()`
$DIR/test/UniswapV3Pool.gas.spec.ts:156:11-156:120: `await mint(wallet.address, startingTick - 3 * tickSpacing, startingTick - tickSpacing, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.gas.spec.ts:157:11-162:12: `await mint(
            wallet.address,
            startingTick - 4 * tickSpacing,
            startingTick - 2 * tickSpacing,
            expandTo18Decimals(1)
          )`
$DIR/test/UniswapV3Pool.gas.spec.ts:163:11-163:50: `await swapExact0For1(2, wallet.address)`
$DIR/test/UniswapV3Pool.gas.spec.ts:164:11-164:36: `await pool.advanceTime(1)`
$DIR/test/UniswapV3Pool.gas.spec.ts:164:21-164:36: `.advanceTime(1)`
$DIR/test/UniswapV3Pool.gas.spec.ts:165:11-165:87: `await snapshotGasCost(swapExact0For1(expandTo18Decimals(1), wallet.address))`
$DIR/test/UniswapV3Pool.gas.spec.ts:166:29-166:37: `.slot0()`
$DIR/test/UniswapV3Pool.gas.spec.ts:170:11-170:120: `await mint(wallet.address, startingTick - 3 * tickSpacing, startingTick - tickSpacing, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.gas.spec.ts:171:11-176:12: `await mint(
            wallet.address,
            startingTick - 4 * tickSpacing,
            startingTick - 2 * tickSpacing,
            expandTo18Decimals(1)
          )`
$DIR/test/UniswapV3Pool.gas.spec.ts:177:11-177:70: `await swapExact0For1(expandTo18Decimals(1), wallet.address)`
$DIR/test/UniswapV3Pool.gas.spec.ts:178:11-178:65: `await swapToHigherPrice(startingPrice, wallet.address)`
$DIR/test/UniswapV3Pool.gas.spec.ts:179:11-179:36: `await pool.advanceTime(1)`
$DIR/test/UniswapV3Pool.gas.spec.ts:179:21-179:36: `.advanceTime(1)`
$DIR/test/UniswapV3Pool.gas.spec.ts:180:11-180:87: `await snapshotGasCost(swapExact0For1(expandTo18Decimals(1), wallet.address))`
$DIR/test/UniswapV3Pool.gas.spec.ts:181:29-181:37: `.slot0()`
$DIR/test/UniswapV3Pool.gas.spec.ts:205:15-205:103: `await snapshotGasCost(mint(wallet.address, tickLower, tickUpper, expandTo18Decimals(1)))`
$DIR/test/UniswapV3Pool.gas.spec.ts:208:15-208:86: `await mint(wallet.address, tickLower, tickUpper, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.gas.spec.ts:209:15-209:103: `await snapshotGasCost(mint(wallet.address, tickLower, tickUpper, expandTo18Decimals(1)))`
$DIR/test/UniswapV3Pool.gas.spec.ts:212:15-212:86: `await mint(wallet.address, tickLower, tickUpper, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.gas.spec.ts:213:15-213:102: `await snapshotGasCost(mint(other.address, tickLower, tickUpper, expandTo18Decimals(1)))`
$DIR/test/UniswapV3Pool.gas.spec.ts:216:15-216:86: `await mint(wallet.address, tickLower, tickUpper, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.gas.spec.ts:217:15-217:40: `await pool.advanceTime(1)`
$DIR/test/UniswapV3Pool.gas.spec.ts:217:25-217:40: `.advanceTime(1)`
$DIR/test/UniswapV3Pool.gas.spec.ts:218:15-218:103: `await snapshotGasCost(mint(wallet.address, tickLower, tickUpper, expandTo18Decimals(1)))`
$DIR/test/UniswapV3Pool.gas.spec.ts:249:15-249:92: `await snapshotGasCost(pool.burn(tickLower, tickUpper, expandTo18Decimals(1)))`
$DIR/test/UniswapV3Pool.gas.spec.ts:249:41-249:91: `.burn(tickLower, tickUpper, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.gas.spec.ts:252:15-252:99: `await snapshotGasCost(pool.burn(tickLower, tickUpper, expandTo18Decimals(1).div(2)))`
$DIR/test/UniswapV3Pool.gas.spec.ts:252:41-252:98: `.burn(tickLower, tickUpper, expandTo18Decimals(1).div(2))`
$DIR/test/UniswapV3Pool.gas.spec.ts:252:90-252:97: `.div(2)`
$DIR/test/UniswapV3Pool.gas.spec.ts:255:15-255:85: `await mint(other.address, tickLower, tickUpper, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.gas.spec.ts:256:15-256:92: `await snapshotGasCost(pool.burn(tickLower, tickUpper, expandTo18Decimals(1)))`
$DIR/test/UniswapV3Pool.gas.spec.ts:256:41-256:91: `.burn(tickLower, tickUpper, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.gas.spec.ts:259:15-259:40: `await pool.advanceTime(1)`
$DIR/test/UniswapV3Pool.gas.spec.ts:259:25-259:40: `.advanceTime(1)`
$DIR/test/UniswapV3Pool.gas.spec.ts:260:15-260:92: `await snapshotGasCost(pool.burn(tickLower, tickUpper, expandTo18Decimals(1)))`
$DIR/test/UniswapV3Pool.gas.spec.ts:260:41-260:91: `.burn(tickLower, tickUpper, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.gas.spec.ts:271:11-271:82: `await mint(wallet.address, tickLower, tickUpper, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.gas.spec.ts:272:11-272:79: `await swapExact0For1(expandTo18Decimals(1).div(100), wallet.address)`
$DIR/test/UniswapV3Pool.gas.spec.ts:272:53-272:62: `.div(100)`
$DIR/test/UniswapV3Pool.gas.spec.ts:273:11-273:51: `await pool.burn(tickLower, tickUpper, 0)`
$DIR/test/UniswapV3Pool.gas.spec.ts:273:21-273:51: `.burn(tickLower, tickUpper, 0)`
$DIR/test/UniswapV3Pool.gas.spec.ts:274:11-274:79: `await swapExact0For1(expandTo18Decimals(1).div(100), wallet.address)`
$DIR/test/UniswapV3Pool.gas.spec.ts:274:53-274:62: `.div(100)`
$DIR/test/UniswapV3Pool.gas.spec.ts:275:11-275:68: `await snapshotGasCost(pool.burn(tickLower, tickUpper, 0))`
$DIR/test/UniswapV3Pool.gas.spec.ts:275:37-275:67: `.burn(tickLower, tickUpper, 0)`
$DIR/test/UniswapV3Pool.gas.spec.ts:284:11-284:82: `await mint(wallet.address, tickLower, tickUpper, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.gas.spec.ts:285:11-285:79: `await swapExact0For1(expandTo18Decimals(1).div(100), wallet.address)`
$DIR/test/UniswapV3Pool.gas.spec.ts:285:53-285:62: `.div(100)`
$DIR/test/UniswapV3Pool.gas.spec.ts:286:11-286:51: `await pool.burn(tickLower, tickUpper, 0)`
$DIR/test/UniswapV3Pool.gas.spec.ts:286:21-286:51: `.burn(tickLower, tickUpper, 0)`
$DIR/test/UniswapV3Pool.gas.spec.ts:287:11-287:108: `await snapshotGasCost(pool.collect(wallet.address, tickLower, tickUpper, MaxUint128, MaxUint128))`
$DIR/test/UniswapV3Pool.gas.spec.ts:287:37-287:107: `.collect(wallet.address, tickLower, tickUpper, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.gas.spec.ts:293:11-293:76: `await snapshotGasCost(pool.increaseObservationCardinalityNext(5))`
$DIR/test/UniswapV3Pool.gas.spec.ts:293:37-293:75: `.increaseObservationCardinalityNext(5)`
$DIR/test/UniswapV3Pool.gas.spec.ts:296:11-296:76: `await snapshotGasCost(pool.increaseObservationCardinalityNext(3))`
$DIR/test/UniswapV3Pool.gas.spec.ts:296:37-296:75: `.increaseObservationCardinalityNext(3)`
$DIR/test/UniswapV3Pool.gas.spec.ts:302:11-302:94: `await snapshotGasCost(pool.estimateGas.snapshotCumulativesInside(minTick, maxTick))`
$DIR/test/UniswapV3Pool.gas.spec.ts:302:37-302:93: `.estimateGas.snapshotCumulativesInside(minTick, maxTick)`
$DIR/test/UniswapV3Pool.gas.spec.ts:305:11-305:73: `await swapToHigherPrice(MAX_SQRT_RATIO.sub(1), wallet.address)`
$DIR/test/UniswapV3Pool.gas.spec.ts:305:49-305:56: `.sub(1)`
$DIR/test/UniswapV3Pool.gas.spec.ts:306:11-306:94: `await snapshotGasCost(pool.estimateGas.snapshotCumulativesInside(minTick, maxTick))`
$DIR/test/UniswapV3Pool.gas.spec.ts:306:37-306:93: `.estimateGas.snapshotCumulativesInside(minTick, maxTick)`
$DIR/test/UniswapV3Pool.gas.spec.ts:309:11-309:72: `await swapToLowerPrice(MIN_SQRT_RATIO.add(1), wallet.address)`
$DIR/test/UniswapV3Pool.gas.spec.ts:309:48-309:55: `.add(1)`
$DIR/test/UniswapV3Pool.gas.spec.ts:310:11-310:94: `await snapshotGasCost(pool.estimateGas.snapshotCumulativesInside(minTick, maxTick))`
$DIR/test/UniswapV3Pool.gas.spec.ts:310:37-310:93: `.estimateGas.snapshotCumulativesInside(minTick, maxTick)`
$DIR/test/UniswapV3Pool.spec.ts:108:22-108:32: `.factory()`
$DIR/test/UniswapV3Pool.spec.ts:109:22-109:31: `.token0()`
$DIR/test/UniswapV3Pool.spec.ts:110:22-110:31: `.token1()`
$DIR/test/UniswapV3Pool.spec.ts:111:22-111:44: `.maxLiquidityPerTick()`
$DIR/test/UniswapV3Pool.spec.ts:116:7-116:51: `await pool.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:116:17-116:51: `.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:117:24-117:58: `.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:120:24-120:38: `.initialize(1)`
$DIR/test/UniswapV3Pool.spec.ts:121:24-121:58: `.initialize(MIN_SQRT_RATIO.sub(1))`
$DIR/test/UniswapV3Pool.spec.ts:121:50-121:57: `.sub(1)`
$DIR/test/UniswapV3Pool.spec.ts:124:24-124:51: `.initialize(MAX_SQRT_RATIO)`
$DIR/test/UniswapV3Pool.spec.ts:125:24-125:70: `.initialize(BigNumber.from(2).pow(160).sub(1))`
$DIR/test/UniswapV3Pool.spec.ts:125:45-125:53: `.from(2)`
$DIR/test/UniswapV3Pool.spec.ts:125:53-125:62: `.pow(160)`
$DIR/test/UniswapV3Pool.spec.ts:125:62-125:69: `.sub(1)`
$DIR/test/UniswapV3Pool.spec.ts:128:7-128:44: `await pool.initialize(MIN_SQRT_RATIO)`
$DIR/test/UniswapV3Pool.spec.ts:128:17-128:44: `.initialize(MIN_SQRT_RATIO)`
$DIR/test/UniswapV3Pool.spec.ts:129:25-129:33: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:132:7-132:51: `await pool.initialize(MAX_SQRT_RATIO.sub(1))`
$DIR/test/UniswapV3Pool.spec.ts:132:17-132:51: `.initialize(MAX_SQRT_RATIO.sub(1))`
$DIR/test/UniswapV3Pool.spec.ts:132:43-132:50: `.sub(1)`
$DIR/test/UniswapV3Pool.spec.ts:133:25-133:33: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:137:7-137:35: `await pool.initialize(price)`
$DIR/test/UniswapV3Pool.spec.ts:137:17-137:35: `.initialize(price)`
$DIR/test/UniswapV3Pool.spec.ts:139:60-139:68: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:142:25-142:33: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:145:7-145:51: `await pool.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:145:17-145:51: `.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:146:7-151:9: `checkObservationEquals(await pool.observations(0), {
        secondsPerLiquidityCumulativeX128: 0,
        initialized: true,
        blockTimestamp: TEST_POOL_START_TIME,
        tickCumulative: 0,
      })`
$DIR/test/UniswapV3Pool.spec.ts:146:40-146:56: `.observations(0)`
$DIR/test/UniswapV3Pool.spec.ts:155:24-155:49: `.initialize(sqrtPriceX96)`
$DIR/test/UniswapV3Pool.spec.ts:161:24-161:62: `.increaseObservationCardinalityNext(2)`
$DIR/test/UniswapV3Pool.spec.ts:164:7-164:51: `await pool.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:164:17-164:51: `.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:165:24-165:62: `.increaseObservationCardinalityNext(2)`
$DIR/test/UniswapV3Pool.spec.ts:170:7-170:51: `await pool.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:170:17-170:51: `.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:171:7-171:55: `await pool.increaseObservationCardinalityNext(3)`
$DIR/test/UniswapV3Pool.spec.ts:171:17-171:55: `.increaseObservationCardinalityNext(3)`
$DIR/test/UniswapV3Pool.spec.ts:172:24-172:62: `.increaseObservationCardinalityNext(2)`
$DIR/test/UniswapV3Pool.spec.ts:175:7-175:51: `await pool.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:175:17-175:51: `.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:176:7-176:55: `await pool.increaseObservationCardinalityNext(3)`
$DIR/test/UniswapV3Pool.spec.ts:176:17-176:55: `.increaseObservationCardinalityNext(3)`
$DIR/test/UniswapV3Pool.spec.ts:177:7-177:55: `await pool.increaseObservationCardinalityNext(2)`
$DIR/test/UniswapV3Pool.spec.ts:177:17-177:55: `.increaseObservationCardinalityNext(2)`
$DIR/test/UniswapV3Pool.spec.ts:178:25-178:33: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:181:7-181:51: `await pool.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:181:17-181:51: `.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:182:7-182:55: `await pool.increaseObservationCardinalityNext(2)`
$DIR/test/UniswapV3Pool.spec.ts:182:17-182:55: `.increaseObservationCardinalityNext(2)`
$DIR/test/UniswapV3Pool.spec.ts:183:80-183:88: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:214:47-214:69: `.maxLiquidityPerTick()`
$DIR/test/UniswapV3Pool.spec.ts:215:108-215:115: `.add(1)`
$DIR/test/UniswapV3Pool.spec.ts:222:11-222:89: `await mint(wallet.address, minTick + tickSpacing, maxTick - tickSpacing, 1000)`
$DIR/test/UniswapV3Pool.spec.ts:224:47-224:69: `.maxLiquidityPerTick()`
$DIR/test/UniswapV3Pool.spec.ts:226:97-226:107: `.sub(1000)`
$DIR/test/UniswapV3Pool.spec.ts:226:107-226:114: `.add(1)`
$DIR/test/UniswapV3Pool.spec.ts:229:101-229:111: `.sub(1000)`
$DIR/test/UniswapV3Pool.spec.ts:229:111-229:118: `.add(1)`
$DIR/test/UniswapV3Pool.spec.ts:232:101-232:111: `.sub(1000)`
$DIR/test/UniswapV3Pool.spec.ts:232:111-232:118: `.add(1)`
$DIR/test/UniswapV3Pool.spec.ts:234:108-234:118: `.sub(1000)`
$DIR/test/UniswapV3Pool.spec.ts:244:30-244:54: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:245:30-245:54: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:249:29-249:37: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:258:32-258:56: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:259:32-259:56: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:263:13-263:99: `await mint(wallet.address, maxTick - tickSpacing, maxTick, BigNumber.from(2).pow(102))`
$DIR/test/UniswapV3Pool.spec.ts:263:81-263:89: `.from(2)`
$DIR/test/UniswapV3Pool.spec.ts:263:89-263:98: `.pow(102)`
$DIR/test/UniswapV3Pool.spec.ts:264:32-264:56: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:265:32-265:56: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:272:32-272:56: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:273:32-273:56: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:277:13-277:55: `await mint(wallet.address, -240, 0, 10000)`
$DIR/test/UniswapV3Pool.spec.ts:278:13-278:44: `await pool.burn(-240, 0, 10000)`
$DIR/test/UniswapV3Pool.spec.ts:278:23-278:44: `.burn(-240, 0, 10000)`
$DIR/test/UniswapV3Pool.spec.ts:279:52-279:120: `.callStatic.collect(wallet.address, -240, 0, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:285:13-285:53: `await mint(wallet.address, -240, 0, 100)`
$DIR/test/UniswapV3Pool.spec.ts:286:31-286:43: `.ticks(-240)`
$DIR/test/UniswapV3Pool.spec.ts:287:31-287:40: `.ticks(0)`
$DIR/test/UniswapV3Pool.spec.ts:288:31-288:50: `.ticks(tickSpacing)`
$DIR/test/UniswapV3Pool.spec.ts:289:31-289:54: `.ticks(tickSpacing * 2)`
$DIR/test/UniswapV3Pool.spec.ts:290:13-290:63: `await mint(wallet.address, -240, tickSpacing, 150)`
$DIR/test/UniswapV3Pool.spec.ts:291:31-291:43: `.ticks(-240)`
$DIR/test/UniswapV3Pool.spec.ts:292:31-292:40: `.ticks(0)`
$DIR/test/UniswapV3Pool.spec.ts:293:31-293:50: `.ticks(tickSpacing)`
$DIR/test/UniswapV3Pool.spec.ts:294:31-294:54: `.ticks(tickSpacing * 2)`
$DIR/test/UniswapV3Pool.spec.ts:295:13-295:63: `await mint(wallet.address, 0, tickSpacing * 2, 60)`
$DIR/test/UniswapV3Pool.spec.ts:296:31-296:43: `.ticks(-240)`
$DIR/test/UniswapV3Pool.spec.ts:297:31-297:40: `.ticks(0)`
$DIR/test/UniswapV3Pool.spec.ts:298:31-298:50: `.ticks(tickSpacing)`
$DIR/test/UniswapV3Pool.spec.ts:299:31-299:54: `.ticks(tickSpacing * 2)`
$DIR/test/UniswapV3Pool.spec.ts:303:13-303:53: `await mint(wallet.address, -240, 0, 100)`
$DIR/test/UniswapV3Pool.spec.ts:304:13-304:52: `await mint(wallet.address, -240, 0, 40)`
$DIR/test/UniswapV3Pool.spec.ts:305:13-305:41: `await pool.burn(-240, 0, 90)`
$DIR/test/UniswapV3Pool.spec.ts:305:23-305:41: `.burn(-240, 0, 90)`
$DIR/test/UniswapV3Pool.spec.ts:306:31-306:43: `.ticks(-240)`
$DIR/test/UniswapV3Pool.spec.ts:307:31-307:40: `.ticks(0)`
$DIR/test/UniswapV3Pool.spec.ts:311:13-311:53: `await mint(wallet.address, -240, 0, 100)`
$DIR/test/UniswapV3Pool.spec.ts:312:13-312:42: `await pool.burn(-240, 0, 100)`
$DIR/test/UniswapV3Pool.spec.ts:312:23-312:42: `.burn(-240, 0, 100)`
$DIR/test/UniswapV3Pool.spec.ts:313:96-313:108: `.ticks(-240)`
$DIR/test/UniswapV3Pool.spec.ts:320:13-320:53: `await mint(wallet.address, -240, 0, 100)`
$DIR/test/UniswapV3Pool.spec.ts:321:13-321:42: `await pool.burn(-240, 0, 100)`
$DIR/test/UniswapV3Pool.spec.ts:321:23-321:42: `.burn(-240, 0, 100)`
$DIR/test/UniswapV3Pool.spec.ts:322:96-322:105: `.ticks(0)`
$DIR/test/UniswapV3Pool.spec.ts:328:13-328:53: `await mint(wallet.address, -240, 0, 100)`
$DIR/test/UniswapV3Pool.spec.ts:329:13-329:61: `await mint(wallet.address, -tickSpacing, 0, 250)`
$DIR/test/UniswapV3Pool.spec.ts:330:13-330:42: `await pool.burn(-240, 0, 100)`
$DIR/test/UniswapV3Pool.spec.ts:330:23-330:42: `.burn(-240, 0, 100)`
$DIR/test/UniswapV3Pool.spec.ts:332:94-332:106: `.ticks(-240)`
$DIR/test/UniswapV3Pool.spec.ts:336:14-336:113: `({ liquidityGross, feeGrowthOutside0X128, feeGrowthOutside1X128 } = await pool.ticks(-tickSpacing))`
$DIR/test/UniswapV3Pool.spec.ts:336:92-336:112: `.ticks(-tickSpacing)`
$DIR/test/UniswapV3Pool.spec.ts:343:13-348:15: `checkObservationEquals(await pool.observations(0), {
              tickCumulative: 0,
              blockTimestamp: TEST_POOL_START_TIME,
              initialized: true,
              secondsPerLiquidityCumulativeX128: 0,
            })`
$DIR/test/UniswapV3Pool.spec.ts:343:46-343:62: `.observations(0)`
$DIR/test/UniswapV3Pool.spec.ts:349:13-349:38: `await pool.advanceTime(1)`
$DIR/test/UniswapV3Pool.spec.ts:349:23-349:38: `.advanceTime(1)`
$DIR/test/UniswapV3Pool.spec.ts:350:13-350:53: `await mint(wallet.address, -240, 0, 100)`
$DIR/test/UniswapV3Pool.spec.ts:351:13-356:15: `checkObservationEquals(await pool.observations(0), {
              tickCumulative: 0,
              blockTimestamp: TEST_POOL_START_TIME,
              initialized: true,
              secondsPerLiquidityCumulativeX128: 0,
            })`
$DIR/test/UniswapV3Pool.spec.ts:351:46-351:62: `.observations(0)`
$DIR/test/UniswapV3Pool.spec.ts:367:32-367:56: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:368:32-368:56: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:372:13-372:90: `await mint(wallet.address, minTick + tickSpacing, maxTick - tickSpacing, 100)`
$DIR/test/UniswapV3Pool.spec.ts:373:50-373:79: `.ticks(minTick + tickSpacing)`
$DIR/test/UniswapV3Pool.spec.ts:378:13-378:90: `await mint(wallet.address, minTick + tickSpacing, maxTick - tickSpacing, 100)`
$DIR/test/UniswapV3Pool.spec.ts:379:50-379:79: `.ticks(maxTick - tickSpacing)`
$DIR/test/UniswapV3Pool.spec.ts:389:32-389:56: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:390:32-390:56: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:394:13-394:90: `await mint(wallet.address, minTick + tickSpacing, maxTick - tickSpacing, 100)`
$DIR/test/UniswapV3Pool.spec.ts:395:13-395:79: `await pool.burn(minTick + tickSpacing, maxTick - tickSpacing, 100)`
$DIR/test/UniswapV3Pool.spec.ts:395:23-395:79: `.burn(minTick + tickSpacing, maxTick - tickSpacing, 100)`
$DIR/test/UniswapV3Pool.spec.ts:396:52-402:14: `.callStatic.collect(
              wallet.address,
              minTick + tickSpacing,
              maxTick - tickSpacing,
              MaxUint128,
              MaxUint128
            )`
$DIR/test/UniswapV3Pool.spec.ts:408:13-413:15: `checkObservationEquals(await pool.observations(0), {
              tickCumulative: 0,
              blockTimestamp: TEST_POOL_START_TIME,
              initialized: true,
              secondsPerLiquidityCumulativeX128: 0,
            })`
$DIR/test/UniswapV3Pool.spec.ts:408:46-408:62: `.observations(0)`
$DIR/test/UniswapV3Pool.spec.ts:414:13-414:38: `await pool.advanceTime(1)`
$DIR/test/UniswapV3Pool.spec.ts:414:23-414:38: `.advanceTime(1)`
$DIR/test/UniswapV3Pool.spec.ts:415:13-415:62: `await mint(wallet.address, minTick, maxTick, 100)`
$DIR/test/UniswapV3Pool.spec.ts:416:13-421:15: `checkObservationEquals(await pool.observations(0), {
              tickCumulative: -23028,
              blockTimestamp: TEST_POOL_START_TIME + 1,
              initialized: true,
              secondsPerLiquidityCumulativeX128: '107650226801941937191829992860413859',
            })`
$DIR/test/UniswapV3Pool.spec.ts:416:46-416:62: `.observations(0)`
$DIR/test/UniswapV3Pool.spec.ts:431:32-431:56: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:432:32-432:56: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:436:13-436:99: `await mint(wallet.address, minTick, minTick + tickSpacing, BigNumber.from(2).pow(102))`
$DIR/test/UniswapV3Pool.spec.ts:436:81-436:89: `.from(2)`
$DIR/test/UniswapV3Pool.spec.ts:436:89-436:98: `.pow(102)`
$DIR/test/UniswapV3Pool.spec.ts:437:32-437:56: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:438:32-438:56: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:445:32-445:56: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:446:32-446:56: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:450:13-450:62: `await mint(wallet.address, -46080, -46020, 10000)`
$DIR/test/UniswapV3Pool.spec.ts:451:13-451:51: `await pool.burn(-46080, -46020, 10000)`
$DIR/test/UniswapV3Pool.spec.ts:451:23-451:51: `.burn(-46080, -46020, 10000)`
$DIR/test/UniswapV3Pool.spec.ts:452:52-458:14: `.callStatic.collect(
              wallet.address,
              -46080,
              -46020,
              MaxUint128,
              MaxUint128
            )`
$DIR/test/UniswapV3Pool.spec.ts:464:13-469:15: `checkObservationEquals(await pool.observations(0), {
              tickCumulative: 0,
              blockTimestamp: TEST_POOL_START_TIME,
              initialized: true,
              secondsPerLiquidityCumulativeX128: 0,
            })`
$DIR/test/UniswapV3Pool.spec.ts:464:46-464:62: `.observations(0)`
$DIR/test/UniswapV3Pool.spec.ts:470:13-470:38: `await pool.advanceTime(1)`
$DIR/test/UniswapV3Pool.spec.ts:470:23-470:38: `.advanceTime(1)`
$DIR/test/UniswapV3Pool.spec.ts:471:13-471:60: `await mint(wallet.address, -46080, -23040, 100)`
$DIR/test/UniswapV3Pool.spec.ts:472:13-477:15: `checkObservationEquals(await pool.observations(0), {
              tickCumulative: 0,
              blockTimestamp: TEST_POOL_START_TIME,
              initialized: true,
              secondsPerLiquidityCumulativeX128: 0,
            })`
$DIR/test/UniswapV3Pool.spec.ts:472:46-472:62: `.observations(0)`
$DIR/test/UniswapV3Pool.spec.ts:483:9-483:40: `await pool.setFeeProtocol(6, 6)`
$DIR/test/UniswapV3Pool.spec.ts:483:19-483:40: `.setFeeProtocol(6, 6)`
$DIR/test/UniswapV3Pool.spec.ts:485:9-485:104: `await mint(wallet.address, minTick + tickSpacing, maxTick - tickSpacing, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.spec.ts:486:9-486:76: `await swapExact0For1(expandTo18Decimals(1).div(10), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:486:51-486:59: `.div(10)`
$DIR/test/UniswapV3Pool.spec.ts:487:9-487:77: `await swapExact1For0(expandTo18Decimals(1).div(100), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:487:51-487:60: `.div(100)`
$DIR/test/UniswapV3Pool.spec.ts:489:84-489:99: `.protocolFees()`
$DIR/test/UniswapV3Pool.spec.ts:495:9-495:104: `await mint(wallet.address, minTick + tickSpacing, maxTick - tickSpacing, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.spec.ts:496:9-496:76: `await swapExact0For1(expandTo18Decimals(1).div(10), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:496:51-496:59: `.div(10)`
$DIR/test/UniswapV3Pool.spec.ts:497:9-497:77: `await swapExact1For0(expandTo18Decimals(1).div(100), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:497:51-497:60: `.div(100)`
$DIR/test/UniswapV3Pool.spec.ts:499:84-499:99: `.protocolFees()`
$DIR/test/UniswapV3Pool.spec.ts:503:9-504:10: `await pool.setFeeProtocol(6, 6)
        ;`
$DIR/test/UniswapV3Pool.spec.ts:503:19-503:40: `.setFeeProtocol(6, 6)`
$DIR/test/UniswapV3Pool.spec.ts:504:10-504:98: `({ token0: token0ProtocolFees, token1: token1ProtocolFees } = await pool.protocolFees())`
$DIR/test/UniswapV3Pool.spec.ts:504:82-504:97: `.protocolFees()`
$DIR/test/UniswapV3Pool.spec.ts:510:9-510:103: `await mint(other.address, minTick + tickSpacing, maxTick - tickSpacing, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.spec.ts:511:9-511:76: `await swapExact0For1(expandTo18Decimals(1).div(10), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:511:51-511:59: `.div(10)`
$DIR/test/UniswapV3Pool.spec.ts:512:9-512:77: `await swapExact1For0(expandTo18Decimals(1).div(100), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:512:51-512:60: `.div(100)`
$DIR/test/UniswapV3Pool.spec.ts:515:26-515:80: `.burn(minTick + tickSpacing, maxTick - tickSpacing, 0)`
$DIR/test/UniswapV3Pool.spec.ts:517:9-517:84: `await mint(wallet.address, minTick + tickSpacing, maxTick - tickSpacing, 1)`
$DIR/test/UniswapV3Pool.spec.ts:524:23-524:111: `.positions(getPositionKey(wallet.address, minTick + tickSpacing, maxTick - tickSpacing))`
$DIR/test/UniswapV3Pool.spec.ts:531:9-532:10: `await pool.burn(minTick + tickSpacing, maxTick - tickSpacing, 1)
        ;`
$DIR/test/UniswapV3Pool.spec.ts:531:19-531:73: `.burn(minTick + tickSpacing, maxTick - tickSpacing, 1)`
$DIR/test/UniswapV3Pool.spec.ts:532:10-538:112: `({
          liquidity,
          feeGrowthInside0LastX128,
          feeGrowthInside1LastX128,
          tokensOwed1,
          tokensOwed0,
        } = await pool.positions(getPositionKey(wallet.address, minTick + tickSpacing, maxTick - tickSpacing)))`
$DIR/test/UniswapV3Pool.spec.ts:538:23-538:111: `.positions(getPositionKey(wallet.address, minTick + tickSpacing, maxTick - tickSpacing))`
$DIR/test/UniswapV3Pool.spec.ts:566:7-566:33: `await pool.advanceTime(10)`
$DIR/test/UniswapV3Pool.spec.ts:566:17-566:33: `.advanceTime(10)`
$DIR/test/UniswapV3Pool.spec.ts:567:7-567:73: `await mint(other.address, minTick, maxTick, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.spec.ts:568:7-568:66: `await swapExact0For1(expandTo18Decimals(1), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:569:7-569:66: `await swapExact1For0(expandTo18Decimals(1), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:570:7-570:78: `await pool.connect(other).burn(minTick, maxTick, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.spec.ts:570:17-570:32: `.connect(other)`
$DIR/test/UniswapV3Pool.spec.ts:570:32-570:78: `.burn(minTick, maxTick, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.spec.ts:577:21-577:80: `.positions(getPositionKey(other.address, minTick, maxTick))`
$DIR/test/UniswapV3Pool.spec.ts:589:7-589:33: `await pool.advanceTime(10)`
$DIR/test/UniswapV3Pool.spec.ts:589:17-589:33: `.advanceTime(10)`
$DIR/test/UniswapV3Pool.spec.ts:590:7-590:58: `await mint(wallet.address, tickLower, tickUpper, 1)`
$DIR/test/UniswapV3Pool.spec.ts:591:7-591:66: `await swapExact0For1(expandTo18Decimals(1), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:592:7-592:47: `await pool.burn(tickLower, tickUpper, 1)`
$DIR/test/UniswapV3Pool.spec.ts:592:17-592:47: `.burn(tickLower, tickUpper, 1)`
$DIR/test/UniswapV3Pool.spec.ts:593:7-593:40: `await checkTickIsClear(tickLower)`
$DIR/test/UniswapV3Pool.spec.ts:594:7-594:40: `await checkTickIsClear(tickUpper)`
$DIR/test/UniswapV3Pool.spec.ts:601:7-601:33: `await pool.advanceTime(10)`
$DIR/test/UniswapV3Pool.spec.ts:601:17-601:33: `.advanceTime(10)`
$DIR/test/UniswapV3Pool.spec.ts:602:7-602:58: `await mint(wallet.address, tickLower, tickUpper, 1)`
$DIR/test/UniswapV3Pool.spec.ts:603:7-603:72: `await mint(wallet.address, tickLower + tickSpacing, tickUpper, 1)`
$DIR/test/UniswapV3Pool.spec.ts:604:7-604:66: `await swapExact0For1(expandTo18Decimals(1), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:605:7-605:47: `await pool.burn(tickLower, tickUpper, 1)`
$DIR/test/UniswapV3Pool.spec.ts:605:17-605:47: `.burn(tickLower, tickUpper, 1)`
$DIR/test/UniswapV3Pool.spec.ts:606:7-606:40: `await checkTickIsClear(tickLower)`
$DIR/test/UniswapV3Pool.spec.ts:607:7-607:43: `await checkTickIsNotClear(tickUpper)`
$DIR/test/UniswapV3Pool.spec.ts:614:7-614:33: `await pool.advanceTime(10)`
$DIR/test/UniswapV3Pool.spec.ts:614:17-614:33: `.advanceTime(10)`
$DIR/test/UniswapV3Pool.spec.ts:615:7-615:58: `await mint(wallet.address, tickLower, tickUpper, 1)`
$DIR/test/UniswapV3Pool.spec.ts:616:7-616:72: `await mint(wallet.address, tickLower, tickUpper - tickSpacing, 1)`
$DIR/test/UniswapV3Pool.spec.ts:617:7-617:66: `await swapExact0For1(expandTo18Decimals(1), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:618:7-618:47: `await pool.burn(tickLower, tickUpper, 1)`
$DIR/test/UniswapV3Pool.spec.ts:618:17-618:47: `.burn(tickLower, tickUpper, 1)`
$DIR/test/UniswapV3Pool.spec.ts:619:7-619:43: `await checkTickIsNotClear(tickLower)`
$DIR/test/UniswapV3Pool.spec.ts:620:7-620:40: `await checkTickIsClear(tickUpper)`
$DIR/test/UniswapV3Pool.spec.ts:640:21-640:34: `.observe([0])`
$DIR/test/UniswapV3Pool.spec.ts:642:7-643:8: `await pool.advanceTime(10)
      ;`
$DIR/test/UniswapV3Pool.spec.ts:642:17-642:33: `.advanceTime(10)`
$DIR/test/UniswapV3Pool.spec.ts:643:8-645:35: `({
        tickCumulatives: [tickCumulative],
      } = await pool.observe([0]))`
$DIR/test/UniswapV3Pool.spec.ts:645:21-645:34: `.observe([0])`
$DIR/test/UniswapV3Pool.spec.ts:651:7-651:49: `await swapExact0For1(1000, wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:652:7-652:32: `await pool.advanceTime(4)`
$DIR/test/UniswapV3Pool.spec.ts:652:17-652:32: `.advanceTime(4)`
$DIR/test/UniswapV3Pool.spec.ts:655:21-655:34: `.observe([0])`
$DIR/test/UniswapV3Pool.spec.ts:660:7-660:73: `await swapExact0For1(expandTo18Decimals(1).div(2), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:660:49-660:56: `.div(2)`
$DIR/test/UniswapV3Pool.spec.ts:661:25-661:33: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:662:7-662:32: `await pool.advanceTime(4)`
$DIR/test/UniswapV3Pool.spec.ts:662:17-662:32: `.advanceTime(4)`
$DIR/test/UniswapV3Pool.spec.ts:663:7-663:73: `await swapExact1For0(expandTo18Decimals(1).div(4), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:663:49-663:56: `.div(4)`
$DIR/test/UniswapV3Pool.spec.ts:664:25-664:33: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:665:7-665:32: `await pool.advanceTime(6)`
$DIR/test/UniswapV3Pool.spec.ts:665:17-665:32: `.advanceTime(6)`
$DIR/test/UniswapV3Pool.spec.ts:668:21-668:34: `.observe([0])`
$DIR/test/UniswapV3Pool.spec.ts:685:41-685:53: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:687:30-687:54: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:688:30-688:54: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:690:7-690:71: `await mint(wallet.address, lowerTick, upperTick, liquidityDelta)`
$DIR/test/UniswapV3Pool.spec.ts:692:40-692:52: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:695:27-695:51: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:695:52-695:60: `.sub(b0)`
$DIR/test/UniswapV3Pool.spec.ts:696:27-696:51: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:696:52-696:60: `.sub(b1)`
$DIR/test/UniswapV3Pool.spec.ts:704:41-704:53: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:706:30-706:54: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:707:30-707:54: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:709:7-709:71: `await mint(wallet.address, lowerTick, upperTick, liquidityDelta)`
$DIR/test/UniswapV3Pool.spec.ts:711:40-711:52: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:714:27-714:51: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:714:52-714:60: `.sub(b0)`
$DIR/test/UniswapV3Pool.spec.ts:715:27-715:51: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:715:52-715:60: `.sub(b1)`
$DIR/test/UniswapV3Pool.spec.ts:723:41-723:53: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:725:30-725:54: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:726:30-726:54: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:728:7-728:71: `await mint(wallet.address, lowerTick, upperTick, liquidityDelta)`
$DIR/test/UniswapV3Pool.spec.ts:730:40-730:52: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:733:27-733:51: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:733:52-733:60: `.sub(b0)`
$DIR/test/UniswapV3Pool.spec.ts:734:27-734:51: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:734:52-734:60: `.sub(b1)`
$DIR/test/UniswapV3Pool.spec.ts:740:7-740:81: `await mint(wallet.address, lowerTick, upperTick, expandTo18Decimals(1000))`
$DIR/test/UniswapV3Pool.spec.ts:742:24-742:77: `.burn(lowerTick, upperTick, expandTo18Decimals(1001))`
$DIR/test/UniswapV3Pool.spec.ts:750:7-750:71: `await mint(wallet.address, lowerTick, upperTick, liquidityDelta)`
$DIR/test/UniswapV3Pool.spec.ts:752:41-752:53: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:755:7-755:54: `await swapExact0For1(amount0In, wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:757:40-757:52: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:760:51-760:75: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:761:51-761:75: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:762:53-762:79: `.balanceOf(wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:763:53-763:79: `.balanceOf(wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:765:7-765:47: `await pool.burn(lowerTick, upperTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:765:17-765:47: `.burn(lowerTick, upperTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:766:7-766:87: `await pool.collect(wallet.address, lowerTick, upperTick, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:766:17-766:87: `.collect(wallet.address, lowerTick, upperTick, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:768:7-768:47: `await pool.burn(lowerTick, upperTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:768:17-768:47: `.burn(lowerTick, upperTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:769:60-775:8: `.callStatic.collect(
        wallet.address,
        lowerTick,
        upperTick,
        MaxUint128,
        MaxUint128
      )`
$DIR/test/UniswapV3Pool.spec.ts:779:52-779:78: `.balanceOf(wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:780:52-780:78: `.balanceOf(wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:781:50-781:74: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:782:50-782:74: `.balanceOf(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:795:26-795:38: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:801:28-801:40: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:804:11-804:87: `await mint(wallet.address, -tickSpacing, tickSpacing, expandTo18Decimals(3))`
$DIR/test/UniswapV3Pool.spec.ts:805:28-805:40: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:808:11-808:90: `await mint(wallet.address, tickSpacing, tickSpacing * 2, expandTo18Decimals(3))`
$DIR/test/UniswapV3Pool.spec.ts:809:28-809:40: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:812:11-812:92: `await mint(wallet.address, -tickSpacing * 2, -tickSpacing, expandTo18Decimals(3))`
$DIR/test/UniswapV3Pool.spec.ts:813:28-813:40: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:816:37-816:49: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:823:11-823:75: `await mint(wallet.address, lowerTick, upperTick, liquidityDelta)`
$DIR/test/UniswapV3Pool.spec.ts:826:36-826:48: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:830:11-830:50: `await swapExact0For1(1, wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:831:38-831:46: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:834:40-834:52: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:838:37-838:49: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:845:11-845:75: `await mint(wallet.address, lowerTick, upperTick, liquidityDelta)`
$DIR/test/UniswapV3Pool.spec.ts:848:36-848:48: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:852:11-852:50: `await swapExact0For1(1, wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:853:38-853:46: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:856:40-856:52: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:871:7-871:65: `await swapExact1For0(expandTo18Decimals(2), other.address)`
$DIR/test/UniswapV3Pool.spec.ts:872:24-872:60: `.burn(0, 120, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.spec.ts:877:24-877:80: `.collect(wallet.address, 0, 120, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:881:25-881:33: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:888:7-888:65: `await swapExact0For1(expandTo18Decimals(2), other.address)`
$DIR/test/UniswapV3Pool.spec.ts:889:24-889:61: `.burn(-120, 0, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.spec.ts:894:24-894:81: `.collect(wallet.address, -120, 0, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:897:25-897:33: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:907:9-907:67: `await swapExact1For0(expandTo18Decimals(2), other.address)`
$DIR/test/UniswapV3Pool.spec.ts:908:26-908:62: `.burn(0, 120, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.spec.ts:913:26-913:82: `.collect(wallet.address, 0, 120, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:917:27-917:35: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:924:9-924:67: `await swapExact0For1(expandTo18Decimals(2), other.address)`
$DIR/test/UniswapV3Pool.spec.ts:925:26-925:63: `.burn(-120, 0, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.spec.ts:930:26-930:83: `.collect(wallet.address, -120, 0, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:933:27-933:35: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:945:7-945:74: `await mint(wallet.address, minTick, maxTick, expandTo18Decimals(1))`
$DIR/test/UniswapV3Pool.spec.ts:946:7-946:102: `await mint(wallet.address, minTick + tickSpacing, maxTick - tickSpacing, expandTo18Decimals(2))`
$DIR/test/UniswapV3Pool.spec.ts:948:7-948:66: `await swapExact0For1(expandTo18Decimals(1), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:951:7-951:43: `await pool.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:951:17-951:43: `.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:952:7-952:71: `await pool.burn(minTick + tickSpacing, maxTick - tickSpacing, 0)`
$DIR/test/UniswapV3Pool.spec.ts:952:17-952:71: `.burn(minTick + tickSpacing, maxTick - tickSpacing, 0)`
$DIR/test/UniswapV3Pool.spec.ts:954:63-956:8: `.positions(
        getPositionKey(wallet.address, minTick, maxTick)
      )`
$DIR/test/UniswapV3Pool.spec.ts:957:63-959:8: `.positions(
        getPositionKey(wallet.address, minTick + tickSpacing, maxTick - tickSpacing)
      )`
$DIR/test/UniswapV3Pool.spec.ts:975:9-975:56: `await pool.setFeeGrowthGlobal0X128(magicNumber)`
$DIR/test/UniswapV3Pool.spec.ts:975:19-975:56: `.setFeeGrowthGlobal0X128(magicNumber)`
$DIR/test/UniswapV3Pool.spec.ts:976:9-976:45: `await pool.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:976:19-976:45: `.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:978:56-978:116: `.positions(getPositionKey(wallet.address, minTick, maxTick))`
$DIR/test/UniswapV3Pool.spec.ts:985:9-985:63: `await pool.setFeeGrowthGlobal0X128(magicNumber.add(1))`
$DIR/test/UniswapV3Pool.spec.ts:985:19-985:63: `.setFeeGrowthGlobal0X128(magicNumber.add(1))`
$DIR/test/UniswapV3Pool.spec.ts:985:55-985:62: `.add(1)`
$DIR/test/UniswapV3Pool.spec.ts:986:9-986:45: `await pool.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:986:19-986:45: `.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:988:56-988:116: `.positions(getPositionKey(wallet.address, minTick, maxTick))`
$DIR/test/UniswapV3Pool.spec.ts:995:9-995:65: `await pool.setFeeGrowthGlobal0X128(constants.MaxUint256)`
$DIR/test/UniswapV3Pool.spec.ts:995:19-995:65: `.setFeeGrowthGlobal0X128(constants.MaxUint256)`
$DIR/test/UniswapV3Pool.spec.ts:996:9-996:45: `await pool.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:996:19-996:45: `.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:998:56-998:116: `.positions(getPositionKey(wallet.address, minTick, maxTick))`
$DIR/test/UniswapV3Pool.spec.ts:1013:9-1013:68: `await swapExact0For1(expandTo18Decimals(1), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:1014:9-1014:45: `await pool.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1014:19-1014:45: `.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1015:48-1021:10: `.callStatic.collect(
          wallet.address,
          minTick,
          maxTick,
          MaxUint128,
          MaxUint128
        )`
$DIR/test/UniswapV3Pool.spec.ts:1026:9-1026:68: `await swapExact1For0(expandTo18Decimals(1), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:1027:9-1027:45: `await pool.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1027:19-1027:45: `.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1028:48-1034:10: `.callStatic.collect(
          wallet.address,
          minTick,
          maxTick,
          MaxUint128,
          MaxUint128
        )`
$DIR/test/UniswapV3Pool.spec.ts:1039:9-1039:68: `await swapExact0For1(expandTo18Decimals(1), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:1040:9-1040:68: `await swapExact1For0(expandTo18Decimals(1), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:1041:9-1041:45: `await pool.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1041:19-1041:45: `.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1042:48-1048:10: `.callStatic.collect(
          wallet.address,
          minTick,
          maxTick,
          MaxUint128,
          MaxUint128
        )`
$DIR/test/UniswapV3Pool.spec.ts:1065:25-1065:33: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:1069:7-1069:38: `await pool.setFeeProtocol(6, 6)`
$DIR/test/UniswapV3Pool.spec.ts:1069:17-1069:38: `.setFeeProtocol(6, 6)`
$DIR/test/UniswapV3Pool.spec.ts:1070:25-1070:33: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:1074:24-1074:45: `.setFeeProtocol(3, 3)`
$DIR/test/UniswapV3Pool.spec.ts:1075:24-1075:47: `.setFeeProtocol(11, 11)`
$DIR/test/UniswapV3Pool.spec.ts:1079:24-1079:39: `.connect(other)`
$DIR/test/UniswapV3Pool.spec.ts:1079:39-1079:60: `.setFeeProtocol(6, 6)`
$DIR/test/UniswapV3Pool.spec.ts:1124:8-1128:10: `({ token0Fees, token1Fees } = await swapAndGetFeesOwed({
        amount: expandTo18Decimals(1),
        zeroForOne: true,
        poke: true,
      }))`
$DIR/test/UniswapV3Pool.spec.ts:1131:8-1135:10: `({ token0Fees, token1Fees } = await swapAndGetFeesOwed({
        amount: expandTo18Decimals(1),
        zeroForOne: true,
        poke: true,
      }))`
$DIR/test/UniswapV3Pool.spec.ts:1138:8-1142:10: `({ token0Fees, token1Fees } = await swapAndGetFeesOwed({
        amount: expandTo18Decimals(1),
        zeroForOne: true,
        poke: true,
      }))`
$DIR/test/UniswapV3Pool.spec.ts:1150:8-1154:10: `({ token0Fees, token1Fees } = await swapAndGetFeesOwed({
        amount: expandTo18Decimals(1),
        zeroForOne: false,
        poke: true,
      }))`
$DIR/test/UniswapV3Pool.spec.ts:1157:8-1161:10: `({ token0Fees, token1Fees } = await swapAndGetFeesOwed({
        amount: expandTo18Decimals(1),
        zeroForOne: false,
        poke: true,
      }))`
$DIR/test/UniswapV3Pool.spec.ts:1164:8-1168:10: `({ token0Fees, token1Fees } = await swapAndGetFeesOwed({
        amount: expandTo18Decimals(1),
        zeroForOne: false,
        poke: true,
      }))`
$DIR/test/UniswapV3Pool.spec.ts:1174:7-1174:38: `await pool.setFeeProtocol(6, 6)`
$DIR/test/UniswapV3Pool.spec.ts:1174:17-1174:38: `.setFeeProtocol(6, 6)`
$DIR/test/UniswapV3Pool.spec.ts:1188:9-1188:40: `await pool.setFeeProtocol(6, 6)`
$DIR/test/UniswapV3Pool.spec.ts:1188:19-1188:40: `.setFeeProtocol(6, 6)`
$DIR/test/UniswapV3Pool.spec.ts:1189:48-1189:115: `.callStatic.collectProtocol(wallet.address, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:1195:9-1195:40: `await pool.setFeeProtocol(6, 6)`
$DIR/test/UniswapV3Pool.spec.ts:1195:19-1195:40: `.setFeeProtocol(6, 6)`
$DIR/test/UniswapV3Pool.spec.ts:1197:9-1201:11: `await swapAndGetFeesOwed({
          amount: expandTo18Decimals(1),
          zeroForOne: true,
          poke: true,
        })`
$DIR/test/UniswapV3Pool.spec.ts:1203:26-1203:81: `.collectProtocol(other.address, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:1209:9-1209:40: `await pool.setFeeProtocol(8, 5)`
$DIR/test/UniswapV3Pool.spec.ts:1209:19-1209:40: `.setFeeProtocol(8, 5)`
$DIR/test/UniswapV3Pool.spec.ts:1211:9-1215:11: `await swapAndGetFeesOwed({
          amount: expandTo18Decimals(1),
          zeroForOne: true,
          poke: false,
        })`
$DIR/test/UniswapV3Pool.spec.ts:1216:9-1220:11: `await swapAndGetFeesOwed({
          amount: expandTo18Decimals(1),
          zeroForOne: false,
          poke: false,
        })`
$DIR/test/UniswapV3Pool.spec.ts:1222:26-1222:81: `.collectProtocol(other.address, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:1233:7-1237:9: `await swapAndGetFeesOwed({
        amount: expandTo18Decimals(1),
        zeroForOne: true,
        poke: true,
      })`
$DIR/test/UniswapV3Pool.spec.ts:1250:7-1254:9: `await swapAndGetFeesOwed({
        amount: expandTo18Decimals(1),
        zeroForOne: true,
        poke: false,
      })`
$DIR/test/UniswapV3Pool.spec.ts:1256:7-1256:38: `await pool.setFeeProtocol(6, 6)`
$DIR/test/UniswapV3Pool.spec.ts:1256:17-1256:38: `.setFeeProtocol(6, 6)`
$DIR/test/UniswapV3Pool.spec.ts:1269:7-1269:38: `await pool.setFeeProtocol(6, 6)`
$DIR/test/UniswapV3Pool.spec.ts:1269:17-1269:38: `.setFeeProtocol(6, 6)`
$DIR/test/UniswapV3Pool.spec.ts:1281:7-1281:83: `await pool.collect(wallet.address, minTick, maxTick, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:1281:17-1281:83: `.collect(wallet.address, minTick, maxTick, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:1292:82-1292:97: `.protocolFees()`
$DIR/test/UniswapV3Pool.spec.ts:1296:7-1296:43: `await pool.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1296:17-1296:43: `.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1297:24-1297:90: `.collect(wallet.address, minTick, maxTick, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:1300:8-1300:96: `({ token0: token0ProtocolFees, token1: token1ProtocolFees } = await pool.protocolFees())`
$DIR/test/UniswapV3Pool.spec.ts:1300:80-1300:95: `.protocolFees()`
$DIR/test/UniswapV3Pool.spec.ts:1320:11-1320:48: `await mint(wallet.address, 12, 24, 1)`
$DIR/test/UniswapV3Pool.spec.ts:1321:11-1321:52: `await mint(wallet.address, -144, -120, 1)`
$DIR/test/UniswapV3Pool.spec.ts:1324:56-1324:63: `.div(4)`
$DIR/test/UniswapV3Pool.spec.ts:1325:11-1325:70: `await mint(wallet.address, 120000, 121200, liquidityAmount)`
$DIR/test/UniswapV3Pool.spec.ts:1326:11-1326:70: `await swapExact1For0(expandTo18Decimals(1), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:1327:28-1327:66: `.burn(120000, 121200, liquidityAmount)`
$DIR/test/UniswapV3Pool.spec.ts:1332:29-1332:37: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:1335:56-1335:63: `.div(4)`
$DIR/test/UniswapV3Pool.spec.ts:1336:11-1336:72: `await mint(wallet.address, -121200, -120000, liquidityAmount)`
$DIR/test/UniswapV3Pool.spec.ts:1337:11-1337:70: `await swapExact0For1(expandTo18Decimals(1), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:1338:28-1338:68: `.burn(-121200, -120000, liquidityAmount)`
$DIR/test/UniswapV3Pool.spec.ts:1343:29-1343:37: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:1351:5-1351:49: `pool = await createPool(FeeAmount.MEDIUM, 1)`
$DIR/test/UniswapV3Pool.spec.ts:1352:46-1352:81: `.getContractFactory('TickMathTest')`
$DIR/test/UniswapV3Pool.spec.ts:1352:82-1352:91: `.deploy()`
$DIR/test/UniswapV3Pool.spec.ts:1353:42-1353:77: `.getContractFactory('SwapMathTest')`
$DIR/test/UniswapV3Pool.spec.ts:1353:78-1353:87: `.deploy()`
$DIR/test/UniswapV3Pool.spec.ts:1354:35-1354:62: `.getSqrtRatioAtTick(-24081)`
$DIR/test/UniswapV3Pool.spec.ts:1354:63-1354:70: `.add(1)`
$DIR/test/UniswapV3Pool.spec.ts:1357:5-1357:30: `await pool.initialize(p0)`
$DIR/test/UniswapV3Pool.spec.ts:1357:15-1357:30: `.initialize(p0)`
$DIR/test/UniswapV3Pool.spec.ts:1358:22-1358:34: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:1359:23-1359:31: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:1363:5-1363:58: `await mint(wallet.address, -24082, -24080, liquidity)`
$DIR/test/UniswapV3Pool.spec.ts:1364:22-1364:34: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:1366:5-1366:58: `await mint(wallet.address, -24082, -24081, liquidity)`
$DIR/test/UniswapV3Pool.spec.ts:1367:22-1367:34: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:1371:71-1377:8: `.computeSwapStep(
        p0,
        p0.sub(1),
        liquidity,
        3,
        FeeAmount.MEDIUM
      )`
$DIR/test/UniswapV3Pool.spec.ts:1373:11-1373:18: `.sub(1)`
$DIR/test/UniswapV3Pool.spec.ts:1390:46-1390:54: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:1394:22-1394:34: `.liquidity()`
$DIR/test/UniswapV3Pool.spec.ts:1404:7-1404:51: `await pool.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:1404:17-1404:51: `.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:1457:38-1457:45: `.add(1)`
$DIR/test/UniswapV3Pool.spec.ts:1458:48-1458:55: `.add(1)`
$DIR/test/UniswapV3Pool.spec.ts:1464:11-1464:49: `await flash(1001, 2002, other.address)`
$DIR/test/UniswapV3Pool.spec.ts:1465:28-1465:51: `.feeGrowthGlobal0X128()`
$DIR/test/UniswapV3Pool.spec.ts:1468:28-1468:51: `.feeGrowthGlobal1X128()`
$DIR/test/UniswapV3Pool.spec.ts:1485:28-1485:51: `.feeGrowthGlobal0X128()`
$DIR/test/UniswapV3Pool.spec.ts:1494:28-1494:51: `.feeGrowthGlobal1X128()`
$DIR/test/UniswapV3Pool.spec.ts:1505:28-1505:51: `.feeGrowthGlobal0X128()`
$DIR/test/UniswapV3Pool.spec.ts:1508:28-1508:51: `.feeGrowthGlobal1X128()`
$DIR/test/UniswapV3Pool.spec.ts:1526:11-1526:49: `await flash(2002, 4004, other.address)`
$DIR/test/UniswapV3Pool.spec.ts:1528:88-1528:103: `.protocolFees()`
$DIR/test/UniswapV3Pool.spec.ts:1532:28-1532:51: `.feeGrowthGlobal0X128()`
$DIR/test/UniswapV3Pool.spec.ts:1535:28-1535:51: `.feeGrowthGlobal1X128()`
$DIR/test/UniswapV3Pool.spec.ts:1545:60-1545:75: `.protocolFees()`
$DIR/test/UniswapV3Pool.spec.ts:1548:28-1548:51: `.feeGrowthGlobal0X128()`
$DIR/test/UniswapV3Pool.spec.ts:1558:60-1558:75: `.protocolFees()`
$DIR/test/UniswapV3Pool.spec.ts:1561:28-1561:51: `.feeGrowthGlobal1X128()`
$DIR/test/UniswapV3Pool.spec.ts:1572:88-1572:103: `.protocolFees()`
$DIR/test/UniswapV3Pool.spec.ts:1576:28-1576:51: `.feeGrowthGlobal0X128()`
$DIR/test/UniswapV3Pool.spec.ts:1579:28-1579:51: `.feeGrowthGlobal1X128()`
$DIR/test/UniswapV3Pool.spec.ts:1589:24-1589:62: `.increaseObservationCardinalityNext(2)`
$DIR/test/UniswapV3Pool.spec.ts:1594:100-1594:108: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:1603:23-1603:39: `.observations(0)`
$DIR/test/UniswapV3Pool.spec.ts:1610:9-1610:57: `await pool.increaseObservationCardinalityNext(2)`
$DIR/test/UniswapV3Pool.spec.ts:1610:19-1610:57: `.increaseObservationCardinalityNext(2)`
$DIR/test/UniswapV3Pool.spec.ts:1611:100-1611:108: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:1617:9-1617:57: `await pool.increaseObservationCardinalityNext(5)`
$DIR/test/UniswapV3Pool.spec.ts:1617:19-1617:57: `.increaseObservationCardinalityNext(5)`
$DIR/test/UniswapV3Pool.spec.ts:1618:9-1618:57: `await pool.increaseObservationCardinalityNext(3)`
$DIR/test/UniswapV3Pool.spec.ts:1618:19-1618:57: `.increaseObservationCardinalityNext(3)`
$DIR/test/UniswapV3Pool.spec.ts:1619:100-1619:108: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:1633:24-1633:39: `.connect(other)`
$DIR/test/UniswapV3Pool.spec.ts:1633:39-1633:60: `.setFeeProtocol(5, 5)`
$DIR/test/UniswapV3Pool.spec.ts:1636:24-1636:45: `.setFeeProtocol(3, 3)`
$DIR/test/UniswapV3Pool.spec.ts:1637:24-1637:45: `.setFeeProtocol(6, 3)`
$DIR/test/UniswapV3Pool.spec.ts:1638:24-1638:45: `.setFeeProtocol(3, 6)`
$DIR/test/UniswapV3Pool.spec.ts:1639:24-1639:47: `.setFeeProtocol(11, 11)`
$DIR/test/UniswapV3Pool.spec.ts:1640:24-1640:46: `.setFeeProtocol(6, 11)`
$DIR/test/UniswapV3Pool.spec.ts:1641:24-1641:46: `.setFeeProtocol(11, 6)`
$DIR/test/UniswapV3Pool.spec.ts:1644:7-1644:38: `await pool.setFeeProtocol(4, 4)`
$DIR/test/UniswapV3Pool.spec.ts:1644:17-1644:38: `.setFeeProtocol(4, 4)`
$DIR/test/UniswapV3Pool.spec.ts:1647:7-1647:40: `await pool.setFeeProtocol(10, 10)`
$DIR/test/UniswapV3Pool.spec.ts:1647:17-1647:40: `.setFeeProtocol(10, 10)`
$DIR/test/UniswapV3Pool.spec.ts:1650:7-1650:38: `await pool.setFeeProtocol(7, 7)`
$DIR/test/UniswapV3Pool.spec.ts:1650:17-1650:38: `.setFeeProtocol(7, 7)`
$DIR/test/UniswapV3Pool.spec.ts:1651:25-1651:33: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:1654:7-1654:38: `await pool.setFeeProtocol(7, 7)`
$DIR/test/UniswapV3Pool.spec.ts:1654:17-1654:38: `.setFeeProtocol(7, 7)`
$DIR/test/UniswapV3Pool.spec.ts:1655:7-1655:38: `await pool.setFeeProtocol(5, 8)`
$DIR/test/UniswapV3Pool.spec.ts:1655:17-1655:38: `.setFeeProtocol(5, 8)`
$DIR/test/UniswapV3Pool.spec.ts:1656:25-1656:33: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:1659:7-1659:38: `await pool.setFeeProtocol(4, 4)`
$DIR/test/UniswapV3Pool.spec.ts:1659:17-1659:38: `.setFeeProtocol(4, 4)`
$DIR/test/UniswapV3Pool.spec.ts:1660:7-1660:38: `await pool.setFeeProtocol(0, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1660:17-1660:38: `.setFeeProtocol(0, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1661:25-1661:33: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:1664:24-1664:45: `.setFeeProtocol(7, 7)`
$DIR/test/UniswapV3Pool.spec.ts:1667:7-1667:38: `await pool.setFeeProtocol(7, 5)`
$DIR/test/UniswapV3Pool.spec.ts:1667:17-1667:38: `.setFeeProtocol(7, 5)`
$DIR/test/UniswapV3Pool.spec.ts:1668:24-1668:45: `.setFeeProtocol(0, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1671:7-1671:39: `await pool.setFeeProtocol(4, 10)`
$DIR/test/UniswapV3Pool.spec.ts:1671:17-1671:39: `.setFeeProtocol(4, 10)`
$DIR/test/UniswapV3Pool.spec.ts:1672:24-1672:45: `.setFeeProtocol(6, 8)`
$DIR/test/UniswapV3Pool.spec.ts:1675:7-1675:38: `await pool.setFeeProtocol(5, 9)`
$DIR/test/UniswapV3Pool.spec.ts:1675:17-1675:38: `.setFeeProtocol(5, 9)`
$DIR/test/UniswapV3Pool.spec.ts:1676:24-1676:45: `.setFeeProtocol(5, 9)`
$DIR/test/UniswapV3Pool.spec.ts:1688:21-1688:72: `.getContractFactory('TestUniswapV3ReentrantCallee')`
$DIR/test/UniswapV3Pool.spec.ts:1689:8-1689:17: `.deploy()`
$DIR/test/UniswapV3Pool.spec.ts:1692:29-1692:57: `.swapToReenter(pool.address)`
$DIR/test/UniswapV3Pool.spec.ts:1705:24-1705:72: `.snapshotCumulativesInside(tickUpper, tickLower)`
$DIR/test/UniswapV3Pool.spec.ts:1708:24-1708:72: `.snapshotCumulativesInside(tickUpper, tickUpper)`
$DIR/test/UniswapV3Pool.spec.ts:1711:24-1711:90: `.snapshotCumulativesInside(getMinTick(tickSpacing) - 1, tickUpper)`
$DIR/test/UniswapV3Pool.spec.ts:1714:24-1714:90: `.snapshotCumulativesInside(tickLower, getMaxTick(tickSpacing) + 1)`
$DIR/test/UniswapV3Pool.spec.ts:1717:24-1717:86: `.snapshotCumulativesInside(tickLower - tickSpacing, tickUpper)`
$DIR/test/UniswapV3Pool.spec.ts:1720:24-1720:86: `.snapshotCumulativesInside(tickLower, tickUpper + tickSpacing)`
$DIR/test/UniswapV3Pool.spec.ts:1727:21-1727:69: `.snapshotCumulativesInside(tickLower, tickUpper)`
$DIR/test/UniswapV3Pool.spec.ts:1733:7-1733:32: `await pool.advanceTime(5)`
$DIR/test/UniswapV3Pool.spec.ts:1733:17-1733:32: `.advanceTime(5)`
$DIR/test/UniswapV3Pool.spec.ts:1738:21-1738:69: `.snapshotCumulativesInside(tickLower, tickUpper)`
$DIR/test/UniswapV3Pool.spec.ts:1744:7-1744:32: `await pool.advanceTime(5)`
$DIR/test/UniswapV3Pool.spec.ts:1744:17-1744:32: `.advanceTime(5)`
$DIR/test/UniswapV3Pool.spec.ts:1745:7-1745:69: `await swapToHigherPrice(encodePriceSqrt(2, 1), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:1746:7-1746:32: `await pool.advanceTime(7)`
$DIR/test/UniswapV3Pool.spec.ts:1746:17-1746:32: `.advanceTime(7)`
$DIR/test/UniswapV3Pool.spec.ts:1751:21-1751:69: `.snapshotCumulativesInside(tickLower, tickUpper)`
$DIR/test/UniswapV3Pool.spec.ts:1757:7-1757:32: `await pool.advanceTime(5)`
$DIR/test/UniswapV3Pool.spec.ts:1757:17-1757:32: `.advanceTime(5)`
$DIR/test/UniswapV3Pool.spec.ts:1758:7-1758:68: `await swapToLowerPrice(encodePriceSqrt(1, 2), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:1759:7-1759:32: `await pool.advanceTime(7)`
$DIR/test/UniswapV3Pool.spec.ts:1759:17-1759:32: `.advanceTime(7)`
$DIR/test/UniswapV3Pool.spec.ts:1764:21-1764:69: `.snapshotCumulativesInside(tickLower, tickUpper)`
$DIR/test/UniswapV3Pool.spec.ts:1771:7-1771:68: `await swapToLowerPrice(encodePriceSqrt(1, 2), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:1772:7-1772:32: `await pool.advanceTime(5)`
$DIR/test/UniswapV3Pool.spec.ts:1772:17-1772:32: `.advanceTime(5)`
$DIR/test/UniswapV3Pool.spec.ts:1773:7-1773:69: `await swapToHigherPrice(encodePriceSqrt(1, 1), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:1774:7-1774:32: `await pool.advanceTime(7)`
$DIR/test/UniswapV3Pool.spec.ts:1774:17-1774:32: `.advanceTime(7)`
$DIR/test/UniswapV3Pool.spec.ts:1779:21-1779:69: `.snapshotCumulativesInside(tickLower, tickUpper)`
$DIR/test/UniswapV3Pool.spec.ts:1786:7-1786:69: `await swapToHigherPrice(encodePriceSqrt(2, 1), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:1787:7-1787:32: `await pool.advanceTime(5)`
$DIR/test/UniswapV3Pool.spec.ts:1787:17-1787:32: `.advanceTime(5)`
$DIR/test/UniswapV3Pool.spec.ts:1788:7-1788:68: `await swapToLowerPrice(encodePriceSqrt(1, 1), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:1789:7-1789:32: `await pool.advanceTime(7)`
$DIR/test/UniswapV3Pool.spec.ts:1789:17-1789:32: `.advanceTime(7)`
$DIR/test/UniswapV3Pool.spec.ts:1794:21-1794:69: `.snapshotCumulativesInside(tickLower, tickUpper)`
$DIR/test/UniswapV3Pool.spec.ts:1796:25-1796:33: `.slot0()`
$DIR/test/UniswapV3Pool.spec.ts:1801:7-1801:32: `await pool.advanceTime(5)`
$DIR/test/UniswapV3Pool.spec.ts:1801:17-1801:32: `.advanceTime(5)`
$DIR/test/UniswapV3Pool.spec.ts:1802:7-1802:73: `await mint(wallet.address, tickUpper, getMaxTick(tickSpacing), 15)`
$DIR/test/UniswapV3Pool.spec.ts:1803:7-1803:69: `await swapToHigherPrice(encodePriceSqrt(2, 1), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:1804:7-1804:32: `await pool.advanceTime(8)`
$DIR/test/UniswapV3Pool.spec.ts:1804:17-1804:32: `.advanceTime(8)`
$DIR/test/UniswapV3Pool.spec.ts:1809:21-1809:83: `.snapshotCumulativesInside(tickUpper, getMaxTick(tickSpacing))`
$DIR/test/UniswapV3Pool.spec.ts:1817:7-1817:73: `await mint(wallet.address, tickLower, getMaxTick(tickSpacing), 15)`
$DIR/test/UniswapV3Pool.spec.ts:1818:7-1818:32: `await pool.advanceTime(5)`
$DIR/test/UniswapV3Pool.spec.ts:1818:17-1818:32: `.advanceTime(5)`
$DIR/test/UniswapV3Pool.spec.ts:1819:7-1819:69: `await swapToHigherPrice(encodePriceSqrt(2, 1), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:1820:7-1820:32: `await pool.advanceTime(8)`
$DIR/test/UniswapV3Pool.spec.ts:1820:17-1820:32: `.advanceTime(8)`
$DIR/test/UniswapV3Pool.spec.ts:1825:21-1825:69: `.snapshotCumulativesInside(tickLower, tickUpper)`
$DIR/test/UniswapV3Pool.spec.ts:1831:7-1831:32: `await pool.advanceTime(5)`
$DIR/test/UniswapV3Pool.spec.ts:1831:17-1831:32: `.advanceTime(5)`
$DIR/test/UniswapV3Pool.spec.ts:1832:7-1832:73: `await mint(wallet.address, getMinTick(tickSpacing), tickLower, 15)`
$DIR/test/UniswapV3Pool.spec.ts:1837:21-1837:83: `.snapshotCumulativesInside(getMinTick(tickSpacing), tickLower)`
$DIR/test/UniswapV3Pool.spec.ts:1838:7-1838:32: `await pool.advanceTime(8)`
$DIR/test/UniswapV3Pool.spec.ts:1838:17-1838:32: `.advanceTime(8)`
$DIR/test/UniswapV3Pool.spec.ts:1840:7-1840:68: `await swapToLowerPrice(encodePriceSqrt(1, 2), wallet.address)`
$DIR/test/UniswapV3Pool.spec.ts:1841:7-1841:32: `await pool.advanceTime(3)`
$DIR/test/UniswapV3Pool.spec.ts:1841:17-1841:32: `.advanceTime(3)`
$DIR/test/UniswapV3Pool.spec.ts:1846:21-1846:83: `.snapshotCumulativesInside(getMinTick(tickSpacing), tickLower)`
$DIR/test/UniswapV3Pool.spec.ts:1847:56-1847:64: `.from(3)`
$DIR/test/UniswapV3Pool.spec.ts:1847:64-1847:73: `.shl(128)`
$DIR/test/UniswapV3Pool.spec.ts:1847:73-1847:81: `.div(15)`
$DIR/test/UniswapV3Pool.spec.ts:1848:43-1848:83: `.sub(secondsPerLiquidityInsideX128Start)`
$DIR/test/UniswapV3Pool.spec.ts:1854:34-1854:65: `.sub(tickCumulativeInsideStart)`
$DIR/test/UniswapV3Pool.spec.ts:1862:7-1862:51: `await pool.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:1862:17-1862:51: `.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:1863:7-1863:54: `await mint(wallet.address, minTick, maxTick, 1)`
$DIR/test/UniswapV3Pool.spec.ts:1864:7-1864:64: `await flash(0, 0, wallet.address, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:1866:73-1869:9: `.all([
        pool.feeGrowthGlobal0X128(),
        pool.feeGrowthGlobal1X128(),
      ])`
$DIR/test/UniswapV3Pool.spec.ts:1867:13-1867:36: `.feeGrowthGlobal0X128()`
$DIR/test/UniswapV3Pool.spec.ts:1868:13-1868:36: `.feeGrowthGlobal1X128()`
$DIR/test/UniswapV3Pool.spec.ts:1873:7-1873:43: `await pool.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1873:17-1873:43: `.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1874:46-1880:8: `.callStatic.collect(
        wallet.address,
        minTick,
        maxTick,
        MaxUint128,
        MaxUint128
      )`
$DIR/test/UniswapV3Pool.spec.ts:1886:7-1886:51: `await pool.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:1886:17-1886:51: `.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:1887:7-1887:54: `await mint(wallet.address, minTick, maxTick, 1)`
$DIR/test/UniswapV3Pool.spec.ts:1888:7-1888:64: `await flash(0, 0, wallet.address, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:1889:7-1889:46: `await flash(0, 0, wallet.address, 1, 1)`
$DIR/test/UniswapV3Pool.spec.ts:1891:73-1894:9: `.all([
        pool.feeGrowthGlobal0X128(),
        pool.feeGrowthGlobal1X128(),
      ])`
$DIR/test/UniswapV3Pool.spec.ts:1892:13-1892:36: `.feeGrowthGlobal0X128()`
$DIR/test/UniswapV3Pool.spec.ts:1893:13-1893:36: `.feeGrowthGlobal1X128()`
$DIR/test/UniswapV3Pool.spec.ts:1898:7-1898:43: `await pool.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1898:17-1898:43: `.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1899:46-1905:8: `.callStatic.collect(
        wallet.address,
        minTick,
        maxTick,
        MaxUint128,
        MaxUint128
      )`
$DIR/test/UniswapV3Pool.spec.ts:1912:7-1912:51: `await pool.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:1912:17-1912:51: `.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:1913:7-1913:54: `await mint(wallet.address, minTick, maxTick, 1)`
$DIR/test/UniswapV3Pool.spec.ts:1914:7-1914:64: `await flash(0, 0, wallet.address, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:1915:7-1915:43: `await pool.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1915:17-1915:43: `.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1916:7-1916:46: `await flash(0, 0, wallet.address, 1, 1)`
$DIR/test/UniswapV3Pool.spec.ts:1917:7-1917:43: `await pool.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1917:17-1917:43: `.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1919:46-1925:8: `.callStatic.collect(
        wallet.address,
        minTick,
        maxTick,
        MaxUint128,
        MaxUint128
      )`
$DIR/test/UniswapV3Pool.spec.ts:1932:7-1932:51: `await pool.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:1932:17-1932:51: `.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:1933:7-1933:54: `await mint(wallet.address, minTick, maxTick, 1)`
$DIR/test/UniswapV3Pool.spec.ts:1934:7-1934:53: `await mint(other.address, minTick, maxTick, 1)`
$DIR/test/UniswapV3Pool.spec.ts:1935:7-1935:55: `await flash(0, 0, wallet.address, MaxUint128, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1936:7-1936:55: `await flash(0, 0, wallet.address, MaxUint128, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1937:46-1937:69: `.feeGrowthGlobal0X128()`
$DIR/test/UniswapV3Pool.spec.ts:1939:7-1939:46: `await flash(0, 0, wallet.address, 2, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1940:7-1940:43: `await pool.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1940:17-1940:43: `.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1941:7-1941:58: `await pool.connect(other).burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1941:17-1941:32: `.connect(other)`
$DIR/test/UniswapV3Pool.spec.ts:1941:32-1941:58: `.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1942:35-1942:112: `.callStatic.collect(wallet.address, minTick, maxTick, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:1944:8-1946:86: `({ amount0 } = await pool
        .connect(other)
        .callStatic.collect(other.address, minTick, maxTick, MaxUint128, MaxUint128))`
$DIR/test/UniswapV3Pool.spec.ts:1944:33-1945:24: `
        .connect(other)`
$DIR/test/UniswapV3Pool.spec.ts:1945:24-1946:85: `
        .callStatic.collect(other.address, minTick, maxTick, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:1951:7-1951:51: `await pool.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:1951:17-1951:51: `.initialize(encodePriceSqrt(1, 1))`
$DIR/test/UniswapV3Pool.spec.ts:1952:7-1952:54: `await mint(wallet.address, minTick, maxTick, 1)`
$DIR/test/UniswapV3Pool.spec.ts:1953:7-1953:46: `await flash(0, 0, wallet.address, 1, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1954:7-1954:53: `await mint(other.address, minTick, maxTick, 1)`
$DIR/test/UniswapV3Pool.spec.ts:1955:7-1955:55: `await flash(0, 0, wallet.address, MaxUint128, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1956:7-1956:55: `await flash(0, 0, wallet.address, MaxUint128, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1957:46-1957:69: `.feeGrowthGlobal0X128()`
$DIR/test/UniswapV3Pool.spec.ts:1959:7-1959:46: `await flash(0, 0, wallet.address, 2, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1960:7-1960:43: `await pool.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1960:17-1960:43: `.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1961:7-1961:58: `await pool.connect(other).burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1961:17-1961:32: `.connect(other)`
$DIR/test/UniswapV3Pool.spec.ts:1961:32-1961:58: `.burn(minTick, maxTick, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1962:35-1962:112: `.callStatic.collect(wallet.address, minTick, maxTick, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:1964:8-1966:86: `({ amount0 } = await pool
        .connect(other)
        .callStatic.collect(other.address, minTick, maxTick, MaxUint128, MaxUint128))`
$DIR/test/UniswapV3Pool.spec.ts:1964:33-1965:24: `
        .connect(other)`
$DIR/test/UniswapV3Pool.spec.ts:1965:24-1966:85: `
        .callStatic.collect(other.address, minTick, maxTick, MaxUint128, MaxUint128)`
$DIR/test/UniswapV3Pool.spec.ts:1984:17-1984:93: `.swap(pool.address, wallet.address, true, MIN_SQRT_RATIO.add(1), 1000, 1, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1984:73-1984:80: `.add(1)`
$DIR/test/UniswapV3Pool.spec.ts:1989:17-1989:96: `.swap(pool.address, wallet.address, true, MIN_SQRT_RATIO.add(1), 1000, 0, 2000)`
$DIR/test/UniswapV3Pool.spec.ts:1989:73-1989:80: `.add(1)`
$DIR/test/UniswapV3Pool.spec.ts:1994:17-1994:96: `.swap(pool.address, wallet.address, true, MIN_SQRT_RATIO.add(1), 1000, 2000, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1994:73-1994:80: `.add(1)`
$DIR/test/UniswapV3Pool.spec.ts:1999:17-1999:94: `.swap(pool.address, wallet.address, true, MIN_SQRT_RATIO.add(1), -1000, 1, 0)`
$DIR/test/UniswapV3Pool.spec.ts:1999:73-1999:80: `.add(1)`
$DIR/test/UniswapV3Pool.spec.ts:2004:17-2004:97: `.swap(pool.address, wallet.address, true, MIN_SQRT_RATIO.add(1), -1000, 0, 2000)`
$DIR/test/UniswapV3Pool.spec.ts:2004:73-2004:80: `.add(1)`
$DIR/test/UniswapV3Pool.spec.ts:2009:17-2009:97: `.swap(pool.address, wallet.address, true, MIN_SQRT_RATIO.add(1), -1000, 2000, 0)`
$DIR/test/UniswapV3Pool.spec.ts:2009:73-2009:80: `.add(1)`
$DIR/test/UniswapV3Pool.spec.ts:2014:17-2014:94: `.swap(pool.address, wallet.address, false, MAX_SQRT_RATIO.sub(1), 1000, 0, 1)`
$DIR/test/UniswapV3Pool.spec.ts:2014:74-2014:81: `.sub(1)`
$DIR/test/UniswapV3Pool.spec.ts:2019:17-2019:97: `.swap(pool.address, wallet.address, false, MAX_SQRT_RATIO.sub(1), 1000, 2000, 0)`
$DIR/test/UniswapV3Pool.spec.ts:2019:74-2019:81: `.sub(1)`
$DIR/test/UniswapV3Pool.spec.ts:2024:17-2024:97: `.swap(pool.address, wallet.address, false, MAX_SQRT_RATIO.sub(1), 1000, 0, 2000)`
$DIR/test/UniswapV3Pool.spec.ts:2024:74-2024:81: `.sub(1)`
$DIR/test/UniswapV3Pool.spec.ts:2029:17-2029:95: `.swap(pool.address, wallet.address, false, MAX_SQRT_RATIO.sub(1), -1000, 0, 1)`
$DIR/test/UniswapV3Pool.spec.ts:2029:74-2029:81: `.sub(1)`
$DIR/test/UniswapV3Pool.spec.ts:2034:17-2034:98: `.swap(pool.address, wallet.address, false, MAX_SQRT_RATIO.sub(1), -1000, 2000, 0)`
$DIR/test/UniswapV3Pool.spec.ts:2034:74-2034:81: `.sub(1)`
$DIR/test/UniswapV3Pool.spec.ts:2039:17-2039:98: `.swap(pool.address, wallet.address, false, MAX_SQRT_RATIO.sub(1), -1000, 0, 2000)`
$DIR/test/UniswapV3Pool.spec.ts:2039:74-2039:81: `.sub(1)`
$DIR/test/UniswapV3Router.spec.ts:88:23-88:33: `.factory()`
$DIR/test/UniswapV3Router.spec.ts:89:23-89:32: `.token0()`
$DIR/test/UniswapV3Router.spec.ts:90:23-90:32: `.token1()`
$DIR/test/UniswapV3Router.spec.ts:91:23-91:33: `.factory()`
$DIR/test/UniswapV3Router.spec.ts:92:23-92:32: `.token0()`
$DIR/test/UniswapV3Router.spec.ts:93:23-93:32: `.token1()`
$DIR/test/UniswapV3Router.spec.ts:112:45-112:54: `.token0()`
