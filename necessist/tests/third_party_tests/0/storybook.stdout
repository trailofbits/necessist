101 candidates in 27 tests in 2 source files
$DIR/code/core/src/manager-api/tests/store.test.js: dry running
$DIR/code/core/src/manager-api/tests/store.test.js: mutilating
$DIR/code/core/src/manager-api/tests/store.test.js: `store2.session.get.mockReturnValueOnce({ foo: 'bar', combined: { a: 'b' } });` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `store2.local.get.mockReturnValueOnce({ foo: 'baz', another: 'value', combined: { c: 'd' } });` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `store.getState();` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `await store.setState({ foo: 'bar' });` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `await store.setState({ foo: 'bar' }, { persistence: 'session' });` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `await store.setState({ foo: 'bar' }, { persistence: 'permanent' });` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `store2.session.get.mockReturnValueOnce({
        foo: 'baz',
        another: 'value',
        combined: { a: 'b' },
      });` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `await store.setState({ foo: 'bar', combined: { c: 'd' } }, { persistence: 'session' });` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `cb = inputCb;` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `store.setState({ foo: 'bar' }).then(() => {
        done = true;
      });` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `done = true;` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `await flushPromises();` passed
$DIR/code/core/src/manager-api/tests/store.test.js: `cb();` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `await flushPromises();` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `x('OLD_STATE');` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `cb();` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `await store.setState(patch, { persistence: 'session' });` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.session.get.mockReturnValueOnce({ foo: 'bar', combined: { a: 'b' } })` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.local.get.mockReturnValueOnce({ foo: 'baz', another: 'value', combined: { c: 'd' } })` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.fn()` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.getState()` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.fn()` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.mockImplementation((x, cb) => cb())` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.fn()` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.setState({ foo: 'bar' })` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.fn()` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.mockImplementation((x, cb) => cb())` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.fn()` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.setState({ foo: 'bar' }, { persistence: 'session' })` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.fn()` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.mockImplementation((x, cb) => cb())` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.fn()` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.setState({ foo: 'bar' }, { persistence: 'permanent' })` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.fn()` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.mockImplementation((x, cb) => cb())` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.fn()` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.session.get.mockReturnValueOnce({
        foo: 'baz',
        another: 'value',
        combined: { a: 'b' },
      })` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.setState({ foo: 'bar', combined: { c: 'd' } }, { persistence: 'session' })` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.fn()` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.mockImplementation((x, inputCb) => {
        cb = inputCb;
      })` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.fn()` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.setState({ foo: 'bar' })` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.then(() => {
        done = true;
      })` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.fn()` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.mockImplementation((x, cb) => cb('RESULT'))` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.fn(() => 'RESULT')` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.setState({ foo: 'bar' })` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.fn()` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.mockImplementation((x, cb) => {
        x('OLD_STATE');
        cb();
      })` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.fn()` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.fn()` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.mockReturnValue({ foo: 'bar' })` failed
$DIR/code/core/src/manager-api/tests/store.test.js: `.setState(patch, { persistence: 'session' })` failed
$DIR/code/core/src/manager-api/tests/versions.test.js: dry running
$DIR/code/core/src/manager-api/tests/versions.test.js: mutilating
$DIR/code/core/src/manager-api/tests/versions.test.js: `store.setState(initialState);` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `store.setState.mockReset();` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `await init();` failed
$DIR/code/core/src/manager-api/tests/versions.test.js: `store.setState(initialState);` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `await init();` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `store.setState(initialState);` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `await init();` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `await init();` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `store.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '7.6.1' },
          latest: { version: '7.6.1' },
        },
      });` failed
$DIR/code/core/src/manager-api/tests/versions.test.js: `await init();` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `store.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '7.6.1' },
          latest: { version: '7.6.10' },
        },
      });` failed
$DIR/code/core/src/manager-api/tests/versions.test.js: `await init();` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `store.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '7.2.5' },
          latest: { version: '7.6.10' },
        },
      });` failed
$DIR/code/core/src/manager-api/tests/versions.test.js: `await init();` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `store.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '8.0.0-beta' },
          latest: { version: '7.6.10' },
        },
      });` failed
$DIR/code/core/src/manager-api/tests/versions.test.js: `store.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '5.2.1' },
          latest: { version: '5.2.1' },
        },
      });` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `await init();` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `global.STORYBOOK_RENDERER = 'vue';` failed
$DIR/code/core/src/manager-api/tests/versions.test.js: `store.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '5.2.1' },
          latest: { version: '5.2.1' },
        },
      });` failed
$DIR/code/core/src/manager-api/tests/versions.test.js: `await init();` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `store.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '5.2.1' },
          latest: { version: '5.2.2' },
        },
      });` failed
$DIR/code/core/src/manager-api/tests/versions.test.js: `await init();` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `await init();` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `store.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '5.2.1' },
          latest: { version: '5.3.1' },
        },
      });` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `await init();` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `store.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '5.2.1' },
          latest: { version: '6.2.1' },
        },
      });` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `await init();` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `store.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '5.2.1' },
          latest: { version: '6.2.1-prerelease.0' },
        },
      });` failed
$DIR/code/core/src/manager-api/tests/versions.test.js: `await init();` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `store.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '5.2.1-prerelease.0' },
          latest: { version: '6.2.1' },
        },
      });` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `await init();` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `store.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '5.2.1-prerelease.0' },
          latest: { version: '3.2.1' },
        },
      });` failed
$DIR/code/core/src/manager-api/tests/versions.test.js: `.setState(initialState)` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `.setState.mockReset()` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `.setState(initialState)` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `.setState(initialState)` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '7.6.1' },
          latest: { version: '7.6.1' },
        },
      })` failed
$DIR/code/core/src/manager-api/tests/versions.test.js: `.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '7.6.1' },
          latest: { version: '7.6.10' },
        },
      })` failed
$DIR/code/core/src/manager-api/tests/versions.test.js: `.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '7.2.5' },
          latest: { version: '7.6.10' },
        },
      })` failed
$DIR/code/core/src/manager-api/tests/versions.test.js: `.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '8.0.0-beta' },
          latest: { version: '7.6.10' },
        },
      })` failed
$DIR/code/core/src/manager-api/tests/versions.test.js: `.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '5.2.1' },
          latest: { version: '5.2.1' },
        },
      })` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '5.2.1' },
          latest: { version: '5.2.1' },
        },
      })` failed
$DIR/code/core/src/manager-api/tests/versions.test.js: `.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '5.2.1' },
          latest: { version: '5.2.2' },
        },
      })` failed
$DIR/code/core/src/manager-api/tests/versions.test.js: `.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '5.2.1' },
          latest: { version: '5.3.1' },
        },
      })` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '5.2.1' },
          latest: { version: '6.2.1' },
        },
      })` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '5.2.1' },
          latest: { version: '6.2.1-prerelease.0' },
        },
      })` failed
$DIR/code/core/src/manager-api/tests/versions.test.js: `.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '5.2.1-prerelease.0' },
          latest: { version: '6.2.1' },
        },
      })` passed
$DIR/code/core/src/manager-api/tests/versions.test.js: `.setState({
        ...initialState,
        versions: {
          ...initialState.versions,
          current: { version: '5.2.1-prerelease.0' },
          latest: { version: '3.2.1' },
        },
      })` failed
