74 candidates in 1 test file
$DIR/src/net/url/url_test.go: dry running
$DIR/src/net/url/url_test.go: mutilating
$DIR/src/net/url/url_test.go: `.DeepEqual(u, tt.out)` nonbuildable
$DIR/src/net/url/url_test.go: `expected = tt.roundtrip` failed
$DIR/src/net/url/url_test.go: `.String()` nonbuildable
$DIR/src/net/url/url_test.go: `.url.String()` nonbuildable
$DIR/src/net/url/url_test.go: `t.Run(tt.name, func(t *testing.T) {
			if g, w := tt.url.Redacted(), tt.want; g != w {
				t.Fatalf("got: %q\nwant: %q", g, w)
			}
		})` nonbuildable
$DIR/src/net/url/url_test.go: `.Run(tt.name, func(t *testing.T) {
			if g, w := tt.url.Redacted(), tt.want; g != w {
				t.Fatalf("got: %q\nwant: %q", g, w)
			}
		})` nonbuildable
$DIR/src/net/url/url_test.go: `.url.Redacted()` nonbuildable
$DIR/src/net/url/url_test.go: `.Contains(tt.in, "+")` nonbuildable
$DIR/src/net/url/url_test.go: `in = strings.ReplaceAll(tt.in, "+", "%20")` failed
$DIR/src/net/url/url_test.go: `.ReplaceAll(tt.in, "+", "%20")` nonbuildable
$DIR/src/net/url/url_test.go: `.ReplaceAll(tt.in, "+", "XXX")` nonbuildable
$DIR/src/net/url/url_test.go: `in = tt.in` failed
$DIR/src/net/url/url_test.go: `out = strings.ReplaceAll(s, "XXX", "+")` nonbuildable
$DIR/src/net/url/url_test.go: `.ReplaceAll(s, "XXX", "+")` nonbuildable
$DIR/src/net/url/url_test.go: `actual, err = PathUnescape(in)` failed
$DIR/src/net/url/url_test.go: `.m.Encode()` nonbuildable
$DIR/src/net/url/url_test.go: `.ResolveReference(rel)` nonbuildable
$DIR/src/net/url/url_test.go: `.String()` nonbuildable
$DIR/src/net/url/url_test.go: `.Parse(test.rel)` nonbuildable
$DIR/src/net/url/url_test.go: `.String()` nonbuildable
$DIR/src/net/url/url_test.go: `url = base.ResolveReference(opaque)` failed
$DIR/src/net/url/url_test.go: `.ResolveReference(opaque)` failed
$DIR/src/net/url/url_test.go: `url, err = base.Parse("scheme:opaque")` passed
$DIR/src/net/url/url_test.go: `.Parse("scheme:opaque")` nonbuildable
$DIR/src/net/url/url_test.go: `.Query()` nonbuildable
$DIR/src/net/url/url_test.go: `.Get("foo")` nonbuildable
$DIR/src/net/url/url_test.go: `.Get("Foo")` nonbuildable
$DIR/src/net/url/url_test.go: `.Get("bar")` nonbuildable
$DIR/src/net/url/url_test.go: `.Get("baz")` nonbuildable
$DIR/src/net/url/url_test.go: `.Has("foo")` nonbuildable
$DIR/src/net/url/url_test.go: `.Has("bar")` nonbuildable
$DIR/src/net/url/url_test.go: `.Has("baz")` nonbuildable
$DIR/src/net/url/url_test.go: `.Has("noexist")` nonbuildable
$DIR/src/net/url/url_test.go: `v.Del("bar")` failed
$DIR/src/net/url/url_test.go: `.Del("bar")` nonbuildable
$DIR/src/net/url/url_test.go: `.Get("bar")` nonbuildable
$DIR/src/net/url/url_test.go: `t.Run(test.query, func(t *testing.T) {
			form, err := ParseQuery(test.query)
			if test.ok != (err == nil) {
				want := "<error>"
				if test.ok {
					want = "<nil>"
				}
				t.Errorf("Unexpected error: %v, want %v", err, want)
			}
			if len(form) != len(test.out) {
				t.Errorf("len(form) = %d, want %d", len(form), len(test.out))
			}
			for k, evs := range test.out {
				vs, ok := form[k]
				if !ok {
					t.Errorf("Missing key %q", k)
					continue
				}
				if len(vs) != len(evs) {
					t.Errorf("len(form[%q]) = %d, want %d", k, len(vs), len(evs))
					continue
				}
				for j, ev := range evs {
					if v := vs[j]; v != ev {
						t.Errorf("form[%q][%d] = %q, want %q", k, j, v, ev)
					}
				}
			}
		})` nonbuildable
$DIR/src/net/url/url_test.go: `.Run(test.query, func(t *testing.T) {
			form, err := ParseQuery(test.query)
			if test.ok != (err == nil) {
				want := "<error>"
				if test.ok {
					want = "<nil>"
				}
				t.Errorf("Unexpected error: %v, want %v", err, want)
			}
			if len(form) != len(test.out) {
				t.Errorf("len(form) = %d, want %d", len(form), len(test.out))
			}
			for k, evs := range test.out {
				vs, ok := form[k]
				if !ok {
					t.Errorf("Missing key %q", k)
					continue
				}
				if len(vs) != len(evs) {
					t.Errorf("len(form[%q]) = %d, want %d", k, len(vs), len(evs))
					continue
				}
				for j, ev := range evs {
					if v := vs[j]; v != ev {
						t.Errorf("form[%q][%d] = %q, want %q", k, j, v, ev)
					}
				}
			}
		})` nonbuildable
$DIR/src/net/url/url_test.go: `want = "<nil>"` passed
$DIR/src/net/url/url_test.go: `.url.RequestURI()` nonbuildable
$DIR/src/net/url/url_test.go: `const url = "%gh&%ij"` nonbuildable
$DIR/src/net/url/url_test.go: `.Sprint(err)` nonbuildable
$DIR/src/net/url/url_test.go: `.Contains(errStr, "%gh")` nonbuildable
$DIR/src/net/url/url_test.go: `.RequestURI()` nonbuildable
$DIR/src/net/url/url_test.go: `.Timeout()` nonbuildable
$DIR/src/net/url/url_test.go: `.Temporary()` nonbuildable
$DIR/src/net/url/url_test.go: `.Hostname()` nonbuildable
$DIR/src/net/url/url_test.go: `.Port()` nonbuildable
$DIR/src/net/url/url_test.go: `.Marshal(u)` nonbuildable
$DIR/src/net/url/url_test.go: `err = json.Unmarshal(js, u1)` nonbuildable
$DIR/src/net/url/url_test.go: `.Unmarshal(js, u1)` nonbuildable
$DIR/src/net/url/url_test.go: `.String()` nonbuildable
$DIR/src/net/url/url_test.go: `.String()` nonbuildable
$DIR/src/net/url/url_test.go: `err = gob.NewEncoder(&w).Encode(u)` failed
$DIR/src/net/url/url_test.go: `.NewEncoder(&w)` nonbuildable
$DIR/src/net/url/url_test.go: `.Encode(u)` nonbuildable
$DIR/src/net/url/url_test.go: `err = gob.NewDecoder(&w).Decode(u1)` failed
$DIR/src/net/url/url_test.go: `.NewDecoder(&w)` nonbuildable
$DIR/src/net/url/url_test.go: `.Decode(u1)` nonbuildable
$DIR/src/net/url/url_test.go: `.String()` nonbuildable
$DIR/src/net/url/url_test.go: `.String()` nonbuildable
$DIR/src/net/url/url_test.go: `.User.Username()` nonbuildable
$DIR/src/net/url/url_test.go: `.User.Password()` nonbuildable
$DIR/src/net/url/url_test.go: `.User.String()` nonbuildable
$DIR/src/net/url/url_test.go: `.Sprint(err)` nonbuildable
$DIR/src/net/url/url_test.go: `.Contains(got, wantsub)` nonbuildable
$DIR/src/net/url/url_test.go: `const wantSub = "net/url: invalid control character in URL"` nonbuildable
$DIR/src/net/url/url_test.go: `.Sprint(err)` nonbuildable
$DIR/src/net/url/url_test.go: `.Contains(got, wantSub)` nonbuildable
$DIR/src/net/url/url_test.go: `wantErr = "non-nil error"` passed
$DIR/src/net/url/url_test.go: `u = u.JoinPath(tt.elem...)` failed
$DIR/src/net/url/url_test.go: `.JoinPath(tt.elem...)` failed
$DIR/src/net/url/url_test.go: `out = u.String()` failed
$DIR/src/net/url/url_test.go: `.String()` nonbuildable
