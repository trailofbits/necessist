$DIR/test/DefaultOperatorFilterer.t.sol:40:9-40:40: `vm.startPrank(filteredAddress);`
$DIR/test/DefaultOperatorFilterer.t.sol:40:11-40:39: `.startPrank(filteredAddress)`
$DIR/test/DefaultOperatorFilterer.t.sol:43:9-43:24: `vm.stopPrank();`
$DIR/test/DefaultOperatorFilterer.t.sol:43:11-43:23: `.stopPrank()`
$DIR/test/DefaultOperatorFilterer.t.sol:44:9-44:48: `vm.startPrank(filteredCodeHashAddress);`
$DIR/test/DefaultOperatorFilterer.t.sol:44:11-44:47: `.startPrank(filteredCodeHashAddress)`
$DIR/test/OperatorFilterRegistry.t.sol:39:9-39:46: `vm.startPrank(makeAddr("not owner"));`
$DIR/test/OperatorFilterRegistry.t.sol:39:11-39:45: `.startPrank(makeAddr("not owner"))`
$DIR/test/OperatorFilterRegistry.t.sol:51:9-51:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:51:17-51:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:54:26-54:60: `.subscriptionOf(address(filterer))`
$DIR/test/OperatorFilterRegistry.t.sol:58:9-58:46: `vm.startPrank(makeAddr("not owner"));`
$DIR/test/OperatorFilterRegistry.t.sol:58:11-58:45: `.startPrank(makeAddr("not owner"))`
$DIR/test/OperatorFilterRegistry.t.sol:64:9-64:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:64:17-64:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:71:9-71:32: `vm.prank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:71:11-71:31: `.prank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:77:9-77:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:77:17-77:67: `.registerAndSubscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:80:26-80:56: `.subscriberAt(subscription, 0)`
$DIR/test/OperatorFilterRegistry.t.sol:85:9-85:46: `vm.startPrank(makeAddr("not owner"));`
$DIR/test/OperatorFilterRegistry.t.sol:85:11-85:45: `.startPrank(makeAddr("not owner"))`
$DIR/test/OperatorFilterRegistry.t.sol:91:9-91:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:91:17-91:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:109:9-109:37: `vm.prank(superSubscription);`
$DIR/test/OperatorFilterRegistry.t.sol:109:11-109:36: `.prank(superSubscription)`
$DIR/test/OperatorFilterRegistry.t.sol:111:9-111:32: `vm.prank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:111:11-111:31: `.prank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:118:9-118:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:118:17-118:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:119:9-119:76: `registry.updateOperator(address(this), makeAddr("operator"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:119:17-119:75: `.updateOperator(address(this), makeAddr("operator"), true)`
$DIR/test/OperatorFilterRegistry.t.sol:120:9-120:83: `registry.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:120:17-120:82: `.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true)`
$DIR/test/OperatorFilterRegistry.t.sol:127:9-127:66: `registry.copyEntriesOf(address(filterer), address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:127:17-127:65: `.copyEntriesOf(address(filterer), address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:132:26-132:67: `.filteredCodeHashAt(address(filterer), 0)`
$DIR/test/OperatorFilterRegistry.t.sol:136:9-136:46: `vm.startPrank(makeAddr("not owner"));`
$DIR/test/OperatorFilterRegistry.t.sol:136:11-136:45: `.startPrank(makeAddr("not owner"))`
$DIR/test/OperatorFilterRegistry.t.sol:142:9-142:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:142:17-142:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:148:9-148:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:148:17-148:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:159:9-159:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:159:17-159:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:162:9-162:76: `registry.updateOperator(address(this), makeAddr("operator"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:162:17-162:75: `.updateOperator(address(this), makeAddr("operator"), true)`
$DIR/test/OperatorFilterRegistry.t.sol:164:26-164:63: `.filteredOperatorAt(address(this), 0)`
$DIR/test/OperatorFilterRegistry.t.sol:168:9-168:46: `vm.startPrank(makeAddr("not owner"));`
$DIR/test/OperatorFilterRegistry.t.sol:168:11-168:45: `.startPrank(makeAddr("not owner"))`
$DIR/test/OperatorFilterRegistry.t.sol:180:9-180:32: `vm.prank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:180:11-180:31: `.prank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:182:9-182:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:182:17-182:67: `.registerAndSubscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:188:9-188:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:188:17-188:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:189:9-189:76: `registry.updateOperator(address(this), makeAddr("operator"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:189:17-189:75: `.updateOperator(address(this), makeAddr("operator"), true)`
$DIR/test/OperatorFilterRegistry.t.sol:192:9-192:77: `registry.updateOperator(address(this), makeAddr("operator"), false);`
$DIR/test/OperatorFilterRegistry.t.sol:192:17-192:76: `.updateOperator(address(this), makeAddr("operator"), false)`
$DIR/test/OperatorFilterRegistry.t.sol:199:9-199:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:199:17-199:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:205:9-205:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:205:17-205:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:206:9-206:76: `registry.updateOperator(address(this), makeAddr("operator"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:206:17-206:75: `.updateOperator(address(this), makeAddr("operator"), true)`
$DIR/test/OperatorFilterRegistry.t.sol:212:9-212:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:212:17-212:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:215:9-215:83: `registry.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:215:17-215:82: `.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true)`
$DIR/test/OperatorFilterRegistry.t.sol:217:26-217:63: `.filteredCodeHashAt(address(this), 0)`
$DIR/test/OperatorFilterRegistry.t.sol:221:9-221:46: `vm.startPrank(makeAddr("not owner"));`
$DIR/test/OperatorFilterRegistry.t.sol:221:11-221:45: `.startPrank(makeAddr("not owner"))`
$DIR/test/OperatorFilterRegistry.t.sol:227:9-227:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:227:17-227:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:239:9-239:32: `vm.prank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:239:11-239:31: `.prank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:241:9-241:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:241:17-241:67: `.registerAndSubscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:247:9-247:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:247:17-247:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:248:9-248:83: `registry.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:248:17-248:82: `.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true)`
$DIR/test/OperatorFilterRegistry.t.sol:251:9-251:84: `registry.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), false);`
$DIR/test/OperatorFilterRegistry.t.sol:251:17-251:83: `.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), false)`
$DIR/test/OperatorFilterRegistry.t.sol:258:9-258:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:258:17-258:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:264:9-264:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:264:17-264:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:265:9-265:83: `registry.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:265:17-265:82: `.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true)`
$DIR/test/OperatorFilterRegistry.t.sol:271:9-271:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:271:17-271:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:274:9-274:45: `operator[0] = makeAddr("operator1");`
$DIR/test/OperatorFilterRegistry.t.sol:275:9-275:45: `operator[1] = makeAddr("operator2");`
$DIR/test/OperatorFilterRegistry.t.sol:278:9-278:65: `registry.updateOperators(address(this), operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:278:17-278:64: `.updateOperators(address(this), operator, true)`
$DIR/test/OperatorFilterRegistry.t.sol:282:26-282:63: `.filteredOperatorAt(address(this), 1)`
$DIR/test/OperatorFilterRegistry.t.sol:286:9-286:46: `vm.startPrank(makeAddr("not owner"));`
$DIR/test/OperatorFilterRegistry.t.sol:286:11-286:45: `.startPrank(makeAddr("not owner"))`
$DIR/test/OperatorFilterRegistry.t.sol:289:9-289:45: `operator[0] = makeAddr("operator1");`
$DIR/test/OperatorFilterRegistry.t.sol:295:9-295:45: `operator[0] = makeAddr("operator1");`
$DIR/test/OperatorFilterRegistry.t.sol:296:9-296:45: `operator[1] = makeAddr("operator2");`
$DIR/test/OperatorFilterRegistry.t.sol:303:9-303:32: `vm.prank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:303:11-303:31: `.prank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:305:9-305:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:305:17-305:67: `.registerAndSubscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:307:9-307:45: `operator[0] = makeAddr("operator1");`
$DIR/test/OperatorFilterRegistry.t.sol:308:9-308:45: `operator[1] = makeAddr("operator2");`
$DIR/test/OperatorFilterRegistry.t.sol:314:9-314:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:314:17-314:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:315:9-315:77: `registry.updateOperator(address(this), makeAddr("operator1"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:315:17-315:76: `.updateOperator(address(this), makeAddr("operator1"), true)`
$DIR/test/OperatorFilterRegistry.t.sol:316:9-316:77: `registry.updateOperator(address(this), makeAddr("operator2"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:316:17-316:76: `.updateOperator(address(this), makeAddr("operator2"), true)`
$DIR/test/OperatorFilterRegistry.t.sol:319:9-319:45: `operator[0] = makeAddr("operator1");`
$DIR/test/OperatorFilterRegistry.t.sol:320:9-320:45: `operator[1] = makeAddr("operator2");`
$DIR/test/OperatorFilterRegistry.t.sol:323:9-323:66: `registry.updateOperators(address(this), operator, false);`
$DIR/test/OperatorFilterRegistry.t.sol:323:17-323:65: `.updateOperators(address(this), operator, false)`
$DIR/test/OperatorFilterRegistry.t.sol:331:9-331:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:331:17-331:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:333:9-333:45: `operator[0] = makeAddr("operator1");`
$DIR/test/OperatorFilterRegistry.t.sol:334:9-334:45: `operator[1] = makeAddr("operator2");`
$DIR/test/OperatorFilterRegistry.t.sol:340:9-340:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:340:17-340:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:341:9-341:77: `registry.updateOperator(address(this), makeAddr("operator1"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:341:17-341:76: `.updateOperator(address(this), makeAddr("operator1"), true)`
$DIR/test/OperatorFilterRegistry.t.sol:342:9-342:77: `registry.updateOperator(address(this), makeAddr("operator2"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:342:17-342:76: `.updateOperator(address(this), makeAddr("operator2"), true)`
$DIR/test/OperatorFilterRegistry.t.sol:344:9-344:45: `operator[0] = makeAddr("operator1");`
$DIR/test/OperatorFilterRegistry.t.sol:345:9-345:45: `operator[1] = makeAddr("operator2");`
$DIR/test/OperatorFilterRegistry.t.sol:351:9-351:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:351:17-351:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:353:9-353:51: `codeHash[0] = bytes32(bytes4(0xdeadbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:354:9-354:51: `codeHash[1] = bytes32(bytes4(0xdeafbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:361:9-361:46: `vm.startPrank(makeAddr("not owner"));`
$DIR/test/OperatorFilterRegistry.t.sol:361:11-361:45: `.startPrank(makeAddr("not owner"))`
$DIR/test/OperatorFilterRegistry.t.sol:364:9-364:51: `codeHash[0] = bytes32(bytes4(0xdeadbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:370:9-370:51: `codeHash[0] = bytes32(bytes4(0xdeadbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:371:9-371:51: `codeHash[1] = bytes32(bytes4(0xdeafbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:378:9-378:32: `vm.prank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:378:11-378:31: `.prank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:380:9-380:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:380:17-380:67: `.registerAndSubscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:382:9-382:51: `codeHash[0] = bytes32(bytes4(0xdeadbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:383:9-383:51: `codeHash[1] = bytes32(bytes4(0xdeafbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:389:9-389:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:389:17-389:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:390:9-390:83: `registry.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:390:17-390:82: `.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true)`
$DIR/test/OperatorFilterRegistry.t.sol:391:9-391:83: `registry.updateCodeHash(address(this), bytes32(bytes4(0xdeafbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:391:17-391:82: `.updateCodeHash(address(this), bytes32(bytes4(0xdeafbeef)), true)`
$DIR/test/OperatorFilterRegistry.t.sol:394:9-394:51: `codeHash[0] = bytes32(bytes4(0xdeadbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:395:9-395:51: `codeHash[1] = bytes32(bytes4(0xdeafbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:398:9-398:67: `registry.updateCodeHashes(address(this), codeHash, false);`
$DIR/test/OperatorFilterRegistry.t.sol:398:17-398:66: `.updateCodeHashes(address(this), codeHash, false)`
$DIR/test/OperatorFilterRegistry.t.sol:406:9-406:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:406:17-406:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:408:9-408:51: `codeHash[0] = bytes32(bytes4(0xdeadbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:409:9-409:51: `codeHash[1] = bytes32(bytes4(0xdeafbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:415:9-415:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:415:17-415:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:417:9-417:51: `codeHash[0] = bytes32(bytes4(0xdeadbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:418:9-418:37: `codeHash[1] = keccak256("");`
$DIR/test/OperatorFilterRegistry.t.sol:424:9-424:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:424:17-424:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:425:9-425:83: `registry.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:425:17-425:82: `.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true)`
$DIR/test/OperatorFilterRegistry.t.sol:426:9-426:83: `registry.updateCodeHash(address(this), bytes32(bytes4(0xdeafbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:426:17-426:82: `.updateCodeHash(address(this), bytes32(bytes4(0xdeafbeef)), true)`
$DIR/test/OperatorFilterRegistry.t.sol:428:9-428:51: `codeHash[0] = bytes32(bytes4(0xdeadbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:429:9-429:51: `codeHash[1] = bytes32(bytes4(0xdeafbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:436:9-436:32: `vm.prank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:436:11-436:31: `.prank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:438:9-438:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:438:17-438:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:441:9-441:57: `registry.subscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:441:17-441:56: `.subscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:446:26-446:56: `.subscriberAt(subscription, 0)`
$DIR/test/OperatorFilterRegistry.t.sol:451:9-451:32: `vm.prank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:451:11-451:31: `.prank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:453:9-453:46: `vm.startPrank(makeAddr("not owner"));`
$DIR/test/OperatorFilterRegistry.t.sol:453:11-453:45: `.startPrank(makeAddr("not owner"))`
$DIR/test/OperatorFilterRegistry.t.sol:459:9-459:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:459:17-459:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:465:9-465:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:465:17-465:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:472:9-472:32: `vm.prank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:472:11-472:31: `.prank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:480:9-480:32: `vm.prank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:480:11-480:31: `.prank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:482:9-482:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:482:17-482:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:483:9-483:57: `registry.subscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:483:17-483:56: `.subscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:489:9-489:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:489:17-489:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:497:9-497:35: `vm.prank(oldSubscription);`
$DIR/test/OperatorFilterRegistry.t.sol:497:11-497:34: `.prank(oldSubscription)`
$DIR/test/OperatorFilterRegistry.t.sol:499:9-499:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:499:17-499:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:500:9-500:60: `registry.subscribe(address(this), oldSubscription);`
$DIR/test/OperatorFilterRegistry.t.sol:500:17-500:59: `.subscribe(address(this), oldSubscription)`
$DIR/test/OperatorFilterRegistry.t.sol:503:9-503:35: `vm.prank(newSubscription);`
$DIR/test/OperatorFilterRegistry.t.sol:503:11-503:34: `.prank(newSubscription)`
$DIR/test/OperatorFilterRegistry.t.sol:509:9-509:60: `registry.subscribe(address(this), newSubscription);`
$DIR/test/OperatorFilterRegistry.t.sol:509:17-509:59: `.subscribe(address(this), newSubscription)`
$DIR/test/OperatorFilterRegistry.t.sol:515:26-515:59: `.subscriberAt(newSubscription, 0)`
$DIR/test/OperatorFilterRegistry.t.sol:521:9-521:37: `vm.prank(superSubscription);`
$DIR/test/OperatorFilterRegistry.t.sol:521:11-521:36: `.prank(superSubscription)`
$DIR/test/OperatorFilterRegistry.t.sol:523:9-523:32: `vm.prank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:523:11-523:31: `.prank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:525:9-525:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:525:17-525:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:532:9-532:32: `vm.prank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:532:11-532:31: `.prank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:534:9-534:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:534:17-534:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:535:9-535:57: `registry.subscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:535:17-535:56: `.subscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:539:9-539:52: `registry.unsubscribe(address(this), false);`
$DIR/test/OperatorFilterRegistry.t.sol:539:17-539:51: `.unsubscribe(address(this), false)`
$DIR/test/OperatorFilterRegistry.t.sol:543:26-543:56: `.subscriptionOf(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:553:9-553:32: `vm.prank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:553:11-553:31: `.prank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:555:9-555:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:555:17-555:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:556:9-556:57: `registry.subscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:556:17-556:56: `.subscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:558:9-558:46: `vm.startPrank(makeAddr("not owner"));`
$DIR/test/OperatorFilterRegistry.t.sol:558:11-558:45: `.startPrank(makeAddr("not owner"))`
$DIR/test/OperatorFilterRegistry.t.sol:567:9-567:37: `vm.startPrank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:567:11-567:36: `.startPrank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:568:9-568:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:568:17-568:40: `.register(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:569:9-569:63: `registry.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:569:17-569:62: `.updateOperator(subscription, operator, true)`
$DIR/test/OperatorFilterRegistry.t.sol:570:9-570:63: `registry.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:570:17-570:62: `.updateCodeHash(subscription, codeHash, true)`
$DIR/test/OperatorFilterRegistry.t.sol:571:9-571:24: `vm.stopPrank();`
$DIR/test/OperatorFilterRegistry.t.sol:571:11-571:23: `.stopPrank()`
$DIR/test/OperatorFilterRegistry.t.sol:572:9-572:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:572:17-572:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:573:9-573:57: `registry.subscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:573:17-573:56: `.subscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:581:9-581:51: `registry.unsubscribe(address(this), true);`
$DIR/test/OperatorFilterRegistry.t.sol:581:17-581:50: `.unsubscribe(address(this), true)`
$DIR/test/OperatorFilterRegistry.t.sol:583:26-583:56: `.subscriptionOf(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:592:9-592:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:592:17-592:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:603:9-603:37: `vm.startPrank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:603:11-603:36: `.startPrank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:604:9-604:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:604:17-604:40: `.register(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:605:9-605:63: `registry.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:605:17-605:62: `.updateOperator(subscription, operator, true)`
$DIR/test/OperatorFilterRegistry.t.sol:606:9-606:72: `registry.updateOperator(subscription, duplicateOperator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:606:17-606:71: `.updateOperator(subscription, duplicateOperator, true)`
$DIR/test/OperatorFilterRegistry.t.sol:607:9-607:63: `registry.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:607:17-607:62: `.updateCodeHash(subscription, codeHash, true)`
$DIR/test/OperatorFilterRegistry.t.sol:608:9-608:72: `registry.updateCodeHash(subscription, duplicateCodeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:608:17-608:71: `.updateCodeHash(subscription, duplicateCodeHash, true)`
$DIR/test/OperatorFilterRegistry.t.sol:609:9-609:24: `vm.stopPrank();`
$DIR/test/OperatorFilterRegistry.t.sol:609:11-609:23: `.stopPrank()`
$DIR/test/OperatorFilterRegistry.t.sol:612:9-612:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:612:17-612:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:613:9-613:73: `registry.updateOperator(address(this), duplicateOperator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:613:17-613:72: `.updateOperator(address(this), duplicateOperator, true)`
$DIR/test/OperatorFilterRegistry.t.sol:614:9-614:73: `registry.updateCodeHash(address(this), duplicateCodeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:614:17-614:72: `.updateCodeHash(address(this), duplicateCodeHash, true)`
$DIR/test/OperatorFilterRegistry.t.sol:620:9-620:61: `registry.copyEntriesOf(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:620:17-620:60: `.copyEntriesOf(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:632:26-632:63: `.filteredCodeHashAt(address(this), 1)`
$DIR/test/OperatorFilterRegistry.t.sol:636:9-636:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:636:17-636:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:643:9-643:37: `vm.startPrank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:643:11-643:36: `.startPrank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:644:9-644:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:644:17-644:40: `.register(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:645:9-645:24: `vm.stopPrank();`
$DIR/test/OperatorFilterRegistry.t.sol:645:11-645:23: `.stopPrank()`
$DIR/test/OperatorFilterRegistry.t.sol:646:9-646:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:646:17-646:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:648:9-648:46: `vm.startPrank(makeAddr("not owner"));`
$DIR/test/OperatorFilterRegistry.t.sol:648:11-648:45: `.startPrank(makeAddr("not owner"))`
$DIR/test/OperatorFilterRegistry.t.sol:663:9-663:37: `vm.startPrank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:663:11-663:36: `.startPrank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:664:9-664:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:664:17-664:40: `.register(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:665:9-665:63: `registry.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:665:17-665:62: `.updateOperator(subscription, operator, true)`
$DIR/test/OperatorFilterRegistry.t.sol:666:9-666:63: `registry.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:666:17-666:62: `.updateCodeHash(subscription, codeHash, true)`
$DIR/test/OperatorFilterRegistry.t.sol:667:9-667:24: `vm.stopPrank();`
$DIR/test/OperatorFilterRegistry.t.sol:667:11-667:23: `.stopPrank()`
$DIR/test/OperatorFilterRegistry.t.sol:668:9-668:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:668:17-668:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:669:9-669:57: `registry.subscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:669:17-669:56: `.subscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:676:9-676:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:676:17-676:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:686:9-686:32: `vm.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:686:11-686:31: `.etch(toCheck, code)`
$DIR/test/OperatorFilterRegistry.t.sol:687:26-687:46: `.codeHashOf(toCheck)`
$DIR/test/OperatorFilterRegistry.t.sol:694:9-694:32: `vm.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:694:11-694:31: `.etch(toCheck, code)`
$DIR/test/OperatorFilterRegistry.t.sol:695:9-695:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:695:17-695:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:696:9-696:64: `registry.updateCodeHash(address(this), codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:696:17-696:63: `.updateCodeHash(address(this), codeHash, true)`
$DIR/test/OperatorFilterRegistry.t.sol:698:29-698:91: `.isCodeHashOfFiltered(address(this), makeAddr("not filtered"))`
$DIR/test/OperatorFilterRegistry.t.sol:705:9-705:32: `vm.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:705:11-705:31: `.etch(toCheck, code)`
$DIR/test/OperatorFilterRegistry.t.sol:707:9-707:37: `vm.startPrank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:707:11-707:36: `.startPrank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:708:9-708:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:708:17-708:40: `.register(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:709:9-709:63: `registry.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:709:17-709:62: `.updateCodeHash(subscription, codeHash, true)`
$DIR/test/OperatorFilterRegistry.t.sol:710:9-710:24: `vm.stopPrank();`
$DIR/test/OperatorFilterRegistry.t.sol:710:11-710:23: `.stopPrank()`
$DIR/test/OperatorFilterRegistry.t.sol:711:9-711:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:711:17-711:67: `.registerAndSubscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:713:29-713:91: `.isCodeHashOfFiltered(address(this), makeAddr("not filtered"))`
$DIR/test/OperatorFilterRegistry.t.sol:720:9-720:32: `vm.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:720:11-720:31: `.etch(toCheck, code)`
$DIR/test/OperatorFilterRegistry.t.sol:722:9-722:37: `vm.startPrank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:722:11-722:36: `.startPrank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:723:9-723:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:723:17-723:40: `.register(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:724:9-724:63: `registry.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:724:17-724:62: `.updateCodeHash(subscription, codeHash, true)`
$DIR/test/OperatorFilterRegistry.t.sol:725:9-725:24: `vm.stopPrank();`
$DIR/test/OperatorFilterRegistry.t.sol:725:11-725:23: `.stopPrank()`
$DIR/test/OperatorFilterRegistry.t.sol:726:9-726:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:726:17-726:67: `.registerAndSubscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:728:29-728:92: `.isCodeHashFiltered(address(this), bytes32(bytes4(0xdeadbeef)))`
$DIR/test/OperatorFilterRegistry.t.sol:734:9-734:37: `vm.startPrank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:734:11-734:36: `.startPrank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:735:9-735:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:735:17-735:40: `.register(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:736:9-736:63: `registry.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:736:17-736:62: `.updateOperator(subscription, operator, true)`
$DIR/test/OperatorFilterRegistry.t.sol:737:9-737:24: `vm.stopPrank();`
$DIR/test/OperatorFilterRegistry.t.sol:737:11-737:23: `.stopPrank()`
$DIR/test/OperatorFilterRegistry.t.sol:738:9-738:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:738:17-738:67: `.registerAndSubscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:740:29-740:89: `.isOperatorFiltered(address(this), makeAddr("not filtered"))`
$DIR/test/OperatorFilterRegistry.t.sol:746:9-746:37: `vm.startPrank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:746:11-746:36: `.startPrank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:747:9-747:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:747:17-747:40: `.register(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:748:9-748:63: `registry.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:748:17-748:62: `.updateOperator(subscription, operator, true)`
$DIR/test/OperatorFilterRegistry.t.sol:749:9-749:24: `vm.stopPrank();`
$DIR/test/OperatorFilterRegistry.t.sol:749:11-749:23: `.stopPrank()`
$DIR/test/OperatorFilterRegistry.t.sol:750:9-750:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:750:17-750:67: `.registerAndSubscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:753:26-753:63: `.filteredOperatorAt(address(this), 0)`
$DIR/test/OperatorFilterRegistry.t.sol:760:9-760:32: `vm.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:760:11-760:31: `.etch(toCheck, code)`
$DIR/test/OperatorFilterRegistry.t.sol:762:9-762:37: `vm.startPrank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:762:11-762:36: `.startPrank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:763:9-763:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:763:17-763:40: `.register(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:764:9-764:63: `registry.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:764:17-764:62: `.updateCodeHash(subscription, codeHash, true)`
$DIR/test/OperatorFilterRegistry.t.sol:765:9-765:24: `vm.stopPrank();`
$DIR/test/OperatorFilterRegistry.t.sol:765:11-765:23: `.stopPrank()`
$DIR/test/OperatorFilterRegistry.t.sol:766:9-766:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:766:17-766:67: `.registerAndSubscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:769:26-769:63: `.filteredCodeHashAt(address(this), 0)`
$DIR/test/OperatorFilterRegistry.t.sol:775:9-775:37: `vm.startPrank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:775:11-775:36: `.startPrank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:776:9-776:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:776:17-776:40: `.register(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:777:9-777:63: `registry.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:777:17-777:62: `.updateOperator(subscription, operator, true)`
$DIR/test/OperatorFilterRegistry.t.sol:778:9-778:24: `vm.stopPrank();`
$DIR/test/OperatorFilterRegistry.t.sol:778:11-778:23: `.stopPrank()`
$DIR/test/OperatorFilterRegistry.t.sol:779:9-779:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:779:17-779:67: `.registerAndSubscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:780:26-780:63: `.filteredOperatorAt(address(this), 0)`
$DIR/test/OperatorFilterRegistry.t.sol:787:9-787:32: `vm.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:787:11-787:31: `.etch(toCheck, code)`
$DIR/test/OperatorFilterRegistry.t.sol:789:9-789:37: `vm.startPrank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:789:11-789:36: `.startPrank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:790:9-790:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:790:17-790:40: `.register(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:791:9-791:63: `registry.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:791:17-791:62: `.updateCodeHash(subscription, codeHash, true)`
$DIR/test/OperatorFilterRegistry.t.sol:792:9-792:24: `vm.stopPrank();`
$DIR/test/OperatorFilterRegistry.t.sol:792:11-792:23: `.stopPrank()`
$DIR/test/OperatorFilterRegistry.t.sol:793:9-793:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:793:17-793:67: `.registerAndSubscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:794:26-794:63: `.filteredCodeHashAt(address(this), 0)`
$DIR/test/OperatorFilterRegistry.t.sol:798:9-798:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:798:17-798:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:800:29-800:70: `.isRegistered(makeAddr("not registered"))`
$DIR/test/OperatorFilterRegistry.t.sol:804:28-804:82: `.isOperatorAllowed(address(this), makeAddr("allowed"))`
$DIR/test/OperatorFilterRegistry.t.sol:812:9-812:32: `vm.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:812:11-812:31: `.etch(toCheck, code)`
$DIR/test/OperatorFilterRegistry.t.sol:813:9-813:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:813:17-813:41: `.register(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:814:9-814:64: `registry.updateOperator(address(this), operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:814:17-814:63: `.updateOperator(address(this), operator, true)`
$DIR/test/OperatorFilterRegistry.t.sol:815:9-815:64: `registry.updateCodeHash(address(this), codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:815:17-815:63: `.updateCodeHash(address(this), codeHash, true)`
$DIR/test/OperatorFilterRegistry.t.sol:829:9-829:32: `vm.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:829:11-829:31: `.etch(toCheck, code)`
$DIR/test/OperatorFilterRegistry.t.sol:831:9-831:37: `vm.startPrank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:831:11-831:36: `.startPrank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:832:9-832:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:832:17-832:40: `.register(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:833:9-833:63: `registry.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:833:17-833:62: `.updateOperator(subscription, operator, true)`
$DIR/test/OperatorFilterRegistry.t.sol:834:9-834:63: `registry.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:834:17-834:62: `.updateCodeHash(subscription, codeHash, true)`
$DIR/test/OperatorFilterRegistry.t.sol:835:9-835:24: `vm.stopPrank();`
$DIR/test/OperatorFilterRegistry.t.sol:835:11-835:23: `.stopPrank()`
$DIR/test/OperatorFilterRegistry.t.sol:836:9-836:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:836:17-836:67: `.registerAndSubscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:847:9-847:32: `vm.prank(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:847:11-847:31: `.prank(subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:849:9-849:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:849:17-849:67: `.registerAndSubscribe(address(this), subscription)`
$DIR/test/OperatorFilterRegistry.t.sol:855:9-855:44: `registry.unregister(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:855:17-855:43: `.unregister(address(this))`
$DIR/test/OperatorFilterer.t.sol:37:9-37:40: `vm.startPrank(filteredAddress);`
$DIR/test/OperatorFilterer.t.sol:37:11-37:39: `.startPrank(filteredAddress)`
$DIR/test/OperatorFilterer.t.sol:40:9-40:24: `vm.stopPrank();`
$DIR/test/OperatorFilterer.t.sol:40:11-40:23: `.stopPrank()`
$DIR/test/OperatorFilterer.t.sol:41:9-41:48: `vm.startPrank(filteredCodeHashAddress);`
$DIR/test/OperatorFilterer.t.sol:41:11-41:47: `.startPrank(filteredCodeHashAddress)`
$DIR/test/OperatorFilterer.t.sol:49:9-49:25: `vm.recordLogs();`
$DIR/test/OperatorFilterer.t.sol:49:11-49:24: `.recordLogs()`
$DIR/test/OperatorFilterer.t.sol:51:34-51:52: `.getRecordedLogs()`
$DIR/test/OperatorFilterer.t.sol:60:66-60:90: `.getNonce(address(this))`
$DIR/test/OperatorFilterer.t.sol:71:66-71:90: `.getNonce(address(this))`
$DIR/test/OperatorFilterer.t.sol:76:9-76:25: `vm.recordLogs();`
$DIR/test/OperatorFilterer.t.sol:76:11-76:24: `.recordLogs()`
$DIR/test/OperatorFilterer.t.sol:77:9-77:63: `new ConcreteOperatorFilterer(address(filterer), true);`
$DIR/test/OperatorFilterer.t.sol:82:9-82:40: `vm.etch(address(registry), "");`
$DIR/test/OperatorFilterer.t.sol:82:11-82:39: `.etch(address(registry), "")`
$DIR/test/OperatorFilterer.t.sol:84:29-84:53: `.testFilter(notFiltered)`
$DIR/test/OwnedRegistrant.t.sol:25:9-25:77: `registry.updateOperator(address(registrant), filteredAddress, true);`
$DIR/test/OwnedRegistrant.t.sol:25:17-25:76: `.updateOperator(address(registrant), filteredAddress, true)`
$DIR/test/OwnedRegistrant.t.sol:26:28-26:85: `.isOperatorFiltered(address(registrant), filteredAddress)`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:37:9-37:40: `vm.startPrank(filteredAddress);`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:37:11-37:39: `.startPrank(filteredAddress)`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:40:9-40:24: `vm.stopPrank();`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:40:11-40:23: `.stopPrank()`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:41:9-41:48: `vm.startPrank(filteredCodeHashAddress);`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:41:11-41:47: `.startPrank(filteredCodeHashAddress)`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:47:9-47:40: `vm.startPrank(filteredAddress);`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:47:11-47:39: `.startPrank(filteredAddress)`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:50:9-50:24: `vm.stopPrank();`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:50:11-50:23: `.stopPrank()`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:52:9-52:45: `vm.startPrank(DEFAULT_SUBSCRIPTION);`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:52:11-52:44: `.startPrank(DEFAULT_SUBSCRIPTION)`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:53:9-53:66: `filterer.updateOperatorFilterRegistryAddress(address(0));`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:53:17-53:65: `.updateOperatorFilterRegistryAddress(address(0))`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:55:9-55:24: `vm.stopPrank();`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:55:11-55:23: `.stopPrank()`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:61:9-61:45: `vm.startPrank(DEFAULT_SUBSCRIPTION);`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:61:11-61:44: `.startPrank(DEFAULT_SUBSCRIPTION)`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:62:9-62:49: `filterer.revokeOperatorFilterRegistry();`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:62:17-62:48: `.revokeOperatorFilterRegistry()`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:68:9-68:24: `vm.stopPrank();`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:68:11-68:23: `.stopPrank()`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:70:9-70:40: `vm.startPrank(filteredAddress);`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:70:11-70:39: `.startPrank(filteredAddress)`
$DIR/test/RevokableOperatorFilterer.t.sol:43:9-43:40: `vm.startPrank(filteredAddress);`
$DIR/test/RevokableOperatorFilterer.t.sol:43:11-43:39: `.startPrank(filteredAddress)`
$DIR/test/RevokableOperatorFilterer.t.sol:46:9-46:24: `vm.stopPrank();`
$DIR/test/RevokableOperatorFilterer.t.sol:46:11-46:23: `.stopPrank()`
$DIR/test/RevokableOperatorFilterer.t.sol:47:9-47:48: `vm.startPrank(filteredCodeHashAddress);`
$DIR/test/RevokableOperatorFilterer.t.sol:47:11-47:47: `.startPrank(filteredCodeHashAddress)`
$DIR/test/RevokableOperatorFilterer.t.sol:55:9-55:25: `vm.recordLogs();`
$DIR/test/RevokableOperatorFilterer.t.sol:55:11-55:24: `.recordLogs()`
$DIR/test/RevokableOperatorFilterer.t.sol:57:34-57:52: `.getRecordedLogs()`
$DIR/test/RevokableOperatorFilterer.t.sol:66:66-66:90: `.getNonce(address(this))`
$DIR/test/RevokableOperatorFilterer.t.sol:77:66-77:90: `.getNonce(address(this))`
$DIR/test/RevokableOperatorFilterer.t.sol:82:9-82:25: `vm.recordLogs();`
$DIR/test/RevokableOperatorFilterer.t.sol:82:11-82:24: `.recordLogs()`
$DIR/test/RevokableOperatorFilterer.t.sol:83:9-83:91: `new ConcreteRevokableOperatorFilterer(address(registry), address(filterer), true);`
$DIR/test/RevokableOperatorFilterer.t.sol:88:9-88:40: `vm.etch(address(registry), "");`
$DIR/test/RevokableOperatorFilterer.t.sol:88:11-88:39: `.etch(address(registry), "")`
$DIR/test/RevokableOperatorFilterer.t.sol:90:29-90:53: `.testFilter(notFiltered)`
$DIR/test/RevokableOperatorFilterer.t.sol:95:9-95:67: `filterer.updateOperatorFilterRegistryAddress(newRegistry);`
$DIR/test/RevokableOperatorFilterer.t.sol:95:17-95:66: `.updateOperatorFilterRegistryAddress(newRegistry)`
$DIR/test/RevokableOperatorFilterer.t.sol:96:34-96:59: `.operatorFilterRegistry()`
$DIR/test/RevokableOperatorFilterer.t.sol:100:9-100:45: `vm.startPrank(makeAddr("notOwner"));`
$DIR/test/RevokableOperatorFilterer.t.sol:100:11-100:44: `.startPrank(makeAddr("notOwner"))`
$DIR/test/RevokableOperatorFilterer.t.sol:106:9-106:66: `filterer.updateOperatorFilterRegistryAddress(address(0));`
$DIR/test/RevokableOperatorFilterer.t.sol:106:17-106:65: `.updateOperatorFilterRegistryAddress(address(0))`
$DIR/test/RevokableOperatorFilterer.t.sol:107:9-107:35: `vm.prank(filteredAddress);`
$DIR/test/RevokableOperatorFilterer.t.sol:107:11-107:34: `.prank(filteredAddress)`
$DIR/test/RevokableOperatorFilterer.t.sol:112:9-112:73: `filterer.updateOperatorFilterRegistryAddress(address(registry));`
$DIR/test/RevokableOperatorFilterer.t.sol:112:17-112:72: `.updateOperatorFilterRegistryAddress(address(registry))`
$DIR/test/RevokableOperatorFilterer.t.sol:113:9-113:40: `vm.startPrank(filteredAddress);`
$DIR/test/RevokableOperatorFilterer.t.sol:113:11-113:39: `.startPrank(filteredAddress)`
$DIR/test/RevokableOperatorFilterer.t.sol:116:9-116:24: `vm.stopPrank();`
$DIR/test/RevokableOperatorFilterer.t.sol:116:11-116:23: `.stopPrank()`
$DIR/test/RevokableOperatorFilterer.t.sol:118:9-118:49: `filterer.revokeOperatorFilterRegistry();`
$DIR/test/RevokableOperatorFilterer.t.sol:118:17-118:48: `.revokeOperatorFilterRegistry()`
$DIR/test/RevokableOperatorFilterer.t.sol:119:9-119:35: `vm.prank(filteredAddress);`
$DIR/test/RevokableOperatorFilterer.t.sol:119:11-119:34: `.prank(filteredAddress)`
$DIR/test/UpdatableOperatorFilterer.t.sol:45:9-45:40: `vm.startPrank(filteredAddress);`
$DIR/test/UpdatableOperatorFilterer.t.sol:45:11-45:39: `.startPrank(filteredAddress)`
$DIR/test/UpdatableOperatorFilterer.t.sol:48:9-48:24: `vm.stopPrank();`
$DIR/test/UpdatableOperatorFilterer.t.sol:48:11-48:23: `.stopPrank()`
$DIR/test/UpdatableOperatorFilterer.t.sol:49:9-49:48: `vm.startPrank(filteredCodeHashAddress);`
$DIR/test/UpdatableOperatorFilterer.t.sol:49:11-49:47: `.startPrank(filteredCodeHashAddress)`
$DIR/test/UpdatableOperatorFilterer.t.sol:57:9-57:25: `vm.recordLogs();`
$DIR/test/UpdatableOperatorFilterer.t.sol:57:11-57:24: `.recordLogs()`
$DIR/test/UpdatableOperatorFilterer.t.sol:59:34-59:52: `.getRecordedLogs()`
$DIR/test/UpdatableOperatorFilterer.t.sol:68:66-68:90: `.getNonce(address(this))`
$DIR/test/UpdatableOperatorFilterer.t.sol:79:66-79:90: `.getNonce(address(this))`
$DIR/test/UpdatableOperatorFilterer.t.sol:84:9-84:25: `vm.recordLogs();`
$DIR/test/UpdatableOperatorFilterer.t.sol:84:11-84:24: `.recordLogs()`
$DIR/test/UpdatableOperatorFilterer.t.sol:85:9-85:91: `new ConcreteUpdatableOperatorFilterer(address(registry), address(filterer), true);`
$DIR/test/UpdatableOperatorFilterer.t.sol:90:9-90:40: `vm.etch(address(registry), "");`
$DIR/test/UpdatableOperatorFilterer.t.sol:90:11-90:39: `.etch(address(registry), "")`
$DIR/test/UpdatableOperatorFilterer.t.sol:92:29-92:53: `.testFilter(notFiltered)`
$DIR/test/UpdatableOperatorFilterer.t.sol:97:9-97:67: `filterer.updateOperatorFilterRegistryAddress(newRegistry);`
$DIR/test/UpdatableOperatorFilterer.t.sol:97:17-97:66: `.updateOperatorFilterRegistryAddress(newRegistry)`
$DIR/test/UpdatableOperatorFilterer.t.sol:98:34-98:59: `.operatorFilterRegistry()`
$DIR/test/UpdatableOperatorFilterer.t.sol:102:9-102:45: `vm.startPrank(makeAddr("notOwner"));`
$DIR/test/UpdatableOperatorFilterer.t.sol:102:11-102:44: `.startPrank(makeAddr("notOwner"))`
$DIR/test/UpdatableOperatorFilterer.t.sol:108:9-108:66: `filterer.updateOperatorFilterRegistryAddress(address(0));`
$DIR/test/UpdatableOperatorFilterer.t.sol:108:17-108:65: `.updateOperatorFilterRegistryAddress(address(0))`
$DIR/test/UpdatableOperatorFilterer.t.sol:109:9-109:35: `vm.prank(filteredAddress);`
$DIR/test/UpdatableOperatorFilterer.t.sol:109:11-109:34: `.prank(filteredAddress)`
$DIR/test/UpdatableOperatorFilterer.t.sol:113:9-113:73: `filterer.updateOperatorFilterRegistryAddress(address(registry));`
$DIR/test/UpdatableOperatorFilterer.t.sol:113:17-113:72: `.updateOperatorFilterRegistryAddress(address(registry))`
$DIR/test/UpdatableOperatorFilterer.t.sol:114:9-114:40: `vm.startPrank(filteredAddress);`
$DIR/test/UpdatableOperatorFilterer.t.sol:114:11-114:39: `.startPrank(filteredAddress)`
$DIR/test/example/ExampleERC1155.t.sol:36:9-36:49: `vm.startPrank(address(filteredAddress));`
$DIR/test/example/ExampleERC1155.t.sol:36:11-36:48: `.startPrank(address(filteredAddress))`
$DIR/test/example/ExampleERC1155.t.sol:40:9-40:20: `ids[0] = 1;`
$DIR/test/example/ExampleERC1155.t.sol:42:9-42:24: `amounts[0] = 1;`
$DIR/test/example/ExampleERC1155.t.sol:49:9-49:32: `example.mint(alice, 1);`
$DIR/test/example/ExampleERC1155.t.sol:49:16-49:31: `.mint(alice, 1)`
$DIR/test/example/ExampleERC1155.t.sol:51:9-51:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/ExampleERC1155.t.sol:51:11-51:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/ExampleERC1155.t.sol:54:9-54:25: `vm.prank(alice);`
$DIR/test/example/ExampleERC1155.t.sol:54:11-54:24: `.prank(alice)`
$DIR/test/example/ExampleERC1155.t.sol:60:9-60:32: `example.mint(alice, 1);`
$DIR/test/example/ExampleERC1155.t.sol:60:16-60:31: `.mint(alice, 1)`
$DIR/test/example/ExampleERC1155.t.sol:62:9-62:20: `ids[0] = 1;`
$DIR/test/example/ExampleERC1155.t.sol:64:9-64:24: `amounts[0] = 1;`
$DIR/test/example/ExampleERC1155.t.sol:66:9-66:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/ExampleERC1155.t.sol:66:11-66:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/ExampleERC1155.t.sol:69:9-69:25: `vm.prank(alice);`
$DIR/test/example/ExampleERC1155.t.sol:69:11-69:24: `.prank(alice)`
$DIR/test/example/ExampleERC1155.t.sol:76:9-76:30: `example.mint(bob, 1);`
$DIR/test/example/ExampleERC1155.t.sol:76:16-76:29: `.mint(bob, 1)`
$DIR/test/example/ExampleERC1155.t.sol:78:9-78:23: `vm.prank(bob);`
$DIR/test/example/ExampleERC1155.t.sol:78:11-78:22: `.prank(bob)`
$DIR/test/example/ExampleERC1155.t.sol:81:9-81:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/ExampleERC1155.t.sol:81:11-81:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/ExampleERC1155.t.sol:84:9-84:30: `vm.startPrank(alice);`
$DIR/test/example/ExampleERC1155.t.sol:84:11-84:29: `.startPrank(alice)`
$DIR/test/example/ExampleERC1155.t.sol:92:9-92:30: `example.mint(bob, 1);`
$DIR/test/example/ExampleERC1155.t.sol:92:16-92:29: `.mint(bob, 1)`
$DIR/test/example/ExampleERC1155.t.sol:94:9-94:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/ExampleERC1155.t.sol:94:11-94:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/ExampleERC1155.t.sol:97:9-97:28: `vm.startPrank(bob);`
$DIR/test/example/ExampleERC1155.t.sol:97:11-97:27: `.startPrank(bob)`
$DIR/test/example/ExampleERC1155.t.sol:105:27-105:73: `.supportsInterface(type(IERC2981).interfaceId)`
$DIR/test/example/ExampleERC721.t.sol:36:9-36:49: `vm.startPrank(address(filteredAddress));`
$DIR/test/example/ExampleERC721.t.sol:36:11-36:48: `.startPrank(address(filteredAddress))`
$DIR/test/example/ExampleERC721.t.sol:47:9-47:32: `example.mint(alice, 1);`
$DIR/test/example/ExampleERC721.t.sol:47:16-47:31: `.mint(alice, 1)`
$DIR/test/example/ExampleERC721.t.sol:49:9-49:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/ExampleERC721.t.sol:49:11-49:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/ExampleERC721.t.sol:52:9-52:25: `vm.prank(alice);`
$DIR/test/example/ExampleERC721.t.sol:52:11-52:24: `.prank(alice)`
$DIR/test/example/ExampleERC721.t.sol:58:9-58:32: `example.mint(alice, 1);`
$DIR/test/example/ExampleERC721.t.sol:58:16-58:31: `.mint(alice, 1)`
$DIR/test/example/ExampleERC721.t.sol:59:9-59:32: `example.mint(alice, 2);`
$DIR/test/example/ExampleERC721.t.sol:59:16-59:31: `.mint(alice, 2)`
$DIR/test/example/ExampleERC721.t.sol:61:9-61:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/ExampleERC721.t.sol:61:11-61:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/ExampleERC721.t.sol:64:9-64:30: `vm.startPrank(alice);`
$DIR/test/example/ExampleERC721.t.sol:64:11-64:29: `.startPrank(alice)`
$DIR/test/example/ExampleERC721.t.sol:65:9-65:60: `example.safeTransferFrom(alice, makeAddr("to"), 1);`
$DIR/test/example/ExampleERC721.t.sol:65:16-65:59: `.safeTransferFrom(alice, makeAddr("to"), 1)`
$DIR/test/example/ExampleERC721.t.sol:72:9-72:30: `example.mint(bob, 1);`
$DIR/test/example/ExampleERC721.t.sol:72:16-72:29: `.mint(bob, 1)`
$DIR/test/example/ExampleERC721.t.sol:73:9-73:23: `vm.prank(bob);`
$DIR/test/example/ExampleERC721.t.sol:73:11-73:22: `.prank(bob)`
$DIR/test/example/ExampleERC721.t.sol:76:9-76:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/ExampleERC721.t.sol:76:11-76:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/ExampleERC721.t.sol:79:9-79:30: `vm.startPrank(alice);`
$DIR/test/example/ExampleERC721.t.sol:79:11-79:29: `.startPrank(alice)`
$DIR/test/example/ExampleERC721.t.sol:87:9-87:30: `example.mint(bob, 1);`
$DIR/test/example/ExampleERC721.t.sol:87:16-87:29: `.mint(bob, 1)`
$DIR/test/example/ExampleERC721.t.sol:89:9-89:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/ExampleERC721.t.sol:89:11-89:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/ExampleERC721.t.sol:92:9-92:28: `vm.startPrank(bob);`
$DIR/test/example/ExampleERC721.t.sol:92:11-92:27: `.startPrank(bob)`
$DIR/test/example/ExampleERC721.t.sol:103:27-103:73: `.supportsInterface(type(IERC2981).interfaceId)`
$DIR/test/example/RevokableERC1155.t.sol:36:9-36:49: `vm.startPrank(address(filteredAddress));`
$DIR/test/example/RevokableERC1155.t.sol:36:11-36:48: `.startPrank(address(filteredAddress))`
$DIR/test/example/RevokableERC1155.t.sol:40:9-40:20: `ids[0] = 1;`
$DIR/test/example/RevokableERC1155.t.sol:42:9-42:24: `amounts[0] = 1;`
$DIR/test/example/RevokableERC1155.t.sol:49:9-49:32: `example.mint(alice, 1);`
$DIR/test/example/RevokableERC1155.t.sol:49:16-49:31: `.mint(alice, 1)`
$DIR/test/example/RevokableERC1155.t.sol:51:9-51:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/RevokableERC1155.t.sol:51:11-51:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/RevokableERC1155.t.sol:54:9-54:25: `vm.prank(alice);`
$DIR/test/example/RevokableERC1155.t.sol:54:11-54:24: `.prank(alice)`
$DIR/test/example/RevokableERC1155.t.sol:60:9-60:32: `example.mint(alice, 1);`
$DIR/test/example/RevokableERC1155.t.sol:60:16-60:31: `.mint(alice, 1)`
$DIR/test/example/RevokableERC1155.t.sol:62:9-62:20: `ids[0] = 1;`
$DIR/test/example/RevokableERC1155.t.sol:64:9-64:24: `amounts[0] = 1;`
$DIR/test/example/RevokableERC1155.t.sol:66:9-66:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/RevokableERC1155.t.sol:66:11-66:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/RevokableERC1155.t.sol:69:9-69:25: `vm.prank(alice);`
$DIR/test/example/RevokableERC1155.t.sol:69:11-69:24: `.prank(alice)`
$DIR/test/example/RevokableERC1155.t.sol:76:9-76:30: `example.mint(bob, 1);`
$DIR/test/example/RevokableERC1155.t.sol:76:16-76:29: `.mint(bob, 1)`
$DIR/test/example/RevokableERC1155.t.sol:78:9-78:23: `vm.prank(bob);`
$DIR/test/example/RevokableERC1155.t.sol:78:11-78:22: `.prank(bob)`
$DIR/test/example/RevokableERC1155.t.sol:81:9-81:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/RevokableERC1155.t.sol:81:11-81:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/RevokableERC1155.t.sol:84:9-84:30: `vm.startPrank(alice);`
$DIR/test/example/RevokableERC1155.t.sol:84:11-84:29: `.startPrank(alice)`
$DIR/test/example/RevokableERC1155.t.sol:92:9-92:30: `example.mint(bob, 1);`
$DIR/test/example/RevokableERC1155.t.sol:92:16-92:29: `.mint(bob, 1)`
$DIR/test/example/RevokableERC1155.t.sol:94:9-94:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/RevokableERC1155.t.sol:94:11-94:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/RevokableERC1155.t.sol:97:9-97:28: `vm.startPrank(bob);`
$DIR/test/example/RevokableERC1155.t.sol:97:11-97:27: `.startPrank(bob)`
$DIR/test/example/RevokableERC1155.t.sol:105:9-105:42: `example.mint(makeAddr("bob"), 1);`
$DIR/test/example/RevokableERC1155.t.sol:105:16-105:41: `.mint(makeAddr("bob"), 1)`
$DIR/test/example/RevokableERC1155.t.sol:107:9-107:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/RevokableERC1155.t.sol:107:11-107:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/RevokableERC1155.t.sol:110:9-110:65: `example.updateOperatorFilterRegistryAddress(address(0));`
$DIR/test/example/RevokableERC1155.t.sol:110:16-110:64: `.updateOperatorFilterRegistryAddress(address(0))`
$DIR/test/example/RevokableERC1155.t.sol:112:9-112:23: `vm.prank(bob);`
$DIR/test/example/RevokableERC1155.t.sol:112:11-112:22: `.prank(bob)`
$DIR/test/example/RevokableERC1155.t.sol:114:9-114:30: `vm.startPrank(alice);`
$DIR/test/example/RevokableERC1155.t.sol:114:11-114:29: `.startPrank(alice)`
$DIR/test/example/RevokableERC1155.t.sol:121:27-121:73: `.supportsInterface(type(IERC2981).interfaceId)`
$DIR/test/example/RevokableERC721.t.sol:36:9-36:49: `vm.startPrank(address(filteredAddress));`
$DIR/test/example/RevokableERC721.t.sol:36:11-36:48: `.startPrank(address(filteredAddress))`
$DIR/test/example/RevokableERC721.t.sol:47:9-47:32: `example.mint(alice, 1);`
$DIR/test/example/RevokableERC721.t.sol:47:16-47:31: `.mint(alice, 1)`
$DIR/test/example/RevokableERC721.t.sol:49:9-49:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/RevokableERC721.t.sol:49:11-49:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/RevokableERC721.t.sol:52:9-52:25: `vm.prank(alice);`
$DIR/test/example/RevokableERC721.t.sol:52:11-52:24: `.prank(alice)`
$DIR/test/example/RevokableERC721.t.sol:58:9-58:32: `example.mint(alice, 1);`
$DIR/test/example/RevokableERC721.t.sol:58:16-58:31: `.mint(alice, 1)`
$DIR/test/example/RevokableERC721.t.sol:59:9-59:32: `example.mint(alice, 2);`
$DIR/test/example/RevokableERC721.t.sol:59:16-59:31: `.mint(alice, 2)`
$DIR/test/example/RevokableERC721.t.sol:61:9-61:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/RevokableERC721.t.sol:61:11-61:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/RevokableERC721.t.sol:64:9-64:30: `vm.startPrank(alice);`
$DIR/test/example/RevokableERC721.t.sol:64:11-64:29: `.startPrank(alice)`
$DIR/test/example/RevokableERC721.t.sol:65:9-65:60: `example.safeTransferFrom(alice, makeAddr("to"), 1);`
$DIR/test/example/RevokableERC721.t.sol:65:16-65:59: `.safeTransferFrom(alice, makeAddr("to"), 1)`
$DIR/test/example/RevokableERC721.t.sol:72:9-72:30: `example.mint(bob, 1);`
$DIR/test/example/RevokableERC721.t.sol:72:16-72:29: `.mint(bob, 1)`
$DIR/test/example/RevokableERC721.t.sol:73:9-73:23: `vm.prank(bob);`
$DIR/test/example/RevokableERC721.t.sol:73:11-73:22: `.prank(bob)`
$DIR/test/example/RevokableERC721.t.sol:76:9-76:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/RevokableERC721.t.sol:76:11-76:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/RevokableERC721.t.sol:79:9-79:30: `vm.startPrank(alice);`
$DIR/test/example/RevokableERC721.t.sol:79:11-79:29: `.startPrank(alice)`
$DIR/test/example/RevokableERC721.t.sol:87:9-87:30: `example.mint(bob, 1);`
$DIR/test/example/RevokableERC721.t.sol:87:16-87:29: `.mint(bob, 1)`
$DIR/test/example/RevokableERC721.t.sol:89:9-89:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/RevokableERC721.t.sol:89:11-89:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/RevokableERC721.t.sol:92:9-92:28: `vm.startPrank(bob);`
$DIR/test/example/RevokableERC721.t.sol:92:11-92:27: `.startPrank(bob)`
$DIR/test/example/RevokableERC721.t.sol:103:9-103:42: `example.mint(makeAddr("bob"), 1);`
$DIR/test/example/RevokableERC721.t.sol:103:16-103:41: `.mint(makeAddr("bob"), 1)`
$DIR/test/example/RevokableERC721.t.sol:105:9-105:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/RevokableERC721.t.sol:105:11-105:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/RevokableERC721.t.sol:108:9-108:65: `example.updateOperatorFilterRegistryAddress(address(0));`
$DIR/test/example/RevokableERC721.t.sol:108:16-108:64: `.updateOperatorFilterRegistryAddress(address(0))`
$DIR/test/example/RevokableERC721.t.sol:110:9-110:23: `vm.prank(bob);`
$DIR/test/example/RevokableERC721.t.sol:110:11-110:22: `.prank(bob)`
$DIR/test/example/RevokableERC721.t.sol:112:9-112:30: `vm.startPrank(alice);`
$DIR/test/example/RevokableERC721.t.sol:112:11-112:29: `.startPrank(alice)`
$DIR/test/example/RevokableERC721.t.sol:119:27-119:73: `.supportsInterface(type(IERC2981).interfaceId)`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:41:9-41:31: `example2.initialize();`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:41:17-41:30: `.initialize()`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:47:9-47:49: `vm.startPrank(address(filteredAddress));`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:47:11-47:48: `.startPrank(address(filteredAddress))`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:51:9-51:20: `ids[0] = 1;`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:53:9-53:24: `amounts[0] = 1;`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:60:9-60:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:60:16-60:31: `.mint(alice, 1)`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:62:9-62:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:62:11-62:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:65:9-65:25: `vm.prank(alice);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:65:11-65:24: `.prank(alice)`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:71:9-71:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:71:16-71:31: `.mint(alice, 1)`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:73:9-73:20: `ids[0] = 1;`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:75:9-75:24: `amounts[0] = 1;`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:77:9-77:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:77:11-77:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:80:9-80:25: `vm.prank(alice);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:80:11-80:24: `.prank(alice)`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:87:9-87:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:87:16-87:29: `.mint(bob, 1)`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:89:9-89:23: `vm.prank(bob);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:89:11-89:22: `.prank(bob)`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:92:9-92:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:92:11-92:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:95:9-95:30: `vm.startPrank(alice);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:95:11-95:29: `.startPrank(alice)`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:103:9-103:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:103:16-103:29: `.mint(bob, 1)`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:105:9-105:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:105:11-105:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:108:9-108:28: `vm.startPrank(bob);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:108:11-108:27: `.startPrank(bob)`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:116:27-116:73: `.supportsInterface(type(IERC2981).interfaceId)`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:41:9-41:31: `example2.initialize();`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:41:17-41:30: `.initialize()`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:47:9-47:49: `vm.startPrank(address(filteredAddress));`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:47:11-47:48: `.startPrank(address(filteredAddress))`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:58:9-58:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:58:16-58:31: `.mint(alice, 1)`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:60:9-60:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:60:11-60:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:63:9-63:25: `vm.prank(alice);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:63:11-63:24: `.prank(alice)`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:69:9-69:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:69:16-69:31: `.mint(alice, 1)`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:70:9-70:32: `example.mint(alice, 2);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:70:16-70:31: `.mint(alice, 2)`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:72:9-72:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:72:11-72:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:75:9-75:30: `vm.startPrank(alice);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:75:11-75:29: `.startPrank(alice)`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:76:9-76:60: `example.safeTransferFrom(alice, makeAddr("to"), 1);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:76:16-76:59: `.safeTransferFrom(alice, makeAddr("to"), 1)`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:83:9-83:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:83:16-83:29: `.mint(bob, 1)`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:84:9-84:23: `vm.prank(bob);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:84:11-84:22: `.prank(bob)`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:87:9-87:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:87:11-87:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:90:9-90:30: `vm.startPrank(alice);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:90:11-90:29: `.startPrank(alice)`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:98:9-98:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:98:16-98:29: `.mint(bob, 1)`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:100:9-100:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:100:11-100:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:103:9-103:28: `vm.startPrank(bob);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:103:11-103:27: `.startPrank(bob)`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:114:27-114:73: `.supportsInterface(type(IERC2981).interfaceId)`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:42:9-42:31: `example2.initialize();`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:42:17-42:30: `.initialize()`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:48:9-48:49: `vm.startPrank(address(filteredAddress));`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:48:11-48:48: `.startPrank(address(filteredAddress))`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:52:9-52:20: `ids[0] = 1;`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:54:9-54:24: `amounts[0] = 1;`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:61:9-61:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:61:16-61:31: `.mint(alice, 1)`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:63:9-63:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:63:11-63:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:66:9-66:25: `vm.prank(alice);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:66:11-66:24: `.prank(alice)`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:72:9-72:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:72:16-72:31: `.mint(alice, 1)`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:74:9-74:20: `ids[0] = 1;`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:76:9-76:24: `amounts[0] = 1;`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:78:9-78:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:78:11-78:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:81:9-81:25: `vm.prank(alice);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:81:11-81:24: `.prank(alice)`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:88:9-88:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:88:16-88:29: `.mint(bob, 1)`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:90:9-90:23: `vm.prank(bob);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:90:11-90:22: `.prank(bob)`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:93:9-93:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:93:11-93:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:96:9-96:30: `vm.startPrank(alice);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:96:11-96:29: `.startPrank(alice)`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:104:9-104:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:104:16-104:29: `.mint(bob, 1)`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:106:9-106:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:106:11-106:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:109:9-109:28: `vm.startPrank(bob);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:109:11-109:27: `.startPrank(bob)`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:117:9-117:42: `example.mint(makeAddr("bob"), 1);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:117:16-117:41: `.mint(makeAddr("bob"), 1)`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:119:9-119:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:119:11-119:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:122:9-122:48: `example.revokeOperatorFilterRegistry();`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:122:16-122:47: `.revokeOperatorFilterRegistry()`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:124:9-124:23: `vm.prank(bob);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:124:11-124:22: `.prank(bob)`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:126:9-126:30: `vm.startPrank(alice);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:126:11-126:29: `.startPrank(alice)`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:133:27-133:73: `.supportsInterface(type(IERC2981).interfaceId)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:41:9-41:31: `example2.initialize();`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:41:17-41:30: `.initialize()`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:47:9-47:49: `vm.startPrank(address(filteredAddress));`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:47:11-47:48: `.startPrank(address(filteredAddress))`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:58:9-58:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:58:16-58:31: `.mint(alice, 1)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:60:9-60:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:60:11-60:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:63:9-63:25: `vm.prank(alice);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:63:11-63:24: `.prank(alice)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:69:9-69:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:69:16-69:31: `.mint(alice, 1)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:70:9-70:32: `example.mint(alice, 2);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:70:16-70:31: `.mint(alice, 2)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:72:9-72:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:72:11-72:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:75:9-75:30: `vm.startPrank(alice);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:75:11-75:29: `.startPrank(alice)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:76:9-76:60: `example.safeTransferFrom(alice, makeAddr("to"), 1);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:76:16-76:59: `.safeTransferFrom(alice, makeAddr("to"), 1)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:83:9-83:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:83:16-83:29: `.mint(bob, 1)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:84:9-84:23: `vm.prank(bob);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:84:11-84:22: `.prank(bob)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:87:9-87:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:87:11-87:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:90:9-90:30: `vm.startPrank(alice);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:90:11-90:29: `.startPrank(alice)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:98:9-98:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:98:16-98:29: `.mint(bob, 1)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:100:9-100:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:100:11-100:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:103:9-103:28: `vm.startPrank(bob);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:103:11-103:27: `.startPrank(bob)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:114:9-114:42: `example.mint(makeAddr("bob"), 1);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:114:16-114:41: `.mint(makeAddr("bob"), 1)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:116:9-116:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:116:11-116:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:119:9-119:48: `example.revokeOperatorFilterRegistry();`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:119:16-119:47: `.revokeOperatorFilterRegistry()`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:121:9-121:23: `vm.prank(bob);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:121:11-121:22: `.prank(bob)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:123:9-123:30: `vm.startPrank(alice);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:123:11-123:29: `.startPrank(alice)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:130:27-130:73: `.supportsInterface(type(IERC2981).interfaceId)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:45:9-45:76: `example2.initialize(address(registry), DEFAULT_SUBSCRIPTION, true);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:45:17-45:75: `.initialize(address(registry), DEFAULT_SUBSCRIPTION, true)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:51:9-51:49: `vm.startPrank(address(filteredAddress));`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:51:11-51:48: `.startPrank(address(filteredAddress))`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:62:9-62:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:62:16-62:31: `.mint(alice, 1)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:64:9-64:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:64:11-64:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:67:9-67:25: `vm.prank(alice);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:67:11-67:24: `.prank(alice)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:73:9-73:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:73:16-73:31: `.mint(alice, 1)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:74:9-74:32: `example.mint(alice, 2);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:74:16-74:31: `.mint(alice, 2)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:76:9-76:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:76:11-76:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:79:9-79:30: `vm.startPrank(alice);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:79:11-79:29: `.startPrank(alice)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:80:9-80:60: `example.safeTransferFrom(alice, makeAddr("to"), 1);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:80:16-80:59: `.safeTransferFrom(alice, makeAddr("to"), 1)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:87:9-87:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:87:16-87:29: `.mint(bob, 1)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:88:9-88:23: `vm.prank(bob);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:88:11-88:22: `.prank(bob)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:91:9-91:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:91:11-91:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:94:9-94:30: `vm.startPrank(alice);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:94:11-94:29: `.startPrank(alice)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:102:9-102:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:102:16-102:29: `.mint(bob, 1)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:104:9-104:40: `vm.prank(DEFAULT_SUBSCRIPTION);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:104:11-104:39: `.prank(DEFAULT_SUBSCRIPTION)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:107:9-107:28: `vm.startPrank(bob);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:107:11-107:27: `.startPrank(bob)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:164:9-164:40: `vm.startPrank(filteredAddress);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:164:11-164:39: `.startPrank(filteredAddress)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:167:9-167:24: `vm.stopPrank();`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:167:11-167:23: `.stopPrank()`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:168:9-168:48: `vm.startPrank(filteredCodeHashAddress);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:168:11-168:47: `.startPrank(filteredCodeHashAddress)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:176:9-176:25: `vm.recordLogs();`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:176:11-176:24: `.recordLogs()`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:178:9-178:68: `filterer2.initialize(address(registry), address(0), false);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:178:18-178:67: `.initialize(address(registry), address(0), false)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:179:34-179:52: `.getRecordedLogs()`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:188:66-188:90: `.getNonce(address(this))`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:196:9-196:25: `vm.recordLogs();`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:196:11-196:24: `.recordLogs()`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:198:9-198:75: `filterer2.initialize(address(registry), address(filterer), false);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:198:18-198:74: `.initialize(address(registry), address(filterer), false)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:200:34-200:52: `.getRecordedLogs()`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:213:66-213:90: `.getNonce(address(this))`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:219:9-219:25: `vm.recordLogs();`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:219:11-219:24: `.recordLogs()`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:221:9-221:74: `filterer2.initialize(address(registry), address(filterer), true);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:221:18-221:73: `.initialize(address(registry), address(filterer), true)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:223:34-223:52: `.getRecordedLogs()`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:234:9-234:40: `vm.etch(address(registry), "");`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:234:11-234:39: `.etch(address(registry), "")`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:236:9-236:68: `filterer2.initialize(address(registry), address(0), false);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:236:18-236:67: `.initialize(address(registry), address(0), false)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:237:29-237:53: `.testFilter(notFiltered)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:242:9-242:67: `filterer.updateOperatorFilterRegistryAddress(newRegistry);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:242:17-242:66: `.updateOperatorFilterRegistryAddress(newRegistry)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:243:34-243:59: `.operatorFilterRegistry()`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:247:9-247:45: `vm.startPrank(makeAddr("notOwner"));`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:247:11-247:44: `.startPrank(makeAddr("notOwner"))`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:253:9-253:66: `filterer.updateOperatorFilterRegistryAddress(address(0));`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:253:17-253:65: `.updateOperatorFilterRegistryAddress(address(0))`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:254:9-254:35: `vm.prank(filteredAddress);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:254:11-254:34: `.prank(filteredAddress)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:258:9-258:73: `filterer.updateOperatorFilterRegistryAddress(address(registry));`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:258:17-258:72: `.updateOperatorFilterRegistryAddress(address(registry))`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:259:9-259:40: `vm.startPrank(filteredAddress);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:259:11-259:39: `.startPrank(filteredAddress)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:268:9-268:71: `updatableFilterer.initialize(stubRegistry, address(0), false);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:268:26-268:70: `.initialize(stubRegistry, address(0), false)`
$DIR/test/upgradeable/RevokableUpgradeableOperatorFilterer.t.sol:30:9-30:49: `filterer.revokeOperatorFilterRegistry();`
$DIR/test/upgradeable/RevokableUpgradeableOperatorFilterer.t.sol:30:17-30:48: `.revokeOperatorFilterRegistry()`
$DIR/test/upgradeable/RevokableUpgradeableOperatorFilterer.t.sol:31:9-31:35: `vm.prank(filteredAddress);`
$DIR/test/upgradeable/RevokableUpgradeableOperatorFilterer.t.sol:31:11-31:34: `.prank(filteredAddress)`
$DIR/test/upgradeable/RevokableUpgradeableOperatorFilterer.t.sol:39:9-39:41: `vm.prank(makeAddr("not owner"));`
$DIR/test/upgradeable/RevokableUpgradeableOperatorFilterer.t.sol:39:11-39:40: `.prank(makeAddr("not owner"))`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:21:9-21:52: `filterer.init(DEFAULT_SUBSCRIPTION, false);`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:21:17-21:51: `.init(DEFAULT_SUBSCRIPTION, false)`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:22:28-22:88: `.isOperatorFiltered(address(filterer), makeAddr("operator"))`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:26:9-26:42: `filterer.init(address(0), false);`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:26:17-26:41: `.init(address(0), false)`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:27:28-27:60: `.isRegistered(address(filterer))`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:31:9-31:37: `vm.prank(address(filterer));`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:31:11-31:36: `.prank(address(filterer))`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:33:9-33:51: `filterer.init(DEFAULT_SUBSCRIPTION, true);`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:33:17-33:50: `.init(DEFAULT_SUBSCRIPTION, true)`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:35:26-35:60: `.subscriptionOf(address(filterer))`
$DIR/test/validation/Validation.t.sol:92:26-92:71: `.supportsInterface(type(IERC721).interfaceId)`
$DIR/test/validation/Validation.t.sol:94:17-94:31: `_testERC721();`
$DIR/test/validation/Validation.t.sol:96:34-96:80: `.supportsInterface(type(IERC1155).interfaceId)`
$DIR/test/validation/Validation.t.sol:97:21-97:36: `_testERC1155();`
$DIR/test/validation/Validation.t.sol:101:21-101:35: `_testERC721();`
$DIR/test/validation/Validation.t.sol:107:13-107:27: `_testERC721();`
