$DIR/test/OperatorFilterRegistry.t.sol:51:9-51:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:51:17-51:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:54:26-54:60: `.subscriptionOf(address(filterer))`
$DIR/test/OperatorFilterRegistry.t.sol:64:9-64:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:64:17-64:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:77:9-77:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:77:17-77:68: `.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:80:26-80:56: `.subscriberAt(subscription, 0)`
$DIR/test/OperatorFilterRegistry.t.sol:91:9-91:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:91:17-91:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:118:9-118:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:118:17-118:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:119:9-119:76: `registry.updateOperator(address(this), makeAddr("operator"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:119:17-119:76: `.updateOperator(address(this), makeAddr("operator"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:120:9-120:83: `registry.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:120:17-120:83: `.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:127:9-127:66: `registry.copyEntriesOf(address(filterer), address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:127:17-127:66: `.copyEntriesOf(address(filterer), address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:132:26-132:67: `.filteredCodeHashAt(address(filterer), 0)`
$DIR/test/OperatorFilterRegistry.t.sol:142:9-142:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:142:17-142:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:148:9-148:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:148:17-148:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:159:9-159:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:159:17-159:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:162:9-162:76: `registry.updateOperator(address(this), makeAddr("operator"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:162:17-162:76: `.updateOperator(address(this), makeAddr("operator"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:164:26-164:63: `.filteredOperatorAt(address(this), 0)`
$DIR/test/OperatorFilterRegistry.t.sol:182:9-182:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:182:17-182:68: `.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:188:9-188:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:188:17-188:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:189:9-189:76: `registry.updateOperator(address(this), makeAddr("operator"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:189:17-189:76: `.updateOperator(address(this), makeAddr("operator"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:192:9-192:77: `registry.updateOperator(address(this), makeAddr("operator"), false);`
$DIR/test/OperatorFilterRegistry.t.sol:192:17-192:77: `.updateOperator(address(this), makeAddr("operator"), false);`
$DIR/test/OperatorFilterRegistry.t.sol:199:9-199:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:199:17-199:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:205:9-205:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:205:17-205:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:206:9-206:76: `registry.updateOperator(address(this), makeAddr("operator"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:206:17-206:76: `.updateOperator(address(this), makeAddr("operator"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:212:9-212:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:212:17-212:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:215:9-215:83: `registry.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:215:17-215:83: `.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:217:26-217:63: `.filteredCodeHashAt(address(this), 0)`
$DIR/test/OperatorFilterRegistry.t.sol:227:9-227:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:227:17-227:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:241:9-241:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:241:17-241:68: `.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:247:9-247:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:247:17-247:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:248:9-248:83: `registry.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:248:17-248:83: `.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:251:9-251:84: `registry.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), false);`
$DIR/test/OperatorFilterRegistry.t.sol:251:17-251:84: `.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), false);`
$DIR/test/OperatorFilterRegistry.t.sol:258:9-258:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:258:17-258:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:264:9-264:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:264:17-264:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:265:9-265:83: `registry.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:265:17-265:83: `.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:271:9-271:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:271:17-271:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:274:9-274:45: `operator[0] = makeAddr("operator1");`
$DIR/test/OperatorFilterRegistry.t.sol:275:9-275:45: `operator[1] = makeAddr("operator2");`
$DIR/test/OperatorFilterRegistry.t.sol:278:9-278:65: `registry.updateOperators(address(this), operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:278:17-278:65: `.updateOperators(address(this), operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:282:26-282:63: `.filteredOperatorAt(address(this), 1)`
$DIR/test/OperatorFilterRegistry.t.sol:289:9-289:45: `operator[0] = makeAddr("operator1");`
$DIR/test/OperatorFilterRegistry.t.sol:295:9-295:45: `operator[0] = makeAddr("operator1");`
$DIR/test/OperatorFilterRegistry.t.sol:296:9-296:45: `operator[1] = makeAddr("operator2");`
$DIR/test/OperatorFilterRegistry.t.sol:305:9-305:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:305:17-305:68: `.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:307:9-307:45: `operator[0] = makeAddr("operator1");`
$DIR/test/OperatorFilterRegistry.t.sol:308:9-308:45: `operator[1] = makeAddr("operator2");`
$DIR/test/OperatorFilterRegistry.t.sol:314:9-314:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:314:17-314:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:315:9-315:77: `registry.updateOperator(address(this), makeAddr("operator1"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:315:17-315:77: `.updateOperator(address(this), makeAddr("operator1"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:316:9-316:77: `registry.updateOperator(address(this), makeAddr("operator2"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:316:17-316:77: `.updateOperator(address(this), makeAddr("operator2"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:319:9-319:45: `operator[0] = makeAddr("operator1");`
$DIR/test/OperatorFilterRegistry.t.sol:320:9-320:45: `operator[1] = makeAddr("operator2");`
$DIR/test/OperatorFilterRegistry.t.sol:323:9-323:66: `registry.updateOperators(address(this), operator, false);`
$DIR/test/OperatorFilterRegistry.t.sol:323:17-323:66: `.updateOperators(address(this), operator, false);`
$DIR/test/OperatorFilterRegistry.t.sol:331:9-331:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:331:17-331:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:333:9-333:45: `operator[0] = makeAddr("operator1");`
$DIR/test/OperatorFilterRegistry.t.sol:334:9-334:45: `operator[1] = makeAddr("operator2");`
$DIR/test/OperatorFilterRegistry.t.sol:340:9-340:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:340:17-340:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:341:9-341:77: `registry.updateOperator(address(this), makeAddr("operator1"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:341:17-341:77: `.updateOperator(address(this), makeAddr("operator1"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:342:9-342:77: `registry.updateOperator(address(this), makeAddr("operator2"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:342:17-342:77: `.updateOperator(address(this), makeAddr("operator2"), true);`
$DIR/test/OperatorFilterRegistry.t.sol:344:9-344:45: `operator[0] = makeAddr("operator1");`
$DIR/test/OperatorFilterRegistry.t.sol:345:9-345:45: `operator[1] = makeAddr("operator2");`
$DIR/test/OperatorFilterRegistry.t.sol:351:9-351:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:351:17-351:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:353:9-353:51: `codeHash[0] = bytes32(bytes4(0xdeadbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:354:9-354:51: `codeHash[1] = bytes32(bytes4(0xdeafbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:364:9-364:51: `codeHash[0] = bytes32(bytes4(0xdeadbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:370:9-370:51: `codeHash[0] = bytes32(bytes4(0xdeadbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:371:9-371:51: `codeHash[1] = bytes32(bytes4(0xdeafbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:380:9-380:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:380:17-380:68: `.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:382:9-382:51: `codeHash[0] = bytes32(bytes4(0xdeadbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:383:9-383:51: `codeHash[1] = bytes32(bytes4(0xdeafbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:389:9-389:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:389:17-389:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:390:9-390:83: `registry.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:390:17-390:83: `.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:391:9-391:83: `registry.updateCodeHash(address(this), bytes32(bytes4(0xdeafbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:391:17-391:83: `.updateCodeHash(address(this), bytes32(bytes4(0xdeafbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:394:9-394:51: `codeHash[0] = bytes32(bytes4(0xdeadbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:395:9-395:51: `codeHash[1] = bytes32(bytes4(0xdeafbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:398:9-398:67: `registry.updateCodeHashes(address(this), codeHash, false);`
$DIR/test/OperatorFilterRegistry.t.sol:398:17-398:67: `.updateCodeHashes(address(this), codeHash, false);`
$DIR/test/OperatorFilterRegistry.t.sol:406:9-406:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:406:17-406:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:408:9-408:51: `codeHash[0] = bytes32(bytes4(0xdeadbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:409:9-409:51: `codeHash[1] = bytes32(bytes4(0xdeafbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:415:9-415:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:415:17-415:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:417:9-417:51: `codeHash[0] = bytes32(bytes4(0xdeadbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:418:9-418:37: `codeHash[1] = keccak256("");`
$DIR/test/OperatorFilterRegistry.t.sol:424:9-424:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:424:17-424:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:425:9-425:83: `registry.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:425:17-425:83: `.updateCodeHash(address(this), bytes32(bytes4(0xdeadbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:426:9-426:83: `registry.updateCodeHash(address(this), bytes32(bytes4(0xdeafbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:426:17-426:83: `.updateCodeHash(address(this), bytes32(bytes4(0xdeafbeef)), true);`
$DIR/test/OperatorFilterRegistry.t.sol:428:9-428:51: `codeHash[0] = bytes32(bytes4(0xdeadbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:429:9-429:51: `codeHash[1] = bytes32(bytes4(0xdeafbeef));`
$DIR/test/OperatorFilterRegistry.t.sol:438:9-438:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:438:17-438:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:441:9-441:57: `registry.subscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:441:17-441:57: `.subscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:446:26-446:56: `.subscriberAt(subscription, 0)`
$DIR/test/OperatorFilterRegistry.t.sol:459:9-459:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:459:17-459:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:465:9-465:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:465:17-465:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:482:9-482:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:482:17-482:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:483:9-483:57: `registry.subscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:483:17-483:57: `.subscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:489:9-489:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:489:17-489:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:499:9-499:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:499:17-499:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:500:9-500:60: `registry.subscribe(address(this), oldSubscription);`
$DIR/test/OperatorFilterRegistry.t.sol:500:17-500:60: `.subscribe(address(this), oldSubscription);`
$DIR/test/OperatorFilterRegistry.t.sol:509:9-509:60: `registry.subscribe(address(this), newSubscription);`
$DIR/test/OperatorFilterRegistry.t.sol:509:17-509:60: `.subscribe(address(this), newSubscription);`
$DIR/test/OperatorFilterRegistry.t.sol:515:26-515:59: `.subscriberAt(newSubscription, 0)`
$DIR/test/OperatorFilterRegistry.t.sol:525:9-525:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:525:17-525:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:534:9-534:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:534:17-534:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:535:9-535:57: `registry.subscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:535:17-535:57: `.subscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:539:9-539:52: `registry.unsubscribe(address(this), false);`
$DIR/test/OperatorFilterRegistry.t.sol:539:17-539:52: `.unsubscribe(address(this), false);`
$DIR/test/OperatorFilterRegistry.t.sol:543:26-543:56: `.subscriptionOf(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:555:9-555:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:555:17-555:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:556:9-556:57: `registry.subscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:556:17-556:57: `.subscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:568:9-568:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:568:17-568:41: `.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:569:9-569:63: `registry.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:569:17-569:63: `.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:570:9-570:63: `registry.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:570:17-570:63: `.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:572:9-572:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:572:17-572:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:573:9-573:57: `registry.subscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:573:17-573:57: `.subscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:581:9-581:51: `registry.unsubscribe(address(this), true);`
$DIR/test/OperatorFilterRegistry.t.sol:581:17-581:51: `.unsubscribe(address(this), true);`
$DIR/test/OperatorFilterRegistry.t.sol:583:26-583:56: `.subscriptionOf(address(this))`
$DIR/test/OperatorFilterRegistry.t.sol:592:9-592:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:592:17-592:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:604:9-604:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:604:17-604:41: `.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:605:9-605:63: `registry.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:605:17-605:63: `.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:606:9-606:72: `registry.updateOperator(subscription, duplicateOperator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:606:17-606:72: `.updateOperator(subscription, duplicateOperator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:607:9-607:63: `registry.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:607:17-607:63: `.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:608:9-608:72: `registry.updateCodeHash(subscription, duplicateCodeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:608:17-608:72: `.updateCodeHash(subscription, duplicateCodeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:612:9-612:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:612:17-612:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:613:9-613:73: `registry.updateOperator(address(this), duplicateOperator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:613:17-613:73: `.updateOperator(address(this), duplicateOperator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:614:9-614:73: `registry.updateCodeHash(address(this), duplicateCodeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:614:17-614:73: `.updateCodeHash(address(this), duplicateCodeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:620:9-620:61: `registry.copyEntriesOf(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:620:17-620:61: `.copyEntriesOf(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:632:26-632:63: `.filteredCodeHashAt(address(this), 1)`
$DIR/test/OperatorFilterRegistry.t.sol:636:9-636:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:636:17-636:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:644:9-644:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:644:17-644:41: `.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:646:9-646:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:646:17-646:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:664:9-664:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:664:17-664:41: `.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:665:9-665:63: `registry.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:665:17-665:63: `.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:666:9-666:63: `registry.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:666:17-666:63: `.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:668:9-668:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:668:17-668:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:669:9-669:57: `registry.subscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:669:17-669:57: `.subscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:676:9-676:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:676:17-676:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:686:9-686:32: `vm.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:686:11-686:32: `.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:687:26-687:46: `.codeHashOf(toCheck)`
$DIR/test/OperatorFilterRegistry.t.sol:694:9-694:32: `vm.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:694:11-694:32: `.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:695:9-695:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:695:17-695:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:696:9-696:64: `registry.updateCodeHash(address(this), codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:696:17-696:64: `.updateCodeHash(address(this), codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:698:29-698:91: `.isCodeHashOfFiltered(address(this), makeAddr("not filtered"))`
$DIR/test/OperatorFilterRegistry.t.sol:705:9-705:32: `vm.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:705:11-705:32: `.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:708:9-708:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:708:17-708:41: `.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:709:9-709:63: `registry.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:709:17-709:63: `.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:711:9-711:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:711:17-711:68: `.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:713:29-713:91: `.isCodeHashOfFiltered(address(this), makeAddr("not filtered"))`
$DIR/test/OperatorFilterRegistry.t.sol:720:9-720:32: `vm.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:720:11-720:32: `.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:723:9-723:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:723:17-723:41: `.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:724:9-724:63: `registry.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:724:17-724:63: `.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:726:9-726:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:726:17-726:68: `.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:728:29-728:92: `.isCodeHashFiltered(address(this), bytes32(bytes4(0xdeadbeef)))`
$DIR/test/OperatorFilterRegistry.t.sol:735:9-735:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:735:17-735:41: `.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:736:9-736:63: `registry.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:736:17-736:63: `.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:738:9-738:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:738:17-738:68: `.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:740:29-740:89: `.isOperatorFiltered(address(this), makeAddr("not filtered"))`
$DIR/test/OperatorFilterRegistry.t.sol:747:9-747:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:747:17-747:41: `.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:748:9-748:63: `registry.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:748:17-748:63: `.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:750:9-750:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:750:17-750:68: `.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:753:26-753:63: `.filteredOperatorAt(address(this), 0)`
$DIR/test/OperatorFilterRegistry.t.sol:760:9-760:32: `vm.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:760:11-760:32: `.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:763:9-763:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:763:17-763:41: `.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:764:9-764:63: `registry.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:764:17-764:63: `.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:766:9-766:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:766:17-766:68: `.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:769:26-769:63: `.filteredCodeHashAt(address(this), 0)`
$DIR/test/OperatorFilterRegistry.t.sol:776:9-776:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:776:17-776:41: `.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:777:9-777:63: `registry.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:777:17-777:63: `.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:779:9-779:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:779:17-779:68: `.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:780:26-780:63: `.filteredOperatorAt(address(this), 0)`
$DIR/test/OperatorFilterRegistry.t.sol:787:9-787:32: `vm.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:787:11-787:32: `.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:790:9-790:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:790:17-790:41: `.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:791:9-791:63: `registry.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:791:17-791:63: `.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:793:9-793:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:793:17-793:68: `.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:794:26-794:63: `.filteredCodeHashAt(address(this), 0)`
$DIR/test/OperatorFilterRegistry.t.sol:798:9-798:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:798:17-798:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:800:29-800:70: `.isRegistered(makeAddr("not registered"))`
$DIR/test/OperatorFilterRegistry.t.sol:804:28-804:82: `.isOperatorAllowed(address(this), makeAddr("allowed"))`
$DIR/test/OperatorFilterRegistry.t.sol:812:9-812:32: `vm.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:812:11-812:32: `.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:813:9-813:42: `registry.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:813:17-813:42: `.register(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:814:9-814:64: `registry.updateOperator(address(this), operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:814:17-814:64: `.updateOperator(address(this), operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:815:9-815:64: `registry.updateCodeHash(address(this), codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:815:17-815:64: `.updateCodeHash(address(this), codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:829:9-829:32: `vm.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:829:11-829:32: `.etch(toCheck, code);`
$DIR/test/OperatorFilterRegistry.t.sol:832:9-832:41: `registry.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:832:17-832:41: `.register(subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:833:9-833:63: `registry.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:833:17-833:63: `.updateOperator(subscription, operator, true);`
$DIR/test/OperatorFilterRegistry.t.sol:834:9-834:63: `registry.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:834:17-834:63: `.updateCodeHash(subscription, codeHash, true);`
$DIR/test/OperatorFilterRegistry.t.sol:836:9-836:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:836:17-836:68: `.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:849:9-849:68: `registry.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:849:17-849:68: `.registerAndSubscribe(address(this), subscription);`
$DIR/test/OperatorFilterRegistry.t.sol:855:9-855:44: `registry.unregister(address(this));`
$DIR/test/OperatorFilterRegistry.t.sol:855:17-855:44: `.unregister(address(this));`
$DIR/test/OperatorFilterer.t.sol:49:9-49:25: `vm.recordLogs();`
$DIR/test/OperatorFilterer.t.sol:49:11-49:25: `.recordLogs();`
$DIR/test/OperatorFilterer.t.sol:51:34-51:53: `.getRecordedLogs();`
$DIR/test/OperatorFilterer.t.sol:60:66-60:90: `.getNonce(address(this))`
$DIR/test/OperatorFilterer.t.sol:71:66-71:90: `.getNonce(address(this))`
$DIR/test/OperatorFilterer.t.sol:76:9-76:25: `vm.recordLogs();`
$DIR/test/OperatorFilterer.t.sol:76:11-76:25: `.recordLogs();`
$DIR/test/OperatorFilterer.t.sol:77:9-77:63: `new ConcreteOperatorFilterer(address(filterer), true);`
$DIR/test/OperatorFilterer.t.sol:82:9-82:40: `vm.etch(address(registry), "");`
$DIR/test/OperatorFilterer.t.sol:82:11-82:40: `.etch(address(registry), "");`
$DIR/test/OperatorFilterer.t.sol:84:29-84:53: `.testFilter(notFiltered)`
$DIR/test/OwnedRegistrant.t.sol:25:9-25:77: `registry.updateOperator(address(registrant), filteredAddress, true);`
$DIR/test/OwnedRegistrant.t.sol:25:17-25:77: `.updateOperator(address(registrant), filteredAddress, true);`
$DIR/test/OwnedRegistrant.t.sol:26:28-26:85: `.isOperatorFiltered(address(registrant), filteredAddress)`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:53:9-53:66: `filterer.updateOperatorFilterRegistryAddress(address(0));`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:53:17-53:66: `.updateOperatorFilterRegistryAddress(address(0));`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:62:9-62:49: `filterer.revokeOperatorFilterRegistry();`
$DIR/test/RevokableDefaultOperatorFilterer.t.sol:62:17-62:49: `.revokeOperatorFilterRegistry();`
$DIR/test/RevokableOperatorFilterer.t.sol:55:9-55:25: `vm.recordLogs();`
$DIR/test/RevokableOperatorFilterer.t.sol:55:11-55:25: `.recordLogs();`
$DIR/test/RevokableOperatorFilterer.t.sol:57:34-57:53: `.getRecordedLogs();`
$DIR/test/RevokableOperatorFilterer.t.sol:66:66-66:90: `.getNonce(address(this))`
$DIR/test/RevokableOperatorFilterer.t.sol:77:66-77:90: `.getNonce(address(this))`
$DIR/test/RevokableOperatorFilterer.t.sol:82:9-82:25: `vm.recordLogs();`
$DIR/test/RevokableOperatorFilterer.t.sol:82:11-82:25: `.recordLogs();`
$DIR/test/RevokableOperatorFilterer.t.sol:83:9-83:91: `new ConcreteRevokableOperatorFilterer(address(registry), address(filterer), true);`
$DIR/test/RevokableOperatorFilterer.t.sol:88:9-88:40: `vm.etch(address(registry), "");`
$DIR/test/RevokableOperatorFilterer.t.sol:88:11-88:40: `.etch(address(registry), "");`
$DIR/test/RevokableOperatorFilterer.t.sol:90:29-90:53: `.testFilter(notFiltered)`
$DIR/test/RevokableOperatorFilterer.t.sol:95:9-95:67: `filterer.updateOperatorFilterRegistryAddress(newRegistry);`
$DIR/test/RevokableOperatorFilterer.t.sol:95:17-95:67: `.updateOperatorFilterRegistryAddress(newRegistry);`
$DIR/test/RevokableOperatorFilterer.t.sol:96:34-96:59: `.operatorFilterRegistry()`
$DIR/test/RevokableOperatorFilterer.t.sol:106:9-106:66: `filterer.updateOperatorFilterRegistryAddress(address(0));`
$DIR/test/RevokableOperatorFilterer.t.sol:106:17-106:66: `.updateOperatorFilterRegistryAddress(address(0));`
$DIR/test/RevokableOperatorFilterer.t.sol:112:9-112:73: `filterer.updateOperatorFilterRegistryAddress(address(registry));`
$DIR/test/RevokableOperatorFilterer.t.sol:112:17-112:73: `.updateOperatorFilterRegistryAddress(address(registry));`
$DIR/test/RevokableOperatorFilterer.t.sol:118:9-118:49: `filterer.revokeOperatorFilterRegistry();`
$DIR/test/RevokableOperatorFilterer.t.sol:118:17-118:49: `.revokeOperatorFilterRegistry();`
$DIR/test/UpdatableOperatorFilterer.t.sol:57:9-57:25: `vm.recordLogs();`
$DIR/test/UpdatableOperatorFilterer.t.sol:57:11-57:25: `.recordLogs();`
$DIR/test/UpdatableOperatorFilterer.t.sol:59:34-59:53: `.getRecordedLogs();`
$DIR/test/UpdatableOperatorFilterer.t.sol:68:66-68:90: `.getNonce(address(this))`
$DIR/test/UpdatableOperatorFilterer.t.sol:79:66-79:90: `.getNonce(address(this))`
$DIR/test/UpdatableOperatorFilterer.t.sol:84:9-84:25: `vm.recordLogs();`
$DIR/test/UpdatableOperatorFilterer.t.sol:84:11-84:25: `.recordLogs();`
$DIR/test/UpdatableOperatorFilterer.t.sol:85:9-85:91: `new ConcreteUpdatableOperatorFilterer(address(registry), address(filterer), true);`
$DIR/test/UpdatableOperatorFilterer.t.sol:90:9-90:40: `vm.etch(address(registry), "");`
$DIR/test/UpdatableOperatorFilterer.t.sol:90:11-90:40: `.etch(address(registry), "");`
$DIR/test/UpdatableOperatorFilterer.t.sol:92:29-92:53: `.testFilter(notFiltered)`
$DIR/test/UpdatableOperatorFilterer.t.sol:97:9-97:67: `filterer.updateOperatorFilterRegistryAddress(newRegistry);`
$DIR/test/UpdatableOperatorFilterer.t.sol:97:17-97:67: `.updateOperatorFilterRegistryAddress(newRegistry);`
$DIR/test/UpdatableOperatorFilterer.t.sol:98:34-98:59: `.operatorFilterRegistry()`
$DIR/test/UpdatableOperatorFilterer.t.sol:108:9-108:66: `filterer.updateOperatorFilterRegistryAddress(address(0));`
$DIR/test/UpdatableOperatorFilterer.t.sol:108:17-108:66: `.updateOperatorFilterRegistryAddress(address(0));`
$DIR/test/UpdatableOperatorFilterer.t.sol:113:9-113:73: `filterer.updateOperatorFilterRegistryAddress(address(registry));`
$DIR/test/UpdatableOperatorFilterer.t.sol:113:17-113:73: `.updateOperatorFilterRegistryAddress(address(registry));`
$DIR/test/example/ExampleERC1155.t.sol:40:9-40:20: `ids[0] = 1;`
$DIR/test/example/ExampleERC1155.t.sol:42:9-42:24: `amounts[0] = 1;`
$DIR/test/example/ExampleERC1155.t.sol:49:9-49:32: `example.mint(alice, 1);`
$DIR/test/example/ExampleERC1155.t.sol:49:16-49:32: `.mint(alice, 1);`
$DIR/test/example/ExampleERC1155.t.sol:60:9-60:32: `example.mint(alice, 1);`
$DIR/test/example/ExampleERC1155.t.sol:60:16-60:32: `.mint(alice, 1);`
$DIR/test/example/ExampleERC1155.t.sol:62:9-62:20: `ids[0] = 1;`
$DIR/test/example/ExampleERC1155.t.sol:64:9-64:24: `amounts[0] = 1;`
$DIR/test/example/ExampleERC1155.t.sol:76:9-76:30: `example.mint(bob, 1);`
$DIR/test/example/ExampleERC1155.t.sol:76:16-76:30: `.mint(bob, 1);`
$DIR/test/example/ExampleERC1155.t.sol:92:9-92:30: `example.mint(bob, 1);`
$DIR/test/example/ExampleERC1155.t.sol:92:16-92:30: `.mint(bob, 1);`
$DIR/test/example/ExampleERC1155.t.sol:105:27-105:73: `.supportsInterface(type(IERC2981).interfaceId)`
$DIR/test/example/ExampleERC721.t.sol:47:9-47:32: `example.mint(alice, 1);`
$DIR/test/example/ExampleERC721.t.sol:47:16-47:32: `.mint(alice, 1);`
$DIR/test/example/ExampleERC721.t.sol:58:9-58:32: `example.mint(alice, 1);`
$DIR/test/example/ExampleERC721.t.sol:58:16-58:32: `.mint(alice, 1);`
$DIR/test/example/ExampleERC721.t.sol:59:9-59:32: `example.mint(alice, 2);`
$DIR/test/example/ExampleERC721.t.sol:59:16-59:32: `.mint(alice, 2);`
$DIR/test/example/ExampleERC721.t.sol:65:9-65:60: `example.safeTransferFrom(alice, makeAddr("to"), 1);`
$DIR/test/example/ExampleERC721.t.sol:65:16-65:60: `.safeTransferFrom(alice, makeAddr("to"), 1);`
$DIR/test/example/ExampleERC721.t.sol:72:9-72:30: `example.mint(bob, 1);`
$DIR/test/example/ExampleERC721.t.sol:72:16-72:30: `.mint(bob, 1);`
$DIR/test/example/ExampleERC721.t.sol:87:9-87:30: `example.mint(bob, 1);`
$DIR/test/example/ExampleERC721.t.sol:87:16-87:30: `.mint(bob, 1);`
$DIR/test/example/ExampleERC721.t.sol:103:27-103:73: `.supportsInterface(type(IERC2981).interfaceId)`
$DIR/test/example/RevokableERC1155.t.sol:40:9-40:20: `ids[0] = 1;`
$DIR/test/example/RevokableERC1155.t.sol:42:9-42:24: `amounts[0] = 1;`
$DIR/test/example/RevokableERC1155.t.sol:49:9-49:32: `example.mint(alice, 1);`
$DIR/test/example/RevokableERC1155.t.sol:49:16-49:32: `.mint(alice, 1);`
$DIR/test/example/RevokableERC1155.t.sol:60:9-60:32: `example.mint(alice, 1);`
$DIR/test/example/RevokableERC1155.t.sol:60:16-60:32: `.mint(alice, 1);`
$DIR/test/example/RevokableERC1155.t.sol:62:9-62:20: `ids[0] = 1;`
$DIR/test/example/RevokableERC1155.t.sol:64:9-64:24: `amounts[0] = 1;`
$DIR/test/example/RevokableERC1155.t.sol:76:9-76:30: `example.mint(bob, 1);`
$DIR/test/example/RevokableERC1155.t.sol:76:16-76:30: `.mint(bob, 1);`
$DIR/test/example/RevokableERC1155.t.sol:92:9-92:30: `example.mint(bob, 1);`
$DIR/test/example/RevokableERC1155.t.sol:92:16-92:30: `.mint(bob, 1);`
$DIR/test/example/RevokableERC1155.t.sol:105:9-105:42: `example.mint(makeAddr("bob"), 1);`
$DIR/test/example/RevokableERC1155.t.sol:105:16-105:42: `.mint(makeAddr("bob"), 1);`
$DIR/test/example/RevokableERC1155.t.sol:110:9-110:65: `example.updateOperatorFilterRegistryAddress(address(0));`
$DIR/test/example/RevokableERC1155.t.sol:110:16-110:65: `.updateOperatorFilterRegistryAddress(address(0));`
$DIR/test/example/RevokableERC1155.t.sol:121:27-121:73: `.supportsInterface(type(IERC2981).interfaceId)`
$DIR/test/example/RevokableERC721.t.sol:47:9-47:32: `example.mint(alice, 1);`
$DIR/test/example/RevokableERC721.t.sol:47:16-47:32: `.mint(alice, 1);`
$DIR/test/example/RevokableERC721.t.sol:58:9-58:32: `example.mint(alice, 1);`
$DIR/test/example/RevokableERC721.t.sol:58:16-58:32: `.mint(alice, 1);`
$DIR/test/example/RevokableERC721.t.sol:59:9-59:32: `example.mint(alice, 2);`
$DIR/test/example/RevokableERC721.t.sol:59:16-59:32: `.mint(alice, 2);`
$DIR/test/example/RevokableERC721.t.sol:65:9-65:60: `example.safeTransferFrom(alice, makeAddr("to"), 1);`
$DIR/test/example/RevokableERC721.t.sol:65:16-65:60: `.safeTransferFrom(alice, makeAddr("to"), 1);`
$DIR/test/example/RevokableERC721.t.sol:72:9-72:30: `example.mint(bob, 1);`
$DIR/test/example/RevokableERC721.t.sol:72:16-72:30: `.mint(bob, 1);`
$DIR/test/example/RevokableERC721.t.sol:87:9-87:30: `example.mint(bob, 1);`
$DIR/test/example/RevokableERC721.t.sol:87:16-87:30: `.mint(bob, 1);`
$DIR/test/example/RevokableERC721.t.sol:103:9-103:42: `example.mint(makeAddr("bob"), 1);`
$DIR/test/example/RevokableERC721.t.sol:103:16-103:42: `.mint(makeAddr("bob"), 1);`
$DIR/test/example/RevokableERC721.t.sol:108:9-108:65: `example.updateOperatorFilterRegistryAddress(address(0));`
$DIR/test/example/RevokableERC721.t.sol:108:16-108:65: `.updateOperatorFilterRegistryAddress(address(0));`
$DIR/test/example/RevokableERC721.t.sol:119:27-119:73: `.supportsInterface(type(IERC2981).interfaceId)`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:41:9-41:31: `example2.initialize();`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:41:17-41:31: `.initialize();`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:51:9-51:20: `ids[0] = 1;`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:53:9-53:24: `amounts[0] = 1;`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:60:9-60:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:60:16-60:32: `.mint(alice, 1);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:71:9-71:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:71:16-71:32: `.mint(alice, 1);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:73:9-73:20: `ids[0] = 1;`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:75:9-75:24: `amounts[0] = 1;`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:87:9-87:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:87:16-87:30: `.mint(bob, 1);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:103:9-103:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:103:16-103:30: `.mint(bob, 1);`
$DIR/test/example/upgradeable/ExampleERC1155Upgradeable.t.sol:116:27-116:73: `.supportsInterface(type(IERC2981).interfaceId)`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:41:9-41:31: `example2.initialize();`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:41:17-41:31: `.initialize();`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:58:9-58:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:58:16-58:32: `.mint(alice, 1);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:69:9-69:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:69:16-69:32: `.mint(alice, 1);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:70:9-70:32: `example.mint(alice, 2);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:70:16-70:32: `.mint(alice, 2);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:76:9-76:60: `example.safeTransferFrom(alice, makeAddr("to"), 1);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:76:16-76:60: `.safeTransferFrom(alice, makeAddr("to"), 1);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:83:9-83:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:83:16-83:30: `.mint(bob, 1);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:98:9-98:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:98:16-98:30: `.mint(bob, 1);`
$DIR/test/example/upgradeable/ExampleERC721Upgradeable.t.sol:114:27-114:73: `.supportsInterface(type(IERC2981).interfaceId)`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:42:9-42:31: `example2.initialize();`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:42:17-42:31: `.initialize();`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:52:9-52:20: `ids[0] = 1;`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:54:9-54:24: `amounts[0] = 1;`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:61:9-61:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:61:16-61:32: `.mint(alice, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:72:9-72:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:72:16-72:32: `.mint(alice, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:74:9-74:20: `ids[0] = 1;`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:76:9-76:24: `amounts[0] = 1;`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:88:9-88:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:88:16-88:30: `.mint(bob, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:104:9-104:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:104:16-104:30: `.mint(bob, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:117:9-117:42: `example.mint(makeAddr("bob"), 1);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:117:16-117:42: `.mint(makeAddr("bob"), 1);`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:122:9-122:48: `example.revokeOperatorFilterRegistry();`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:122:16-122:48: `.revokeOperatorFilterRegistry();`
$DIR/test/example/upgradeable/RevokableExampleERC1155Upgradeable.t.sol:133:27-133:73: `.supportsInterface(type(IERC2981).interfaceId)`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:41:9-41:31: `example2.initialize();`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:41:17-41:31: `.initialize();`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:58:9-58:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:58:16-58:32: `.mint(alice, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:69:9-69:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:69:16-69:32: `.mint(alice, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:70:9-70:32: `example.mint(alice, 2);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:70:16-70:32: `.mint(alice, 2);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:76:9-76:60: `example.safeTransferFrom(alice, makeAddr("to"), 1);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:76:16-76:60: `.safeTransferFrom(alice, makeAddr("to"), 1);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:83:9-83:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:83:16-83:30: `.mint(bob, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:98:9-98:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:98:16-98:30: `.mint(bob, 1);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:114:9-114:42: `example.mint(makeAddr("bob"), 1);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:114:16-114:42: `.mint(makeAddr("bob"), 1);`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:119:9-119:48: `example.revokeOperatorFilterRegistry();`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:119:16-119:48: `.revokeOperatorFilterRegistry();`
$DIR/test/example/upgradeable/RevokableExampleERC721Upgradeable.t.sol:130:27-130:73: `.supportsInterface(type(IERC2981).interfaceId)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:45:9-45:76: `example2.initialize(address(registry), DEFAULT_SUBSCRIPTION, true);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:45:17-45:76: `.initialize(address(registry), DEFAULT_SUBSCRIPTION, true);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:62:9-62:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:62:16-62:32: `.mint(alice, 1);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:73:9-73:32: `example.mint(alice, 1);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:73:16-73:32: `.mint(alice, 1);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:74:9-74:32: `example.mint(alice, 2);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:74:16-74:32: `.mint(alice, 2);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:80:9-80:60: `example.safeTransferFrom(alice, makeAddr("to"), 1);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:80:16-80:60: `.safeTransferFrom(alice, makeAddr("to"), 1);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:87:9-87:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:87:16-87:30: `.mint(bob, 1);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:102:9-102:30: `example.mint(bob, 1);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:102:16-102:30: `.mint(bob, 1);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:176:9-176:25: `vm.recordLogs();`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:176:11-176:25: `.recordLogs();`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:178:9-178:68: `filterer2.initialize(address(registry), address(0), false);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:178:18-178:68: `.initialize(address(registry), address(0), false);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:179:34-179:53: `.getRecordedLogs();`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:188:66-188:90: `.getNonce(address(this))`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:196:9-196:25: `vm.recordLogs();`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:196:11-196:25: `.recordLogs();`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:198:9-198:75: `filterer2.initialize(address(registry), address(filterer), false);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:198:18-198:75: `.initialize(address(registry), address(filterer), false);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:200:34-200:53: `.getRecordedLogs();`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:213:66-213:90: `.getNonce(address(this))`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:219:9-219:25: `vm.recordLogs();`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:219:11-219:25: `.recordLogs();`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:221:9-221:74: `filterer2.initialize(address(registry), address(filterer), true);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:221:18-221:74: `.initialize(address(registry), address(filterer), true);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:223:34-223:53: `.getRecordedLogs();`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:234:9-234:40: `vm.etch(address(registry), "");`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:234:11-234:40: `.etch(address(registry), "");`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:236:9-236:68: `filterer2.initialize(address(registry), address(0), false);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:236:18-236:68: `.initialize(address(registry), address(0), false);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:237:29-237:53: `.testFilter(notFiltered)`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:242:9-242:67: `filterer.updateOperatorFilterRegistryAddress(newRegistry);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:242:17-242:67: `.updateOperatorFilterRegistryAddress(newRegistry);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:243:34-243:59: `.operatorFilterRegistry()`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:253:9-253:66: `filterer.updateOperatorFilterRegistryAddress(address(0));`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:253:17-253:66: `.updateOperatorFilterRegistryAddress(address(0));`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:258:9-258:73: `filterer.updateOperatorFilterRegistryAddress(address(registry));`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:258:17-258:73: `.updateOperatorFilterRegistryAddress(address(registry));`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:268:9-268:71: `updatableFilterer.initialize(stubRegistry, address(0), false);`
$DIR/test/example/upgradeable/UpdatableExampleERC721Upgradeable.t.sol:268:26-268:71: `.initialize(stubRegistry, address(0), false);`
$DIR/test/upgradeable/RevokableUpgradeableOperatorFilterer.t.sol:30:9-30:49: `filterer.revokeOperatorFilterRegistry();`
$DIR/test/upgradeable/RevokableUpgradeableOperatorFilterer.t.sol:30:17-30:49: `.revokeOperatorFilterRegistry();`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:21:9-21:52: `filterer.init(DEFAULT_SUBSCRIPTION, false);`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:21:17-21:52: `.init(DEFAULT_SUBSCRIPTION, false);`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:22:28-22:88: `.isOperatorFiltered(address(filterer), makeAddr("operator"))`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:26:9-26:42: `filterer.init(address(0), false);`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:26:17-26:42: `.init(address(0), false);`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:27:28-27:60: `.isRegistered(address(filterer))`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:33:9-33:51: `filterer.init(DEFAULT_SUBSCRIPTION, true);`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:33:17-33:51: `.init(DEFAULT_SUBSCRIPTION, true);`
$DIR/test/upgradeable/UpgradeableOperatorFilterer.t.sol:35:26-35:60: `.subscriptionOf(address(filterer))`
$DIR/test/validation/Validation.t.sol:92:26-92:71: `.supportsInterface(type(IERC721).interfaceId)`
$DIR/test/validation/Validation.t.sol:94:17-94:31: `_testERC721();`
$DIR/test/validation/Validation.t.sol:96:34-96:80: `.supportsInterface(type(IERC1155).interfaceId)`
$DIR/test/validation/Validation.t.sol:97:21-97:36: `_testERC1155();`
$DIR/test/validation/Validation.t.sol:100:21-100:118: `console2.log("ERC165 check returned false for both ERC721 and ERC1155, falling back to ERC721.");`
$DIR/test/validation/Validation.t.sol:100:29-100:118: `.log("ERC165 check returned false for both ERC721 and ERC1155, falling back to ERC721.");`
$DIR/test/validation/Validation.t.sol:101:21-101:35: `_testERC721();`
$DIR/test/validation/Validation.t.sol:106:13-106:76: `console2.log("ERC165 check reverted, falling back to ERC721.");`
$DIR/test/validation/Validation.t.sol:106:21-106:76: `.log("ERC165 check reverted, falling back to ERC721.");`
$DIR/test/validation/Validation.t.sol:107:13-107:27: `_testERC721();`
