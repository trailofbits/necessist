# smoelius: This workflow is largely based on:
# https://docs.github.com/en/actions/managing-issues-and-pull-requests/adding-labels-to-issues#creating-the-workflow

name: Dependabot workflow

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main]

jobs:
  dependabot:
    if: |
      github.actor == 'dependabot[bot]' ||
      github.event_name == 'push'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Check updated files
        if: github.event_name == 'pull_request'
        run: |
          git diff --name-only ${{ github.event.pull_request.base.sha }} | grep .
          ! git diff --name-only ${{ github.event.pull_request.base.sha }} | grep -v '^\.github/workflows/\|\(^\|/\)Cargo\.\(lock\|toml\)$'

      - name: Add `requires release` label
        if: github.event_name == 'pull_request'
        run: |
          PACKAGE="$(expr '${{ github.event.pull_request.title }}' : '^Bump \([^ ]*\) from [^ ]* to [^ ]*$')"
          OLD_VERSION="$(expr '${{ github.event.pull_request.title }}' : '^Bump [^ ]* from \([^ ]*\) to [^ ]*$')"
          NEW_VERSION="$(expr '${{ github.event.pull_request.title }}' : '^Bump [^ ]* from [^ ]* to \([^ ]*\)$')"
          if [ -z "$PACKAGE" ] || [ -z "$OLD_VERSION" ] || [ -z "$NEW_VERSION" ]; then
            echo "Skipping label check - not a version bump PR"
            exit 0
          fi
          if ! cargo update "$PACKAGE@$OLD_VERSION" --precise "$NEW_VERSION"; then
            gh pr edit '${{ github.event.pull_request.number }}' --add-label 'requires release'
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
