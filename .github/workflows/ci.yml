name: CI

on:
  merge_group:
  pull_request:
  schedule:
    - cron: "0 3 * * 3"
  workflow_dispatch:

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        environment: [ubuntu-latest, macos-latest]
        test: [ci, other, third_party_0, third_party_1, trycmd]

    runs-on: ${{ matrix.environment }}

    steps:
      - name: Log github refs
        if: ${{ matrix.test == 'ci' }}
        run: |
          echo '```' >> "$GITHUB_STEP_SUMMARY"
          echo 'github.ref: ${{ github.ref }}' >> "$GITHUB_STEP_SUMMARY"
          echo 'github.sha: ${{ github.sha }}' >> "$GITHUB_STEP_SUMMARY"
          echo '```' >> "$GITHUB_STEP_SUMMARY"

      - uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: |
            ~/.avm
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.dylint_drivers/
            ~/.rustup/toolchains/
            target/dylint/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Rustup
        run: rustup update

      - name: Install CI tools
        if: ${{ matrix.environment == 'ubuntu-latest' && matrix.test == 'ci' }}
        run: |
          rustup +nightly component add clippy rustfmt
          cargo install cargo-dylint dylint-link || true
          cargo install cargo-hack               || true
          cargo install cargo-license            || true
          cargo install cargo-modules            || true
          cargo install cargo-sort               || true
          cargo install cargo-udeps --locked     || true

      - name: Install testing tools
        if: ${{ matrix.test != 'ci' }}
        uses: ./.github/workflows/install-testing-tools

      - name: Test
        run: |
          if [[ '${{ matrix.test }}' != 'other' ]]; then
            cargo test -p necessist --test ${{ matrix.test }} --features=strict -- --nocapture
          else
            cargo test -p necessist --test general
            cargo test -p necessist-core
            cargo test -p necessist-frameworks
          fi

  all-checks:
    needs: [test]

    runs-on: ubuntu-latest

    steps:
      - run: true
