name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  CI: true
  TRYCMD_TIMEOUT_MS: 600000

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        test: [third_party_0, third_party_1, trycmd, other]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy, rustfmt
    
    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - name: Set up environment
      shell: bash
      run: |
        if [[ "${{ runner.os }}" == "Windows" ]]; then
          echo "TEMP=$RUNNER_TEMP" >> $GITHUB_ENV
        else
          echo "TMPDIR=/tmp" >> $GITHUB_ENV
        fi

    - name: Create test directories
      shell: bash
      run: |
        mkdir -p fixtures/basic/test/{__snapshots__,findings,utils/reports}
        mkdir -p fixtures/dry_run_failure/test/{__snapshots__,findings,utils/reports}
        mkdir -p fixtures/cfg/test/{__snapshots__,findings,utils/reports}
        mkdir -p tests/{necessist_db_absent,necessist_db_present}

    - name: Clean artifacts
      shell: bash
      run: |
        rm -f fixtures/basic/necessist.db
        rm -f fixtures/dry_run_failure/necessist.db
        rm -f fixtures/cfg/necessist.db

    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --test ${{ matrix.test }} -- --nocapture --test-threads=1
      env:
        RUST_TEST_THREADS: 1
        CARGO_INCREMENTAL: 0
        RUSTFLAGS: "-C debuginfo=0"
        RUST_LOG: debug

    - name: Upload test logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-logs-${{ matrix.os }}-${{ matrix.test }}
        path: |
          tests/**/*.stdout
          tests/**/*.stderr
          tests/**/*.toml
          fixtures/**/*.db
        retention-days: 7

  clippy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: clippy
    
    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2
    
    - name: Run clippy
      uses: actions-rs/clippy-check@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        args: -- -D warnings

  fmt:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
    
    - name: Run rustfmt
      run: cargo fmt -- --check
